package com.xoa.dao.attendance;

import com.xoa.model.attendance.UserDuty;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface UserDutyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_duty
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer udid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_duty
     *
     * @mbggenerated
     */
    int insert(UserDuty record);

    /**
     * 考勤机插入
     */
    int insertSelective(UserDuty record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_duty
     *
     * @mbggenerated
     */
    UserDuty selectByPrimaryKey(Integer udid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_duty
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserDuty record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_duty
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(UserDuty record);

    /**
     * 根据用户uid和时间获得userDuty
     */
    UserDuty userDuty(@Param("uid") Integer uid, @Param("date") String date);

    /*
     * 停用删除当前排班所有的uid（类型为 1 排班添加的）
     */
    Integer deleteUserDutyByUidList(@Param("uidList") List<Integer> uidList,@Param("addType") String addType);

    /**
     * 启用或保存是插入排班人员
     */
    int insertUserDutyByValues(@Param("listDuty") List<UserDuty> listDuty, @Param("addType")Integer addType);

    /**
     * 根据uid和时间删除数据
     */
    int deleteUserDutyByUidAndDate(@Param("uid") String uid, @Param("dateList") List dateList , @Param("addType") String addType);

    /**
     * 获取符合条件的人员
     */
    List<Integer> getUserDutyListByMap(@Param("map") Map<String, Object> map);

    /**
     * 获取总条数
     */
    Integer getTotalByMap(@Param("mapCount") Map<String, Object> map);


    /**
     * 根据uid查询
     */
    List<UserDuty> getUserDutyListByUidList(@Param("uidList") List uidList, @Param("dutyMap") Map map);


    /**
     * 根据uid和时间区间查询userDuty  List
     */
    List<UserDuty> getUserDutyListByUidAndDates(@Param("uid") Integer uid, @Param("beginDate") String beginDate,
                                                @Param("endDate") String endDate);

    /**
     * lr 删除时间在区间的记录
     */
    int deleteDutyByMap(Map map);


    /**
     * 可以根据多人和时间区间获取排班信息
     */
    List<UserDuty> getUserDutyListByUserIdsAndDates(@Param("queryUserDutyMap") Map queryUserDutyMap);

    /**
     * 停用删除当前排班所有的uid
     */
    int deleteUserDutyByUidListAndDate(@Param("deleteMap") Map deleteMap);

    /**
     * 删除数据时  修改对应的 添加类型
     */
    int updateByAddType(Map map);

    // 获取某个用户的最后一次排班时间
    UserDuty getLastUserDuty(@Param("uid")int uid);

}