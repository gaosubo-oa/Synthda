package com.xoa.dao.qiyeWeixin;

import com.xoa.model.qiyeWeixin.UserWeixinqy;
import com.xoa.model.qiyeWeixin.UserWeixinqyExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface UserWeixinqyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int countByExample(UserWeixinqyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int deleteByExample(UserWeixinqyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int insert(UserWeixinqy record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int insertSelective(UserWeixinqy record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    List<UserWeixinqy> selectByExample(UserWeixinqyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") UserWeixinqy record, @Param("example") UserWeixinqyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_weixinqy
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") UserWeixinqy record, @Param("example") UserWeixinqyExample example);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 根据企业微信中的userId（openId）获取用户信息
     */
    UserWeixinqy selUserByOpenId(@Param("openId") String openId);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 根据oa中的userId获取用户信息
     */
    UserWeixinqy selUserByUserId(@Param("userId") String userId);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 根据企业微信中的userId（openId）更新用户信息
     */
    int updateUserByOpenId(UserWeixinqy userWeixinqy);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 根据企业微信中的userId（openId）更新用户信息
     */
    int updateUserByUserId(UserWeixinqy userWeixinqy);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 查询所有已经绑定的用户
     */
    List<UserWeixinqy> selAllBindUsers();

    /**
     * @作者: 张航宁
     * @时间: 2019/6/25
     * @说明: 根据userId或者openId删除
     */
    int deleteByOpenIdOrUserId(@Param("openId") String openId,@Param("userId") String userId);

    /**
     * @作者: 张航宁
     * @时间: 2019/12/18
     * @说明: 根据userids查询信息
     */
    List<UserWeixinqy> selUsersByUserIds(@Param("userIds") List<String> userIds);


    List<UserWeixinqy> selUsersByUserId(@Param("userId") String userId);

    List<UserWeixinqy> selUsersByOpenId(@Param("openId") String openId);
}