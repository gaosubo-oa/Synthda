package com.xoa.dao.institution;

import com.xoa.model.institution.InstitutionSort;
import com.xoa.model.institution.InstitutionSortExample;
import com.xoa.model.institution.InstitutionSortWithBLOBs;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface InstitutionSortMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int countByExample(InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int deleteByExample(InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer sortId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int insert(InstitutionSortWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int insertSelective(InstitutionSortWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    List<InstitutionSortWithBLOBs> selectByExampleWithBLOBs(InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    List<InstitutionSort> selectByExample(InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    InstitutionSortWithBLOBs selectByPrimaryKey(Integer sortId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") InstitutionSortWithBLOBs record, @Param("example") InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") InstitutionSortWithBLOBs record, @Param("example") InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") InstitutionSort record, @Param("example") InstitutionSortExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(InstitutionSortWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(InstitutionSortWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table institution_sort
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(InstitutionSort record);

    //查询所有父级
    List<InstitutionSortWithBLOBs> findSortFather();

    //查询子级
    List<InstitutionSortWithBLOBs> findSortChild(@Param("sortParent") Integer sortParent);

    //查询是否包含
    int isBelongtoDept(@Param("sortId") Integer sortId, @Param("belongtoDept") String belongtoDept);

    List<InstitutionSortWithBLOBs> findDataByIdentity(Map<String,Object> maps);

    List<InstitutionSortWithBLOBs> findSortByPermission(Map<String,Object> maps);

}