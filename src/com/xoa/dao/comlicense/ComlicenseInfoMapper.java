package com.xoa.dao.comlicense;

import com.xoa.model.comlicense.ComlicenseInfo;
import com.xoa.model.comlicense.ComlicenseInfoExample;
import com.xoa.model.comlicense.ComlicenseInfoWithBLOBs;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ComlicenseInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int countByExample(ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int deleteByExample(ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer licenseId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int insert(ComlicenseInfoWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int insertSelective(ComlicenseInfoWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    List<ComlicenseInfoWithBLOBs> selectByExampleWithBLOBs(ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    List<ComlicenseInfo> selectByExample(ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    ComlicenseInfoWithBLOBs selectByPrimaryKey(Integer licenseId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ComlicenseInfoWithBLOBs record, @Param("example") ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") ComlicenseInfoWithBLOBs record, @Param("example") ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ComlicenseInfo record, @Param("example") ComlicenseInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ComlicenseInfoWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(ComlicenseInfoWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comlicense_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(ComlicenseInfo record);
    /**
     * 查询全部
     * @param map
     * @return
     */
    List<ComlicenseInfoWithBLOBs> selectAll(Map map);

    String getLicenseNameById(Integer licenseId);

    List<ComlicenseInfoWithBLOBs> getDataByCondition(Map<String, Object> dataMap);
}