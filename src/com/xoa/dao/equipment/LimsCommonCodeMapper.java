package com.xoa.dao.equipment;


import com.xoa.model.equipment.LimsCommonCode;
import com.xoa.model.equipment.LimsCommonCodeExample;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface LimsCommonCodeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int countByExample(LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int deleteByExample(LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer codeTyepId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int insert(LimsCommonCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int insertSelective(LimsCommonCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    List<LimsCommonCode> selectByExampleWithBLOBs(LimsCommonCodeExample example);

    List<LimsCommonCode> searchList(Map map);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    List<LimsCommonCode> selectByExample(LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    LimsCommonCode selectByPrimaryKey(Integer codeTyepId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") LimsCommonCode record, @Param("example") LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") LimsCommonCode record, @Param("example") LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") LimsCommonCode record, @Param("example") LimsCommonCodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(LimsCommonCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(LimsCommonCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_common_code
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(LimsCommonCode record);

    List<LimsCommonCode> selectAll(Map map);

    //根据id删除，兼容批量删除
    int deleteByIds(Map map);

    //根据父类ParentTyepNo查询该一级类别下的所有数据
    List<LimsCommonCode> findByParTyepNo(Map map);

    //查询所有一级类型
    List<LimsCommonCode> findParentType(Map map);

    LimsCommonCode moveUp(Integer codeSort);

    LimsCommonCode moveDown(Integer codeSort);

    LimsCommonCode findCodeSort(Integer codeSort);

    int updCodeSort(Integer codeSort, Integer codeTypeId);

    List<LimsCommonCode>  finCodeTypeName(@Param("suppliTypeIds") String[] suppliTypeIds);

   // List<LimsCommonCode> QueryVendorType();

    //查看此编码是否存在
    Integer codeTypeNo(String codeTypeNo);

    List<LimsCommonCode> selectCodeTypeNameByCodeTypeNo(String[] projectPositionS2);

    LimsCommonCode selectCodeTypeName(String codeTyepNo);

    //根据代码主类型查询故障分类维修方式维修等级
    List<LimsCommonCode> selectAllCommonCode(String parentTyepNo);
    List<LimsCommonCode> selectByCommonCode(String parentTyepNo);

    //根据业务类型编码删除父类以及子类信息
    int deleteByCode(Map map);
    /*模糊查询*/
    List<LimsCommonCode> searchLike(String codeTypeName);

    List<LimsCommonCode> selectCodeTypeNames(List List);
}