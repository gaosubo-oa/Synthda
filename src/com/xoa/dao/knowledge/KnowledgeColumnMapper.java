package com.xoa.dao.knowledge;

import com.xoa.model.knowledge.KnowledgeColumn;
import com.xoa.model.knowledge.KnowledgeColumnExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface KnowledgeColumnMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int countByExample(KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int deleteByExample(KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer columnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int insert(KnowledgeColumn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int insertSelective(KnowledgeColumn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    List<KnowledgeColumn> selectByExampleWithBLOBs(KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    List<KnowledgeColumn> selectByExample(KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    KnowledgeColumn selectByPrimaryKey(Integer columnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") KnowledgeColumn record, @Param("example") KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") KnowledgeColumn record, @Param("example") KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") KnowledgeColumn record, @Param("example") KnowledgeColumnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(KnowledgeColumn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(KnowledgeColumn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table knowledge_column
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(KnowledgeColumn record);

    /**
     * 通过父id查询数据
     */
    List<KnowledgeColumn> selectByParentColumnId(Integer parentColumnId);

    /**
     * 通过父ids查询数据
     */
    List<KnowledgeColumn> selectByParentColumnIds(@Param("parentColumnIds") String[] parentColumnIds);

    /**
     * 通过主键id批量删除
     */
    int deleteByColumnIds(@Param("columnIds") String[] columnIds);

    int deleteByColumnIds(@Param("columnIds") List<String> columnIds);

    /**
     * 通过父id查询栏目类型
     */
    List<String> selectColumnTypeByParentColumnId(Integer parentColumnId);

    List<KnowledgeColumn> selectByColumnType(String columnType);

    KnowledgeColumn selectColumnId(Integer columnId);

    List<KnowledgeColumn> selectByColumnTypeAndPid(@Param("columnType")String columnType,@Param("parentColumnId")Integer parentColumnId);

    List<KnowledgeColumn> selectByColumnIds(@Param("columnIds") String[] columnIds);

    List<KnowledgeColumn> findChildByCId(String columnIds);

    List<KnowledgeColumn> selectByColumnTypes(@Param("columnTypes") String[] columnTypes);

    List<KnowledgeColumn> getAllChileByColumnId(String columnId);

    List<Integer> getAllChileIdByColumnId(String columnId);
}