package com.xoa.dao.sms;

import com.xoa.model.sms.SmsBody;
import com.xoa.model.sms.SmsBodyExample;
import com.xoa.model.sms.SmsBodyExtend;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface SmsBodyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int countByExample(SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int deleteByExample(SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer bodyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int insert(SmsBody record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int insertSelective(SmsBody record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    List<SmsBody> selectByExampleWithBLOBs(SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    List<SmsBody> selectByExample(SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    SmsBody selectByPrimaryKey(Integer bodyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") SmsBody record, @Param("example") SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") SmsBody record, @Param("example") SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") SmsBody record, @Param("example") SmsBodyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(SmsBody record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(SmsBody record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_body
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(SmsBody record);

    /**
     * @作者：张航宁
     * @时间：2017/7/28
     * @介绍：条件查询
     * @参数：map
     */
    List<SmsBody> getSmsBodyByMap(Map<String,Object> map);


    /**
     * @作者：张航宁
     * @时间：2017/7/28
     * @介绍：条件查询
     * @参数：map
     */
    Integer getSmsBodyCountByMap(Map<String,Object> map);

    /**
     * @作者：张航宁
     * @时间：2017/8/3
     * @介绍：多条件查询
     * @参数：map
     */
    List<SmsBody> querySmsBody(Map<String,Object> map);


    Integer querySmsBodyCount(Map<String,Object> map);

    List<SmsBodyExtend>  SmsListByType(Map<String,Object> map);

    List<String>  SmsListMsgByType(Map<String,Object> map);

    List<SmsBodyExtend>  getWillDocSendOrReceive(Map<String,Object> map);

    SmsBody querySmsBodyCon(Map<String,Object> map);

    List<String> querySmsBodyByUserId(Map<String,Object> map);

    List<SmsBodyExtend>  SmsListAsc(Map<String,Object> map);

    List<SmsBodyExtend> selByEmail(Map<String,Object> map);

    List<SmsBodyExtend> selByUnread(Map<String,Object> map);

    int selByEmailCount(Map<String,Object> map);

    int selByUnreadCount(Map<String,Object> map);

    int selectSms ();

    int updateSmsBody(Map<String,Object>map);


    List<SmsBody> selSmsBody (Map<String,Object>map);

    SmsBody selectSmsBodyByBodyId(@Param("bodyId")Integer bodyId);

    SmsBody selectByRemindUrl(String remindUrl);

    int deleteWorkBackSms(String remindUrl);

    /**
     * @作者: 张航宁
     * @时间: 2019/6/6
     * @说明: 获取基础sms信息
     */
    List<SmsBodyExtend>  SmsBaseInfoListByType(Map<String,Object> map);
    /**
     * @作者: 张航宁
     * @时间: 2019/6/6
     * @说明: 根据bodyId获取信息
     */
    SmsBodyExtend selBodyAndUserInfo(@Param("bodyId")Integer bodyId);

    /**
     * @作者: hwx
     * @时间: 2019/9/20
     * @说明: 根据事务提醒类型删除sms，sms_body表中这个类型的所有事务提醒
     */
    int deletSmsBodyByBodyIds(@Param("smsType")String smsType);

    List<SmsBodyExtend> readPowerChina(Map<String, Object> map);

    SmsBody selectBodyIdByRemindUrl(String remindUrl);
}