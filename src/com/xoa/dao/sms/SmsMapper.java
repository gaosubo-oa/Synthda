package com.xoa.dao.sms;

import com.xoa.model.sms.Sms;
import com.xoa.model.sms.SmsExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface SmsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int countByExample(SmsExample example);

    List<String> querySmsByTypeBatchUpdateRunId(Map<String,Object>map);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int deleteByExample(SmsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int insert(Sms record);

    int insertTomaqi(@Param("emps")List<Sms> emps);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int insertSelective(Sms record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    List<Sms> selectByExample(SmsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Sms record, @Param("example") SmsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Sms record, @Param("example") SmsExample example);

    /**
     * @作者：张航宁
     * @时间：2017/7/28
     * @介绍：根据条件查询sms
     * @参数：map
     */
    List<Sms> getSmsByMap(Map<String,Object> map);


    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：更新删除状态
     * @参数：
     */
    void updateDeleteFlag(@Param("toId") String toId,@Param("deleteFlag")String deleteFlag,@Param("smsIds")String[] smsIds);


   List<Sms> selectByBodyIds(@Param("smsIds") String[] smsIds);

   int updateDeleteFlags(@Param("toId") String toId,@Param("deleteFlag")String deleteFlag,@Param("smsIds")String[] smsIds);

    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：更新阅读状态
     * @参数：
     */
    void updateRemindFlag(@Param("toId")String toId,@Param("remindFlag")String remindFlag,@Param("smsIds")String[] smsIds);

    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：删除所有已读
     * @参数：toId
     */
    void deleteByRemind(@Param("deleteFlag") String deleteFlag,@Param("deleteFlags")String deleteFlags,@Param("smsType") String smsType,@Param("fromId") String fromId,@Param("toId") String toId);

    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：删除所有收信人已删除的
     * @参数：fromId
     */
    void deleteByDelFlag(@Param("fromId") String fromId,@Param("smsType") String smsType);

    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：设置已读
     * @参数：toId bodyId
     */
    void setRead(@Param("toId")String toId,@Param("bodyId") Integer bodyId);

    /**
     * @作者：张航宁
     * @时间：2017/8/2
     * @介绍：设置已读
     * @参数：toId bodyId
     */
    void setReadByUrl(@Param("toId")String toId,@Param("url") String url);

    /**
     * 根据类型和用户查询提醒消息
     * @param map
     * @return
     */
    List<Map<String,Object>> smsSelectBody(Map<String,Object> map);


    /**
     * 查询统计
     * @param map
     * @return
     */
    Integer putString(Map <String ,Object> map);


    /**
     * 查询ID
     * @param map
     * @return
     */
    Integer putStringOne(Map<String,Object> map);

    /**
     * 删除
     */
     int deleteOne (Integer toId);

    /**
     * 删除1
     */

    int deleteOnet(Integer toId);


     List<Sms>   querySmsByType(Map<String,Object> map);
     List<String>   querySmsByTypeUpdateRunId(Map<String,Object> map);

    int updateSmsByIds(@Param("flag") String flag,@Param("ids")String[] ids);

    int updateSmsUpdateRunId(@Param("flag") String flag,@Param("ids")String[] ids);

    List<Sms> querySmsByTypeAll(Map<String,Object> map);


    Integer getSmsId(@Param("toId")String toId,@Param("url") String url);

    Sms selSmsByCon(Map<String,Object> map);

    int updSmsById(Sms sms);

    int updateSms(Integer bodyId);


    int updateSmsBatchUpdateRunId(@Param("flag") String flag,@Param("ids")String[] ids);

    int selectSms ();

    Integer selectSmsId(@Param("toId")String toId,@Param("url") String url);

    int updateSmsDeleteFlag(Map<String,Object> map);

}