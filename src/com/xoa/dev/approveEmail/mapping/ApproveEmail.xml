<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dev.approveEmail.dao.ApproveEmailMapper">
  <!--<resultMap id="BaseResultMap" type="com.xoa.model.email.emailSet.EmailSet">
    &lt;!&ndash;
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    <id column="ESS_ID" jdbcType="INTEGER" property="essId" />
    <result column="DEPT_ID" jdbcType="VARCHAR" property="deptId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ISOPEN" jdbcType="INTEGER" property="isopen" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
  </resultMap>-->
  <resultMap id="BaseResultMap" type="com.xoa.dev.approveEmail.model.EmailSet2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ESS_ID" jdbcType="INTEGER" property="essId" />
    <result column="DEPT_ID" jdbcType="VARCHAR" property="deptId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="SEND_AMOUNT" jdbcType="INTEGER" property="sendAmount" />
    <result column="EXCLUDE_USER_ID" jdbcType="INTEGER" property="excludeUserId" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.xoa.dev.approveEmail.model.EmailSet2" extends="BaseResultMap">
      <result column="dept_name" property="deptName"></result>
      <result column="user_name" property="userName"></result>
      <result column="user_name" property="excludeUserName"></result>
  </resultMap>

  <resultMap id="BaseResultMap3" type="com.xoa.dev.approveEmail.model.EmailSet2" extends="BaseResultMap2">
    <result column="dept_name" property="deptName"></result>
    <result column="user_name" property="userName"></result>
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ESS_ID, DEPT_ID, USER_ID, ISOPEN, REMARK
  </sql>
  <select id="selectByExample" parameterType="com.xoa.model.email.emailSet.EmailSetExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    es.ESS_ID,es.DEPT_ID,es.USER_ID,es.send_Amount,es.exclude_user_id,d.DEPT_NAME
    from email_set es
    JOIN department d on d.DEPT_ID=es.DEPT_ID
    where es.ESS_ID = #{essId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from email_set
    where ESS_ID = #{essId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.email.emailSet.EmailSetExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from email_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.dev.approveEmail.model.EmailSet2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->

    insert into email_set (DEPT_ID, USER_ID, send_Amount,exclude_user_id)
    values (#{deptId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
    #{sendAmount,jdbcType=INTEGER}, #{excludeUserId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.dev.approveEmail.model.EmailSet2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into email_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="isopen != null">
        ISOPEN,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isopen != null">
        #{isopen,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.email.emailSet.EmailSetExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from email_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update email_set
    <set>
      <if test="record.essId != null">
        ESS_ID = #{record.essId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.isopen != null">
        ISOPEN = #{record.isopen,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update email_set
    set ESS_ID = #{record.essId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ISOPEN = #{record.isopen,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.dev.approveEmail.model.EmailSet2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update email_set
    <set>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="excludeUserId != null">
        exclude_User_Id = #{excludeUserId,jdbcType=INTEGER},
      </if>
    </set>
    where ESS_ID = #{essId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.dev.approveEmail.model.EmailSet2">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update email_set
    set DEPT_ID = #{deptId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
    exclude_User_Id = #{excludeUserId,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ESS_ID = #{essId,jdbcType=INTEGER}
  </update>

  <select id="selectEmailSet" resultMap="BaseResultMap">


SELECT
 e.exclude_User_id,e.user_id,e.DEPT_ID,e.ESS_ID,e.send_amount
from email_set e left join user b on e.user_id=b.user_id
 left join department d on e.dept_id=d.dept_id



  </select>

  <select id="selectEmailSet" resultMap="BaseResultMap" databaseId="dm">
    SELECT
     e.exclude_User_id,e.user_id,e.DEPT_ID,e.ESS_ID,e.send_amount
    from "email_set" e left join "user" b on e.user_id=b.user_id
  </select>

  <select id="selectEmailSet" resultMap="BaseResultMap" databaseId="kingbase">
    SELECT
     e.exclude_User_id,e.user_id,e.DEPT_ID,e.ESS_ID,e.send_amount
    from "email_set" e left join "user" b on e.user_id=b.user_id
  </select>

  <select id="selDeptId" resultType="java.lang.Integer">

    select DISTINCT es.dept_id from email_set es

  </select>

  <select id="selUserByDeptId" parameterType="java.lang.Integer" resultMap="BaseResultMap2">
    select * FROM email_set es LEFT JOIN user u on u.USER_ID=es.USER_ID where es.DEPT_ID=#{deptId}
  </select>


</mapper>