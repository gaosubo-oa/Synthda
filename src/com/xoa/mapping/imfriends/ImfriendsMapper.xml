<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.imfriends.ImfriendsMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.imfriends.Imfriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="FRD_ID" property="frdId" jdbcType="INTEGER" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
    <result column="FUID" property="fuid" jdbcType="INTEGER" />
    <result column="MESSAGE" property="message" jdbcType="VARCHAR" />
    <result column="PASS" property="pass" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    FRD_ID, UID, FUID, MESSAGE, PASS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.imfriends.ImfriendsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from im_friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from im_friends
    where FRD_ID = #{frdId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from im_friends
    where FRD_ID = #{frdId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.imfriends.ImfriendsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from im_friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.imfriends.Imfriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into im_friends (FRD_ID, UID, FUID, 
      MESSAGE, PASS)
    values (#{frdId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{fuid,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR}, #{pass,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.imfriends.Imfriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey order="AFTER" keyProperty="frdId" resultType="int">
      select LAST_INSERT_ID()
    </selectKey>
    insert into im_friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="frdId != null" >
        FRD_ID,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="fuid != null" >
        FUID,
      </if>
      <if test="message != null" >
        MESSAGE,
      </if>
      <if test="pass != null" >
        PASS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="frdId != null" >
        #{frdId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="fuid != null" >
        #{fuid,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        #{pass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.imfriends.ImfriendsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from im_friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update im_friends
    <set >
      <if test="record.frdId != null" >
        FRD_ID = #{record.frdId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.fuid != null" >
        FUID = #{record.fuid,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        MESSAGE = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.pass != null" >
        PASS = #{record.pass,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update im_friends
    set FRD_ID = #{record.frdId,jdbcType=INTEGER},
      UID = #{record.uid,jdbcType=INTEGER},
      FUID = #{record.fuid,jdbcType=INTEGER},
      MESSAGE = #{record.message,jdbcType=VARCHAR},
      PASS = #{record.pass,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.imfriends.Imfriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update im_friends
    <set >
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="fuid != null" >
        FUID = #{fuid,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        PASS = #{pass,jdbcType=INTEGER},
      </if>
    </set>
    where FRD_ID = #{frdId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.imfriends.Imfriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update im_friends
    set  PASS = #{pass,jdbcType=INTEGER}
    where FRD_ID = #{frdId,jdbcType=INTEGER}
  </update>

  <select id="getImfriendsByuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select fuid from im_friends where pass=1 AND uid=#{uid}
  </select>

  <select id="getImfriendsByfuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select uid from im_friends where pass=1 AND fuid=#{fuid}
  </select>

  <select id="getImfriendsByfrdId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select FRD_ID,uid,FUID,MESSAGE,PASS from im_friends where FRD_ID=#{frdId}
  </select>

  <select id="selectImfriendsList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select DISTINCT (FRD_ID) ,uid,FUID,MESSAGE,PASS from im_friends where pass=1 and (uid=#{uid} or fuid=#{fuid})
  </select>

  <select id="selectImfriendsWyz" parameterType="java.util.Map" resultMap="BaseResultMap">
     select DISTINCT (FRD_ID) ,uid,FUID,MESSAGE,PASS from im_friends where pass=0 and uid=#{uid}
  </select>
</mapper>