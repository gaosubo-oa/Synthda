<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.knowledge.KnowledgeColumnMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COLUMN_ID" property="columnId" jdbcType="INTEGER" />
    <result column="ORDER_NO" property="orderNo" jdbcType="INTEGER" />
    <result column="COLUMN_TYPE" property="columnType" jdbcType="VARCHAR" />
    <result column="COLUMN_CODE" property="columnCode" jdbcType="VARCHAR" />
    <result column="COLUMN_NAME" property="columnName" jdbcType="VARCHAR" />
    <result column="PARENT_COLUMN_ID" property="parentColumnId" jdbcType="INTEGER" />
    <result column="COLUMN_DESC" property="columnDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.knowledge.KnowledgeColumn" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="COLUMN_DESC" property="columnDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    COLUMN_ID, ORDER_NO, COLUMN_TYPE, COLUMN_CODE, COLUMN_NAME, PARENT_COLUMN_ID
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    COLUMN_DESC
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.knowledge.KnowledgeColumnExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.knowledge.KnowledgeColumnExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knowledge_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_column
    where COLUMN_ID = #{columnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge_column
    where COLUMN_ID = #{columnId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.knowledge.KnowledgeColumnExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_column (COLUMN_ID, ORDER_NO, COLUMN_TYPE, 
      COLUMN_CODE, COLUMN_NAME, PARENT_COLUMN_ID, 
      COLUMN_DESC)
    values (#{columnId,jdbcType=INTEGER}, #{orderNo,jdbcType=INTEGER}, #{columnType,jdbcType=VARCHAR}, 
      #{columnCode,jdbcType=VARCHAR}, #{columnName,jdbcType=VARCHAR}, #{parentColumnId,jdbcType=INTEGER}, 
      #{columnDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_column
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="columnId != null" >
        COLUMN_ID,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="columnType != null" >
        COLUMN_TYPE,
      </if>
      <if test="columnCode != null" >
        COLUMN_CODE,
      </if>
      <if test="columnName != null" >
        COLUMN_NAME,
      </if>
      <if test="parentColumnId != null" >
        PARENT_COLUMN_ID,
      </if>
      <if test="columnDesc != null" >
        COLUMN_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="columnId != null" >
        #{columnId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="columnType != null" >
        #{columnType,jdbcType=VARCHAR},
      </if>
      <if test="columnCode != null" >
        #{columnCode,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="parentColumnId != null" >
        #{parentColumnId,jdbcType=INTEGER},
      </if>
      <if test="columnDesc != null" >
        #{columnDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.knowledge.KnowledgeColumnExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from knowledge_column
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    <set >
      <if test="record.columnId != null" >
        COLUMN_ID = #{record.columnId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.columnType != null" >
        COLUMN_TYPE = #{record.columnType,jdbcType=VARCHAR},
      </if>
      <if test="record.columnCode != null" >
        COLUMN_CODE = #{record.columnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.columnName != null" >
        COLUMN_NAME = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentColumnId != null" >
        PARENT_COLUMN_ID = #{record.parentColumnId,jdbcType=INTEGER},
      </if>
      <if test="record.columnDesc != null" >
        COLUMN_DESC = #{record.columnDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    set COLUMN_ID = #{record.columnId,jdbcType=INTEGER},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      COLUMN_TYPE = #{record.columnType,jdbcType=VARCHAR},
      COLUMN_CODE = #{record.columnCode,jdbcType=VARCHAR},
      COLUMN_NAME = #{record.columnName,jdbcType=VARCHAR},
      PARENT_COLUMN_ID = #{record.parentColumnId,jdbcType=INTEGER},
      COLUMN_DESC = #{record.columnDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    set COLUMN_ID = #{record.columnId,jdbcType=INTEGER},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      COLUMN_TYPE = #{record.columnType,jdbcType=VARCHAR},
      COLUMN_CODE = #{record.columnCode,jdbcType=VARCHAR},
      COLUMN_NAME = #{record.columnName,jdbcType=VARCHAR},
      PARENT_COLUMN_ID = #{record.parentColumnId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    <set >
      <if test="orderNo != null" >
        ORDER_NO = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="columnType != null" >
        COLUMN_TYPE = #{columnType,jdbcType=VARCHAR},
      </if>
      <if test="columnCode != null" >
        COLUMN_CODE = #{columnCode,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        COLUMN_NAME = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="parentColumnId != null" >
        PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER},
      </if>
      <if test="columnDesc != null" >
        COLUMN_DESC = #{columnDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where COLUMN_ID = #{columnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    set ORDER_NO = #{orderNo,jdbcType=INTEGER},
      COLUMN_TYPE = #{columnType,jdbcType=VARCHAR},
      COLUMN_CODE = #{columnCode,jdbcType=VARCHAR},
      COLUMN_NAME = #{columnName,jdbcType=VARCHAR},
      PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER},
      COLUMN_DESC = #{columnDesc,jdbcType=LONGVARCHAR}
    where COLUMN_ID = #{columnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.knowledge.KnowledgeColumn" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_column
    set ORDER_NO = #{orderNo,jdbcType=INTEGER},
      COLUMN_TYPE = #{columnType,jdbcType=VARCHAR},
      COLUMN_CODE = #{columnCode,jdbcType=VARCHAR},
      COLUMN_NAME = #{columnName,jdbcType=VARCHAR},
      PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER}
    where COLUMN_ID = #{columnId,jdbcType=INTEGER}
  </update>

  <!-- 通过父id查询数据 -->
  <select id="selectByParentColumnId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_column
    where PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER}
    order by ORDER_NO asc
  </select>

  <!-- 通过父ids查询数据 -->
  <select id="selectByParentColumnIds" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_column
    where PARENT_COLUMN_ID
    in
    <foreach collection="parentColumnIds" item="parentColumnId" open="(" separator="," close=")" >
      #{parentColumnId,jdbcType=INTEGER}
    </foreach>
  </select>

  <!-- 通过主键id批量删除 -->
  <delete id="deleteByColumnIds">
    delete from knowledge_column
    where COLUMN_ID
    in
    <foreach collection="columnIds" item="columnId" open="(" separator="," close=")" >
      #{columnId,jdbcType=INTEGER}
    </foreach>
  </delete>

  <!-- 通过父id查询栏目类型 -->
  <select id="selectColumnTypeByParentColumnId" parameterType="java.lang.Integer" resultType="java.lang.String" >
    select COLUMN_TYPE
    from knowledge_column
    where PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER}
  </select>

  <select id="selectByColumnType" resultMap="BaseResultMap">
    select knowledge_column.* FROM knowledge_column WHERE COLUMN_TYPE=#{columnType}
  </select>
  
  <select id="selectColumnId" resultMap="BaseResultMap">
    select knowledge_column.* from knowledge_column where COLUMN_ID =#{columnId}
  </select>

  <select id="selectByColumnTypeAndPid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
     FROM knowledge_column
     <where>
       <if test="columnType!=null and columnType!='' ">
          and COLUMN_TYPE=#{columnType}
       </if>
       <if test="parentColumnId!=null">
         and PARENT_COLUMN_ID = #{parentColumnId,jdbcType=INTEGER}
       </if>
     </where>
    order by ORDER_NO asc
  </select>

  <select id="selectByColumnIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    knowledge_column
    where
    COLUMN_ID in
    <foreach collection="columnIds" item="columnId" open="(" separator="," close=")" >
      #{columnId,jdbcType=INTEGER}
    </foreach>

  </select>

  <select id="findChildByCId" resultMap="BaseResultMap">
SELECT
    <include refid="Base_Column_List" />
FROM
	(
	SELECT
		t1.*,
	IF
		(
			find_in_set( PARENT_COLUMN_ID, @pids ) > 0
			OR find_in_set( COLUMN_ID, @pids ),
			@pids := concat( @pids, ',', COLUMN_ID ),
			0
		) AS ischild
	FROM
		( SELECT * FROM knowledge_column t ) t1,
		( SELECT @pids := #{columnIds,jdbcType=INTEGER} ) t2
		) t3
WHERE
	ischild != 0
  </select>

  <select id="selectByColumnTypes" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    knowledge_column
    where
    COLUMN_TYPE in
    <foreach collection="columnTypes" item="columnType" open="(" separator="," close=")" >
    #{columnType,jdbcType=INTEGER}
    </foreach>
  </select>

  <select id="getAllChileByColumnId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
        FROM
            knowledge_column
        WHERE
            COLUMN_ID IN (
            SELECT
                COLUMN_ID AS did
            FROM
                (
                SELECT
                    t1.COLUMN_ID,
                IF
                    ( find_in_set( PARENT_COLUMN_ID, @pids ) > 0 OR find_in_set( COLUMN_ID, @pids ) , @pids := concat( @pids, ',', COLUMN_ID ), 0 ) AS ischild
                FROM
                    ( SELECT COLUMN_ID, PARENT_COLUMN_ID FROM knowledge_column t ) t1,
                    ( SELECT @pids := #{columnId} ) t2
                ) t3
            WHERE
            ischild != 0
            )
  </select>

  <select id="getAllChileIdByColumnId" resultType="java.lang.Integer">
    SELECT
    COLUMN_ID
    FROM
    knowledge_column
    WHERE
    COLUMN_ID IN (
    SELECT
    COLUMN_ID AS did
    FROM
    (
    SELECT
    t1.COLUMN_ID,
    IF
    ( find_in_set( PARENT_COLUMN_ID, @pids ) > 0 OR find_in_set( COLUMN_ID, @pids ) , @pids := concat( @pids, ',', COLUMN_ID ), 0 ) AS ischild
    FROM
    ( SELECT COLUMN_ID, PARENT_COLUMN_ID FROM knowledge_column t ) t1,
    ( SELECT @pids := #{columnId} ) t2
    ) t3
    WHERE
    ischild != 0
    )
  </select>

</mapper>