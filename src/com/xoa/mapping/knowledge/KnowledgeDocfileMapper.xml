<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.knowledge.KnowledgeDocfileMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DOCFILE_ID" property="docfileId" jdbcType="INTEGER" />
    <result column="DOCFILE_NO" property="docfileNo" jdbcType="VARCHAR" />
    <result column="DOCFILE_NAME" property="docfileName" jdbcType="VARCHAR" />
    <result column="KEY_WORD" property="keyWord" jdbcType="VARCHAR" />
    <result column="COLUMN_ID" property="columnId" jdbcType="VARCHAR" />
    <result column="DOCFILE_CLASS" property="docfileClass" jdbcType="VARCHAR" />
    <result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="DOWNLOAD_ADDRESS" property="downloadAddress" jdbcType="VARCHAR" />
    <result column="DOWNLOAD_PASSWORD" property="downloadPassword" jdbcType="VARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="VARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.knowledge.KnowledgeDocfile" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="DOCFILE_DESC" property="docfileDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DOCFILE_ID, DOCFILE_NO, DOCFILE_NAME, KEY_WORD, COLUMN_ID, DOCFILE_CLASS, CREATE_USER_ID, 
    CREATE_TIME, DOWNLOAD_ADDRESS, DOWNLOAD_PASSWORD,ATTACHMENT_ID,ATTACHMENT_NAME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DOCFILE_DESC
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.knowledge.KnowledgeDocfileExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_docfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.knowledge.KnowledgeDocfileExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knowledge_docfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_docfile
    where DOCFILE_ID = #{docfileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge_docfile
    where DOCFILE_ID = #{docfileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.knowledge.KnowledgeDocfileExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge_docfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_docfile (DOCFILE_ID, DOCFILE_NO, DOCFILE_NAME, 
      KEY_WORD, COLUMN_ID, DOCFILE_CLASS, 
      CREATE_USER_ID, CREATE_TIME, DOWNLOAD_ADDRESS, 
      DOWNLOAD_PASSWORD, DOCFILE_DESC,ATTACHMENT_ID,ATTACHMENT_NAME)
    values (#{docfileId,jdbcType=INTEGER}, #{docfileNo,jdbcType=VARCHAR}, #{docfileName,jdbcType=VARCHAR}, 
      #{keyWord,jdbcType=VARCHAR}, #{columnId,jdbcType=VARCHAR}, #{docfileClass,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{downloadAddress,jdbcType=VARCHAR}, 
      #{downloadPassword,jdbcType=VARCHAR}, #{docfileDesc,jdbcType=LONGVARCHAR},#{attachmentId,jdbcType=VARCHAR},#{attachmentName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_docfile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="docfileId != null" >
        DOCFILE_ID,
      </if>
      <if test="docfileNo != null" >
        DOCFILE_NO,
      </if>
      <if test="docfileName != null" >
        DOCFILE_NAME,
      </if>
      <if test="keyWord != null" >
        KEY_WORD,
      </if>
      <if test="columnId != null" >
        COLUMN_ID,
      </if>
      <if test="docfileClass != null" >
        DOCFILE_CLASS,
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="downloadAddress != null" >
        DOWNLOAD_ADDRESS,
      </if>
      <if test="downloadPassword != null" >
        DOWNLOAD_PASSWORD,
      </if>
      <if test="docfileDesc != null" >
        DOCFILE_DESC,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="docfileId != null" >
        #{docfileId,jdbcType=INTEGER},
      </if>
      <if test="docfileNo != null" >
        #{docfileNo,jdbcType=VARCHAR},
      </if>
      <if test="docfileName != null" >
        #{docfileName,jdbcType=VARCHAR},
      </if>
      <if test="keyWord != null" >
        #{keyWord,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null" >
        #{columnId,jdbcType=VARCHAR},
      </if>
      <if test="docfileClass != null" >
        #{docfileClass,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadAddress != null" >
        #{downloadAddress,jdbcType=VARCHAR},
      </if>
      <if test="downloadPassword != null" >
        #{downloadPassword,jdbcType=VARCHAR},
      </if>
      <if test="docfileDesc != null" >
        #{docfileDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.knowledge.KnowledgeDocfileExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from knowledge_docfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    <set >
      <if test="record.docfileId != null" >
        DOCFILE_ID = #{record.docfileId,jdbcType=INTEGER},
      </if>
      <if test="record.docfileNo != null" >
        DOCFILE_NO = #{record.docfileNo,jdbcType=VARCHAR},
      </if>
      <if test="record.docfileName != null" >
        DOCFILE_NAME = #{record.docfileName,jdbcType=VARCHAR},
      </if>
      <if test="record.keyWord != null" >
        KEY_WORD = #{record.keyWord,jdbcType=VARCHAR},
      </if>
      <if test="record.columnId != null" >
        COLUMN_ID = #{record.columnId,jdbcType=VARCHAR},
      </if>
      <if test="record.docfileClass != null" >
        DOCFILE_CLASS = #{record.docfileClass,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downloadAddress != null" >
        DOWNLOAD_ADDRESS = #{record.downloadAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.downloadPassword != null" >
        DOWNLOAD_PASSWORD = #{record.downloadPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.docfileDesc != null" >
        DOCFILE_DESC = #{record.docfileDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      </if>

    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    set DOCFILE_ID = #{record.docfileId,jdbcType=INTEGER},
      DOCFILE_NO = #{record.docfileNo,jdbcType=VARCHAR},
      DOCFILE_NAME = #{record.docfileName,jdbcType=VARCHAR},
      KEY_WORD = #{record.keyWord,jdbcType=VARCHAR},
      COLUMN_ID = #{record.columnId,jdbcType=VARCHAR},
      DOCFILE_CLASS = #{record.docfileClass,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DOWNLOAD_ADDRESS = #{record.downloadAddress,jdbcType=VARCHAR},
      DOWNLOAD_PASSWORD = #{record.downloadPassword,jdbcType=VARCHAR},
      DOCFILE_DESC = #{record.docfileDesc,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    set DOCFILE_ID = #{record.docfileId,jdbcType=INTEGER},
      DOCFILE_NO = #{record.docfileNo,jdbcType=VARCHAR},
      DOCFILE_NAME = #{record.docfileName,jdbcType=VARCHAR},
      KEY_WORD = #{record.keyWord,jdbcType=VARCHAR},
      COLUMN_ID = #{record.columnId,jdbcType=VARCHAR},
      DOCFILE_CLASS = #{record.docfileClass,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DOWNLOAD_ADDRESS = #{record.downloadAddress,jdbcType=VARCHAR},
      DOWNLOAD_PASSWORD = #{record.downloadPassword,jdbcType=VARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    <set >
      <if test="docfileNo != null" >
        DOCFILE_NO = #{docfileNo,jdbcType=VARCHAR},
      </if>
      <if test="docfileName != null" >
        DOCFILE_NAME = #{docfileName,jdbcType=VARCHAR},
      </if>
      <if test="keyWord != null" >
        KEY_WORD = #{keyWord,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null" >
        COLUMN_ID = #{columnId,jdbcType=VARCHAR},
      </if>
      <if test="docfileClass != null" >
        DOCFILE_CLASS = #{docfileClass,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadAddress != null" >
        DOWNLOAD_ADDRESS = #{downloadAddress,jdbcType=VARCHAR},
      </if>
      <if test="downloadPassword != null" >
        DOWNLOAD_PASSWORD = #{downloadPassword,jdbcType=VARCHAR},
      </if>
      <if test="docfileDesc != null" >
        DOCFILE_DESC = #{docfileDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      </if>
    </set>
    where DOCFILE_ID = #{docfileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    set DOCFILE_NO = #{docfileNo,jdbcType=VARCHAR},
      DOCFILE_NAME = #{docfileName,jdbcType=VARCHAR},
      KEY_WORD = #{keyWord,jdbcType=VARCHAR},
      COLUMN_ID = #{columnId,jdbcType=VARCHAR},
      DOCFILE_CLASS = #{docfileClass,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DOWNLOAD_ADDRESS = #{downloadAddress,jdbcType=VARCHAR},
      DOWNLOAD_PASSWORD = #{downloadPassword,jdbcType=VARCHAR},
      DOCFILE_DESC = #{docfileDesc,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR}
    where DOCFILE_ID = #{docfileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.knowledge.KnowledgeDocfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_docfile
    set DOCFILE_NO = #{docfileNo,jdbcType=VARCHAR},
      DOCFILE_NAME = #{docfileName,jdbcType=VARCHAR},
      KEY_WORD = #{keyWord,jdbcType=VARCHAR},
      COLUMN_ID = #{columnId,jdbcType=VARCHAR},
      DOCFILE_CLASS = #{docfileClass,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DOWNLOAD_ADDRESS = #{downloadAddress,jdbcType=VARCHAR},
      DOWNLOAD_PASSWORD = #{downloadPassword,jdbcType=VARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR}
    where DOCFILE_ID = #{docfileId,jdbcType=INTEGER}
  </update>

  <!-- 通过栏目类型ids查询文件 -->
  <select id="selectByColumnIds" resultMap="ResultMapWithBLOBs" >
    select distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_docfile
    where
    <foreach collection="columnIds" item="columnId" separator="or">
      <if test="columnId != null" >
        COLUMN_ID like CONCAT('%,', #{columnId,jdbcType=VARCHAR}, ',%')
      </if>
    </foreach>
  </select>

  <!-- 通过栏目类型id串查询数据并分页 -->
  <select id="selectByColumnIdsAndPaging" parameterType="map" resultMap="ResultMapWithBLOBs" >
    select distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_docfile
    <where>
      <if test="columnIds!=null and columnIds.length>0">
        <foreach collection="columnIds" item="columnId" separator="or">
          <if test="columnId != null" >
            COLUMN_ID like CONCAT('%,', #{columnId,jdbcType=VARCHAR}, ',%')
          </if>
        </foreach>
      </if>
    </where>
  </select>

  <!-- 通过主键id串批量删除 -->
  <delete id="deleteByDocfileIds">
    delete from knowledge_docfile
    where DOCFILE_ID in
    <foreach collection="docfileIds" item="docfileId" open="(" separator="," close=")" >
      #{docfileId,jdbcType=INTEGER}
    </foreach>
  </delete>

  <select id="selectByDocfileId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from knowledge_docfile
    where DOCFILE_ID = #{docfileId}
  </select>

  <select id="selectByList" resultMap="BaseResultMap">
     select knowledge_docfile.* from knowledge_docfile where 1=1
  </select>

  <select id="search" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.knowledge.KnowledgeDocfile">
    select
    distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from
    knowledge_docfile
    <where>
    <if test="knowledgeDocfile.docfileNo != null and knowledgeDocfile.docfileNo !='' "  >
      DOCFILE_NO like  CONCAT ('%', #{knowledgeDocfile.docfileNo,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.docfileName != null and knowledgeDocfile.docfileName !='' " >
      and DOCFILE_NAME like  CONCAT ('%', #{knowledgeDocfile.docfileName,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.keyWord != null and knowledgeDocfile.keyWord !='' " >
      and KEY_WORD like  CONCAT ('%', #{knowledgeDocfile.keyWord,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.columnIds != null and knowledgeDocfile.columnIds !='' and knowledgeDocfile.columnIds.length>0 " >
      and
      <foreach collection="knowledgeDocfile.columnIds" item="columnId" open="(" separator="or" close=")" >
        COLUMN_ID like concat ('%', #{columnId,jdbcType=VARCHAR},'%')
      </foreach>

    </if>
    <if test="knowledgeDocfile.docfileClass != null and knowledgeDocfile.docfileClass !='' " >
      and DOCFILE_CLASS like  CONCAT ('%', #{knowledgeDocfile.docfileClass,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.createUserIds != null and knowledgeDocfile.createUserIds !='' " >
      and
      <foreach collection="knowledgeDocfile.createUserIds" item="createUserId" open="(" separator="or" close=")" >
        CREATE_USER_ID like concat ('%', #{createUserId,jdbcType=VARCHAR},'%')
      </foreach>
    </if>
    <if test="knowledgeDocfile.serchTime != null and knowledgeDocfile.serchTime !=''" >
      and CREATE_TIME like concat (#{knowledgeDocfile.serchTime},'%')
    </if>
    <if test="knowledgeDocfile.beginTime != null  and knowledgeDocfile.endTime!=null " >
      and CREATE_TIME between #{knowledgeDocfile.beginTime} and #{knowledgeDocfile.endTime}
    </if>

      <if test="knowledgeDocfile.beginTime != null  and knowledgeDocfile.endTime==null " >
        and CREATE_TIME &gt;= #{knowledgeDocfile.beginTime}
      </if>
      <if test="knowledgeDocfile.beginTime == null  and knowledgeDocfile.endTime!=null " >
        and CREATE_TIME &lt;= #{knowledgeDocfile.beginTime}
      </if>
    <if test="knowledgeDocfile.downloadAddress != null and knowledgeDocfile.downloadAddress !='' " >
      and DOWNLOAD_ADDRESS like  CONCAT ('%', #{knowledgeDocfile.downloadAddress,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.downloadPassword != null and knowledgeDocfile.downloadPassword !='' " >
      and  DOWNLOAD_PASSWORD like  CONCAT ('%', #{knowledgeDocfile.downloadPassword,jdbcType=VARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.docfileDesc != null and knowledgeDocfile.docfileDesc !='' " >
      and DOCFILE_DESC like  CONCAT ('%', #{knowledgeDocfile.docfileDesc,jdbcType=LONGVARCHAR},'%')
    </if>
    <if test="knowledgeDocfile.downloadAddress != null and knowledgeDocfile.downloadAddress !='' " >
      and DOWNLOAD_ADDRESS = #{knowledgeDocfile.downloadAddress}
    </if>
    </where>
  </select>

  <select id="selectByAddress" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from
    knowledge_docfile
    where DOWNLOAD_ADDRESS = #{downloadAddress}
  </select>

  <!-- 通过栏目类型ids和参数查询文件 -->
  <select id="selectByColumnIdsAndParam" resultMap="ResultMapWithBLOBs" >
    select distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_docfile
    <where>
    <foreach collection="columnIds" item="columnId" separator="or" open="(" close=")">
      <if test="columnId != null" >
        COLUMN_ID like CONCAT('%,', #{columnId,jdbcType=VARCHAR}, ',%')
      </if>
    </foreach>
    <if test="docFile.docfileName!=null and docFile.docfileName!='' ">
      and DOCFILE_NAME like CONCAT('%', #{docFile.docfileName,jdbcType=VARCHAR}, '%')
    </if>
    <if test="docFile.keyWord!=null and docFile.keyWord!='' ">
      and KEY_WORD like CONCAT('%', #{docFile.keyWord,jdbcType=VARCHAR}, '%')
    </if>
    <if test="docFile.docfileDesc!=null and docFile.docfileDesc!='' ">
      and DOCFILE_DESC like CONCAT('%', #{docFile.docfileDesc,jdbcType=VARCHAR}, '%')
    </if>
    </where>
  </select>
 </mapper>