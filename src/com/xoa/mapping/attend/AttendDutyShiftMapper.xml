<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.attend.AttendDutyShiftMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.attend.AttendDutyShift" >

    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="REGISTER_TYPE" property="registerType" jdbcType="CHAR" />
    <result column="REGISTER_TIME" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="REGISTER_IP" property="registerIp" jdbcType="VARCHAR" />
    <result column="SXB" property="sxb" jdbcType="INTEGER" />
    <result column="IS_MOBILE_DUTY" property="isMobileDuty" javaType="java.lang.Integer" />
    <result column="ATTEND_MOBILE_ID" property="attendMobileId" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    USER_ID, REGISTER_TYPE, REGISTER_TIME, REGISTER_IP, SXB, IS_MOBILE_DUTY, ATTEND_MOBILE_ID,REMARK
  </sql>
  <insert id="insert" parameterType="com.xoa.model.attend.AttendDutyShift" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into attend_duty_shift (USER_ID, REGISTER_TYPE, REGISTER_TIME, 
      REGISTER_IP, SXB, IS_MOBILE_DUTY, 
      ATTEND_MOBILE_ID, REMARK)
    values (#{userId,jdbcType=VARCHAR}, #{registerType,jdbcType=CHAR}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{sxb,jdbcType=INTEGER}, #{isMobileDuty,jdbcType=BIT}, 
      #{attendMobileId,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.attend.AttendDutyShift" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into attend_duty_shift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="registerType != null" >
        REGISTER_TYPE,
      </if>
      <if test="registerTime != null" >
        REGISTER_TIME,
      </if>
      <if test="registerIp != null" >
        REGISTER_IP,
      </if>
      <if test="sxb != null" >
        SXB,
      </if>
      <if test="isMobileDuty != null" >
        IS_MOBILE_DUTY,
      </if>
      <if test="attendMobileId != null" >
        ATTEND_MOBILE_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        #{registerType,jdbcType=CHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="sxb != null" >
        #{sxb,jdbcType=INTEGER},
      </if>
      <if test="isMobileDuty != null" >
        #{isMobileDuty,jdbcType=BIT},
      </if>
      <if test="attendMobileId != null" >
        #{attendMobileId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>