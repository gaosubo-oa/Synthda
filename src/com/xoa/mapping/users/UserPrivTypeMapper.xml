<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.users.UserPrivTypeMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PRIV_TYPE_ID" property="privTypeId" jdbcType="INTEGER" />
    <result column="PRIV_TYPE_NAME" property="privTypeName" jdbcType="VARCHAR" />
    <result column="PRIV_TYPE_NO" property="privTypeNo" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.users.UserPrivType" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="FUNC_ID_STR" property="funcIdStr" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PRIV_TYPE_ID, PRIV_TYPE_NAME, PRIV_TYPE_NO
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    FUNC_ID_STR
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.users.UserPrivTypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_priv_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.users.UserPrivTypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_priv_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleNew" resultMap="BaseResultMap" parameterType="java.util.Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_priv_type
    <if test="privTypes != null" >
      where concat(#{privTypes}, ',') like concat('%', PRIV_TYPE_ID, '%')
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>


  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_priv_type
    where PRIV_TYPE_ID = #{privTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_priv_type
    where PRIV_TYPE_ID = #{privTypeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.users.UserPrivTypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_priv_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_priv_type (PRIV_TYPE_ID, PRIV_TYPE_NAME, PRIV_TYPE_NO, 
      FUNC_ID_STR)
    values (#{privTypeId,jdbcType=INTEGER}, #{privTypeName,jdbcType=VARCHAR}, #{privTypeNo,jdbcType=INTEGER}, 
      #{funcIdStr,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_priv_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="privTypeId != null" >
        PRIV_TYPE_ID,
      </if>
      <if test="privTypeName != null" >
        PRIV_TYPE_NAME,
      </if>
      <if test="privTypeNo != null" >
        PRIV_TYPE_NO,
      </if>
      <if test="funcIdStr != null" >
        FUNC_ID_STR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="privTypeId != null" >
        #{privTypeId,jdbcType=INTEGER},
      </if>
      <if test="privTypeName != null" >
        #{privTypeName,jdbcType=VARCHAR},
      </if>
      <if test="privTypeNo != null" >
        #{privTypeNo,jdbcType=INTEGER},
      </if>
      <if test="funcIdStr != null" >
        #{funcIdStr,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.users.UserPrivTypeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_priv_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    <set >
      <if test="record.privTypeId != null" >
        PRIV_TYPE_ID = #{record.privTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.privTypeName != null" >
        PRIV_TYPE_NAME = #{record.privTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.privTypeNo != null" >
        PRIV_TYPE_NO = #{record.privTypeNo,jdbcType=INTEGER},
      </if>
      <if test="record.funcIdStr != null" >
        FUNC_ID_STR = #{record.funcIdStr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    set PRIV_TYPE_ID = #{record.privTypeId,jdbcType=INTEGER},
      PRIV_TYPE_NAME = #{record.privTypeName,jdbcType=VARCHAR},
      PRIV_TYPE_NO = #{record.privTypeNo,jdbcType=INTEGER},
      FUNC_ID_STR = #{record.funcIdStr,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    set PRIV_TYPE_ID = #{record.privTypeId,jdbcType=INTEGER},
      PRIV_TYPE_NAME = #{record.privTypeName,jdbcType=VARCHAR},
      PRIV_TYPE_NO = #{record.privTypeNo,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    <set >
      <if test="privTypeName != null" >
        PRIV_TYPE_NAME = #{privTypeName,jdbcType=VARCHAR},
      </if>
      <if test="privTypeNo != null" >
        PRIV_TYPE_NO = #{privTypeNo,jdbcType=INTEGER},
      </if>
      <if test="funcIdStr != null" >
        FUNC_ID_STR = #{funcIdStr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PRIV_TYPE_ID = #{privTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    set PRIV_TYPE_NAME = #{privTypeName,jdbcType=VARCHAR},
      PRIV_TYPE_NO = #{privTypeNo,jdbcType=INTEGER},
      FUNC_ID_STR = #{funcIdStr,jdbcType=LONGVARCHAR}
    where PRIV_TYPE_ID = #{privTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.users.UserPrivType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_priv_type
    set PRIV_TYPE_NAME = #{privTypeName,jdbcType=VARCHAR},
      PRIV_TYPE_NO = #{privTypeNo,jdbcType=INTEGER}
    where PRIV_TYPE_ID = #{privTypeId,jdbcType=INTEGER}
  </update>

  <select id="selectByPrivTypeName" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
      *
    FROM
      user_priv_type
    WHERE
      PRIV_TYPE_NAME = #{privTypeName}
  </select>

  <select id="queryAllUserPrivType" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
      *
    FROM
      user_priv_type
    <where>
      <if test="privTypeIds != null and privTypeIds.size() > 0">
        AND PRIV_TYPE_ID IN
        <foreach collection="privTypeIds" item="typeId" index="index" open="(" separator="," close=")">
          #{typeId}
        </foreach>
      </if>
      <if test="privTypeId != null and privTypeId != ''">
        AND PRIV_TYPE_ID = #{privTypeId}
      </if>
    </where>
  </select>

</mapper>