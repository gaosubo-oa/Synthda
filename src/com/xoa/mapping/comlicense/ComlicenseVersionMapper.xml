<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.comlicense.ComlicenseVersionMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.comlicense.ComlicenseVersion" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="VERSION_ID" property="versionId" jdbcType="INTEGER" />
    <result column="LICENSE_ID" property="licenseId" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="VERSION_NAME" property="versionName" jdbcType="VARCHAR" />
    <result column="LICENSE_NAME" property="licenseName" jdbcType="VARCHAR" />
    <result column="LICENSE_TYPE" property="licenseType" jdbcType="VARCHAR" />
    <result column="VALIDITY_BEGIN_DATE" property="validityBeginDate" jdbcType="DATE" />
    <result column="VALIDITY_END_DATE" property="validityEndDate" jdbcType="DATE" />
    <result column="VALIDITY_YEAR" property="validityYear" jdbcType="VARCHAR" />
    <result column="INSSUE_DATE" property="inssueDate" jdbcType="DATE" />
    <result column="ANNUAL_INSPECTION_DATE" property="annualInspectionDate" jdbcType="DATE" />
    <result column="ISSUE_UNIT" property="issueUnit" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.comlicense.ComlicenseVersionWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="VERSION_EXPLAIN" property="versionExplain" jdbcType="LONGVARCHAR" />
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    VERSION_ID, LICENSE_ID, CREATE_TIME, VERSION_NAME, LICENSE_NAME, LICENSE_TYPE, VALIDITY_BEGIN_DATE, 
    VALIDITY_END_DATE, VALIDITY_YEAR, INSSUE_DATE, ANNUAL_INSPECTION_DATE, ISSUE_UNIT
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    VERSION_EXPLAIN, REMARK, ATTACHMENT_ID, ATTACHMENT_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.comlicense.ComlicenseVersionExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comlicense_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.comlicense.ComlicenseVersionExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comlicense_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comlicense_version
    where VERSION_ID = #{versionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comlicense_version
    where VERSION_ID = #{versionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.comlicense.ComlicenseVersionExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comlicense_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.comlicense.ComlicenseVersionWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comlicense_version (VERSION_ID, LICENSE_ID, CREATE_TIME, 
      VERSION_NAME, LICENSE_NAME, LICENSE_TYPE, 
      VALIDITY_BEGIN_DATE, VALIDITY_END_DATE, VALIDITY_YEAR, 
      INSSUE_DATE, ANNUAL_INSPECTION_DATE, ISSUE_UNIT, 
      VERSION_EXPLAIN, REMARK, ATTACHMENT_ID, 
      ATTACHMENT_NAME)
    values (#{versionId,jdbcType=INTEGER}, #{licenseId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{versionName,jdbcType=VARCHAR}, #{licenseName,jdbcType=VARCHAR}, #{licenseType,jdbcType=VARCHAR}, 
      #{validityBeginDate,jdbcType=DATE}, #{validityEndDate,jdbcType=DATE}, #{validityYear,jdbcType=VARCHAR}, 
      #{inssueDate,jdbcType=DATE}, #{annualInspectionDate,jdbcType=DATE}, #{issueUnit,jdbcType=VARCHAR}, 
      #{versionExplain,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR}, 
      #{attachmentName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.comlicense.ComlicenseVersionWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comlicense_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        VERSION_ID,
      </if>
      <if test="licenseId != null" >
        LICENSE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="versionName != null" >
        VERSION_NAME,
      </if>
      <if test="licenseName != null" >
        LICENSE_NAME,
      </if>
      <if test="licenseType != null" >
        LICENSE_TYPE,
      </if>
      <if test="validityBeginDate != null" >
        VALIDITY_BEGIN_DATE,
      </if>
      <if test="validityEndDate != null" >
        VALIDITY_END_DATE,
      </if>
      <if test="validityYear != null" >
        VALIDITY_YEAR,
      </if>
      <if test="inssueDate != null" >
        INSSUE_DATE,
      </if>
      <if test="annualInspectionDate != null" >
        ANNUAL_INSPECTION_DATE,
      </if>
      <if test="issueUnit != null" >
        ISSUE_UNIT,
      </if>
      <if test="versionExplain != null" >
        VERSION_EXPLAIN,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="licenseId != null" >
        #{licenseId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionName != null" >
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="licenseName != null" >
        #{licenseName,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null" >
        #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="validityBeginDate != null" >
        #{validityBeginDate,jdbcType=DATE},
      </if>
      <if test="validityEndDate != null" >
        #{validityEndDate,jdbcType=DATE},
      </if>
      <if test="validityYear != null" >
        #{validityYear,jdbcType=VARCHAR},
      </if>
      <if test="inssueDate != null" >
        #{inssueDate,jdbcType=DATE},
      </if>
      <if test="annualInspectionDate != null" >
        #{annualInspectionDate,jdbcType=DATE},
      </if>
      <if test="issueUnit != null" >
        #{issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="versionExplain != null" >
        #{versionExplain,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.comlicense.ComlicenseVersionExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from comlicense_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    <set >
      <if test="record.versionId != null" >
        VERSION_ID = #{record.versionId,jdbcType=INTEGER},
      </if>
      <if test="record.licenseId != null" >
        LICENSE_ID = #{record.licenseId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.versionName != null" >
        VERSION_NAME = #{record.versionName,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseName != null" >
        LICENSE_NAME = #{record.licenseName,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseType != null" >
        LICENSE_TYPE = #{record.licenseType,jdbcType=VARCHAR},
      </if>
      <if test="record.validityBeginDate != null" >
        VALIDITY_BEGIN_DATE = #{record.validityBeginDate,jdbcType=DATE},
      </if>
      <if test="record.validityEndDate != null" >
        VALIDITY_END_DATE = #{record.validityEndDate,jdbcType=DATE},
      </if>
      <if test="record.validityYear != null" >
        VALIDITY_YEAR = #{record.validityYear,jdbcType=VARCHAR},
      </if>
      <if test="record.inssueDate != null" >
        INSSUE_DATE = #{record.inssueDate,jdbcType=DATE},
      </if>
      <if test="record.annualInspectionDate != null" >
        ANNUAL_INSPECTION_DATE = #{record.annualInspectionDate,jdbcType=DATE},
      </if>
      <if test="record.issueUnit != null" >
        ISSUE_UNIT = #{record.issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.versionExplain != null" >
        VERSION_EXPLAIN = #{record.versionExplain,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    set VERSION_ID = #{record.versionId,jdbcType=INTEGER},
      LICENSE_ID = #{record.licenseId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      VERSION_NAME = #{record.versionName,jdbcType=VARCHAR},
      LICENSE_NAME = #{record.licenseName,jdbcType=VARCHAR},
      LICENSE_TYPE = #{record.licenseType,jdbcType=VARCHAR},
      VALIDITY_BEGIN_DATE = #{record.validityBeginDate,jdbcType=DATE},
      VALIDITY_END_DATE = #{record.validityEndDate,jdbcType=DATE},
      VALIDITY_YEAR = #{record.validityYear,jdbcType=VARCHAR},
      INSSUE_DATE = #{record.inssueDate,jdbcType=DATE},
      ANNUAL_INSPECTION_DATE = #{record.annualInspectionDate,jdbcType=DATE},
      ISSUE_UNIT = #{record.issueUnit,jdbcType=VARCHAR},
      VERSION_EXPLAIN = #{record.versionExplain,jdbcType=LONGVARCHAR},
      REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    set VERSION_ID = #{record.versionId,jdbcType=INTEGER},
      LICENSE_ID = #{record.licenseId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      VERSION_NAME = #{record.versionName,jdbcType=VARCHAR},
      LICENSE_NAME = #{record.licenseName,jdbcType=VARCHAR},
      LICENSE_TYPE = #{record.licenseType,jdbcType=VARCHAR},
      VALIDITY_BEGIN_DATE = #{record.validityBeginDate,jdbcType=DATE},
      VALIDITY_END_DATE = #{record.validityEndDate,jdbcType=DATE},
      VALIDITY_YEAR = #{record.validityYear,jdbcType=VARCHAR},
      INSSUE_DATE = #{record.inssueDate,jdbcType=DATE},
      ANNUAL_INSPECTION_DATE = #{record.annualInspectionDate,jdbcType=DATE},
      ISSUE_UNIT = #{record.issueUnit,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.comlicense.ComlicenseVersionWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    <set >
      <if test="licenseId != null" >
        LICENSE_ID = #{licenseId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionName != null" >
        VERSION_NAME = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="licenseName != null" >
        LICENSE_NAME = #{licenseName,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null" >
        LICENSE_TYPE = #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="validityBeginDate != null" >
        VALIDITY_BEGIN_DATE = #{validityBeginDate,jdbcType=DATE},
      </if>
      <if test="validityEndDate != null" >
        VALIDITY_END_DATE = #{validityEndDate,jdbcType=DATE},
      </if>
      <if test="validityYear != null" >
        VALIDITY_YEAR = #{validityYear,jdbcType=VARCHAR},
      </if>
      <if test="inssueDate != null" >
        INSSUE_DATE = #{inssueDate,jdbcType=DATE},
      </if>
      <if test="annualInspectionDate != null" >
        ANNUAL_INSPECTION_DATE = #{annualInspectionDate,jdbcType=DATE},
      </if>
      <if test="issueUnit != null" >
        ISSUE_UNIT = #{issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="versionExplain != null" >
        VERSION_EXPLAIN = #{versionExplain,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where VERSION_ID = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.comlicense.ComlicenseVersionWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    set LICENSE_ID = #{licenseId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      VERSION_NAME = #{versionName,jdbcType=VARCHAR},
      LICENSE_NAME = #{licenseName,jdbcType=VARCHAR},
      LICENSE_TYPE = #{licenseType,jdbcType=VARCHAR},
      VALIDITY_BEGIN_DATE = #{validityBeginDate,jdbcType=DATE},
      VALIDITY_END_DATE = #{validityEndDate,jdbcType=DATE},
      VALIDITY_YEAR = #{validityYear,jdbcType=VARCHAR},
      INSSUE_DATE = #{inssueDate,jdbcType=DATE},
      ANNUAL_INSPECTION_DATE = #{annualInspectionDate,jdbcType=DATE},
      ISSUE_UNIT = #{issueUnit,jdbcType=VARCHAR},
      VERSION_EXPLAIN = #{versionExplain,jdbcType=LONGVARCHAR},
      REMARK = #{remark,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR}
    where VERSION_ID = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.comlicense.ComlicenseVersion" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_version
    set LICENSE_ID = #{licenseId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      VERSION_NAME = #{versionName,jdbcType=VARCHAR},
      LICENSE_NAME = #{licenseName,jdbcType=VARCHAR},
      LICENSE_TYPE = #{licenseType,jdbcType=VARCHAR},
      VALIDITY_BEGIN_DATE = #{validityBeginDate,jdbcType=DATE},
      VALIDITY_END_DATE = #{validityEndDate,jdbcType=DATE},
      VALIDITY_YEAR = #{validityYear,jdbcType=VARCHAR},
      INSSUE_DATE = #{inssueDate,jdbcType=DATE},
      ANNUAL_INSPECTION_DATE = #{annualInspectionDate,jdbcType=DATE},
      ISSUE_UNIT = #{issueUnit,jdbcType=VARCHAR}
    where VERSION_ID = #{versionId,jdbcType=INTEGER}
  </update>
</mapper>