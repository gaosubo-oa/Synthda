<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.comlicense.ComlicenseUseMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.comlicense.ComlicenseUse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LICENSE_USE_ID" property="licenseUseId" jdbcType="INTEGER" />
    <result column="LEND_TITLE" property="lendTitle" jdbcType="VARCHAR" />
    <result column="APPROVAL_USER" property="approvalUser" jdbcType="VARCHAR" />
    <result column="APPROVAL_DEPT" property="approvalDept" jdbcType="INTEGER" />
    <result column="CUSTOMER" property="customer" jdbcType="VARCHAR" />
    <result column="URGENCY" property="urgency" jdbcType="VARCHAR" />
    <result column="USE_TIME" property="useTime" jdbcType="TIMESTAMP" />
    <result column="PLAN_RETURN_TIME" property="planReturnTime" jdbcType="TIMESTAMP" />
    <result column="REAL_RETURN_TIME" property="realReturnTime" jdbcType="TIMESTAMP" />
    <result column="APPROVAL_STATUS" property="approvalStatus" jdbcType="VARCHAR" />
    <result column="REVIEWER" property="reviewer" jdbcType="VARCHAR" />
    <result column="SENDER" property="sender" jdbcType="VARCHAR" />
    <result column="ADDRESSEE" property="addressee" jdbcType="VARCHAR" />
    <result column="COURIER_NUM" property="courierNum" jdbcType="VARCHAR" />
    <result column="DISPATCH_TIME" property="dispatchTime" jdbcType="TIMESTAMP" />
    <result column="MAIL_ADDRESS" property="mailAddress" jdbcType="VARCHAR" />
    <result column="USE_STATUS" property="useStatus" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.comlicense.ComlicenseUseWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="USE_REASON" property="useReason" jdbcType="LONGVARCHAR" />
    <result column="LICENSE_IDS" property="licenseIds" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LICENSE_USE_ID, LEND_TITLE, APPROVAL_USER, APPROVAL_DEPT, CUSTOMER, URGENCY, USE_TIME, 
    PLAN_RETURN_TIME, REAL_RETURN_TIME, APPROVAL_STATUS, REVIEWER, SENDER, ADDRESSEE, 
    COURIER_NUM, DISPATCH_TIME, MAIL_ADDRESS, USE_STATUS
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    USE_REASON, LICENSE_IDS
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.comlicense.ComlicenseUseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comlicense_use
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.comlicense.ComlicenseUseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comlicense_use
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comlicense_use
    where LICENSE_USE_ID = #{licenseUseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comlicense_use
    where LICENSE_USE_ID = #{licenseUseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.comlicense.ComlicenseUseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comlicense_use
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.comlicense.ComlicenseUseWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comlicense_use (LICENSE_USE_ID, LEND_TITLE, APPROVAL_USER, 
      APPROVAL_DEPT, CUSTOMER, URGENCY, 
      USE_TIME, PLAN_RETURN_TIME, REAL_RETURN_TIME, 
      APPROVAL_STATUS, REVIEWER, SENDER, 
      ADDRESSEE, COURIER_NUM, DISPATCH_TIME, 
      MAIL_ADDRESS, USE_STATUS, USE_REASON, 
      LICENSE_IDS)
    values (#{licenseUseId,jdbcType=INTEGER}, #{lendTitle,jdbcType=VARCHAR}, #{approvalUser,jdbcType=VARCHAR}, 
      #{approvalDept,jdbcType=INTEGER}, #{customer,jdbcType=VARCHAR}, #{urgency,jdbcType=VARCHAR}, 
      #{useTime,jdbcType=TIMESTAMP}, #{planReturnTime,jdbcType=TIMESTAMP}, #{realReturnTime,jdbcType=TIMESTAMP}, 
      #{approvalStatus,jdbcType=VARCHAR}, #{reviewer,jdbcType=VARCHAR}, #{sender,jdbcType=VARCHAR}, 
      #{addressee,jdbcType=VARCHAR}, #{courierNum,jdbcType=VARCHAR}, #{dispatchTime,jdbcType=TIMESTAMP}, 
      #{mailAddress,jdbcType=VARCHAR}, #{useStatus,jdbcType=VARCHAR}, #{useReason,jdbcType=LONGVARCHAR}, 
      #{licenseIds,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.comlicense.ComlicenseUseWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comlicense_use
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="licenseUseId != null" >
        LICENSE_USE_ID,
      </if>
      <if test="lendTitle != null" >
        LEND_TITLE,
      </if>
      <if test="approvalUser != null" >
        APPROVAL_USER,
      </if>
      <if test="approvalDept != null" >
        APPROVAL_DEPT,
      </if>
      <if test="customer != null" >
        CUSTOMER,
      </if>
      <if test="urgency != null" >
        URGENCY,
      </if>
      <if test="useTime != null" >
        USE_TIME,
      </if>
      <if test="planReturnTime != null" >
        PLAN_RETURN_TIME,
      </if>
      <if test="realReturnTime != null" >
        REAL_RETURN_TIME,
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS,
      </if>
      <if test="reviewer != null" >
        REVIEWER,
      </if>
      <if test="sender != null" >
        SENDER,
      </if>
      <if test="addressee != null" >
        ADDRESSEE,
      </if>
      <if test="courierNum != null" >
        COURIER_NUM,
      </if>
      <if test="dispatchTime != null" >
        DISPATCH_TIME,
      </if>
      <if test="mailAddress != null" >
        MAIL_ADDRESS,
      </if>
      <if test="useStatus != null" >
        USE_STATUS,
      </if>
      <if test="useReason != null" >
        USE_REASON,
      </if>
      <if test="licenseIds != null" >
        LICENSE_IDS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="licenseUseId != null" >
        #{licenseUseId,jdbcType=INTEGER},
      </if>
      <if test="lendTitle != null" >
        #{lendTitle,jdbcType=VARCHAR},
      </if>
      <if test="approvalUser != null" >
        #{approvalUser,jdbcType=VARCHAR},
      </if>
      <if test="approvalDept != null" >
        #{approvalDept,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="urgency != null" >
        #{urgency,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planReturnTime != null" >
        #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null" >
        #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null" >
        #{approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="reviewer != null" >
        #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="addressee != null" >
        #{addressee,jdbcType=VARCHAR},
      </if>
      <if test="courierNum != null" >
        #{courierNum,jdbcType=VARCHAR},
      </if>
      <if test="dispatchTime != null" >
        #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailAddress != null" >
        #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="useStatus != null" >
        #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="useReason != null" >
        #{useReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="licenseIds != null" >
        #{licenseIds,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.comlicense.ComlicenseUseExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from comlicense_use
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    <set >
      <if test="record.licenseUseId != null" >
        LICENSE_USE_ID = #{record.licenseUseId,jdbcType=INTEGER},
      </if>
      <if test="record.lendTitle != null" >
        LEND_TITLE = #{record.lendTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalUser != null" >
        APPROVAL_USER = #{record.approvalUser,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalDept != null" >
        APPROVAL_DEPT = #{record.approvalDept,jdbcType=INTEGER},
      </if>
      <if test="record.customer != null" >
        CUSTOMER = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.urgency != null" >
        URGENCY = #{record.urgency,jdbcType=VARCHAR},
      </if>
      <if test="record.useTime != null" >
        USE_TIME = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planReturnTime != null" >
        PLAN_RETURN_TIME = #{record.planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realReturnTime != null" >
        REAL_RETURN_TIME = #{record.realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvalStatus != null" >
        APPROVAL_STATUS = #{record.approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewer != null" >
        REVIEWER = #{record.reviewer,jdbcType=VARCHAR},
      </if>
      <if test="record.sender != null" >
        SENDER = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.addressee != null" >
        ADDRESSEE = #{record.addressee,jdbcType=VARCHAR},
      </if>
      <if test="record.courierNum != null" >
        COURIER_NUM = #{record.courierNum,jdbcType=VARCHAR},
      </if>
      <if test="record.dispatchTime != null" >
        DISPATCH_TIME = #{record.dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mailAddress != null" >
        MAIL_ADDRESS = #{record.mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.useStatus != null" >
        USE_STATUS = #{record.useStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.useReason != null" >
        USE_REASON = #{record.useReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.licenseIds != null" >
        LICENSE_IDS = #{record.licenseIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    set LICENSE_USE_ID = #{record.licenseUseId,jdbcType=INTEGER},
      LEND_TITLE = #{record.lendTitle,jdbcType=VARCHAR},
      APPROVAL_USER = #{record.approvalUser,jdbcType=VARCHAR},
      APPROVAL_DEPT = #{record.approvalDept,jdbcType=INTEGER},
      CUSTOMER = #{record.customer,jdbcType=VARCHAR},
      URGENCY = #{record.urgency,jdbcType=VARCHAR},
      USE_TIME = #{record.useTime,jdbcType=TIMESTAMP},
      PLAN_RETURN_TIME = #{record.planReturnTime,jdbcType=TIMESTAMP},
      REAL_RETURN_TIME = #{record.realReturnTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=VARCHAR},
      REVIEWER = #{record.reviewer,jdbcType=VARCHAR},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      ADDRESSEE = #{record.addressee,jdbcType=VARCHAR},
      COURIER_NUM = #{record.courierNum,jdbcType=VARCHAR},
      DISPATCH_TIME = #{record.dispatchTime,jdbcType=TIMESTAMP},
      MAIL_ADDRESS = #{record.mailAddress,jdbcType=VARCHAR},
      USE_STATUS = #{record.useStatus,jdbcType=VARCHAR},
      USE_REASON = #{record.useReason,jdbcType=LONGVARCHAR},
      LICENSE_IDS = #{record.licenseIds,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    set LICENSE_USE_ID = #{record.licenseUseId,jdbcType=INTEGER},
      LEND_TITLE = #{record.lendTitle,jdbcType=VARCHAR},
      APPROVAL_USER = #{record.approvalUser,jdbcType=VARCHAR},
      APPROVAL_DEPT = #{record.approvalDept,jdbcType=INTEGER},
      CUSTOMER = #{record.customer,jdbcType=VARCHAR},
      URGENCY = #{record.urgency,jdbcType=VARCHAR},
      USE_TIME = #{record.useTime,jdbcType=TIMESTAMP},
      PLAN_RETURN_TIME = #{record.planReturnTime,jdbcType=TIMESTAMP},
      REAL_RETURN_TIME = #{record.realReturnTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=VARCHAR},
      REVIEWER = #{record.reviewer,jdbcType=VARCHAR},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      ADDRESSEE = #{record.addressee,jdbcType=VARCHAR},
      COURIER_NUM = #{record.courierNum,jdbcType=VARCHAR},
      DISPATCH_TIME = #{record.dispatchTime,jdbcType=TIMESTAMP},
      MAIL_ADDRESS = #{record.mailAddress,jdbcType=VARCHAR},
      USE_STATUS = #{record.useStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.comlicense.ComlicenseUseWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    <set >
      <if test="lendTitle != null" >
        LEND_TITLE = #{lendTitle,jdbcType=VARCHAR},
      </if>
      <if test="approvalUser != null" >
        APPROVAL_USER = #{approvalUser,jdbcType=VARCHAR},
      </if>
      <if test="approvalDept != null" >
        APPROVAL_DEPT = #{approvalDept,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        CUSTOMER = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="urgency != null" >
        URGENCY = #{urgency,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null" >
        USE_TIME = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planReturnTime != null" >
        PLAN_RETURN_TIME = #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null" >
        REAL_RETURN_TIME = #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="reviewer != null" >
        REVIEWER = #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        SENDER = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="addressee != null" >
        ADDRESSEE = #{addressee,jdbcType=VARCHAR},
      </if>
      <if test="courierNum != null" >
        COURIER_NUM = #{courierNum,jdbcType=VARCHAR},
      </if>
      <if test="dispatchTime != null" >
        DISPATCH_TIME = #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailAddress != null" >
        MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="useStatus != null" >
        USE_STATUS = #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="useReason != null" >
        USE_REASON = #{useReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="licenseIds != null" >
        LICENSE_IDS = #{licenseIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where LICENSE_USE_ID = #{licenseUseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.comlicense.ComlicenseUseWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    set LEND_TITLE = #{lendTitle,jdbcType=VARCHAR},
      APPROVAL_USER = #{approvalUser,jdbcType=VARCHAR},
      APPROVAL_DEPT = #{approvalDept,jdbcType=INTEGER},
      CUSTOMER = #{customer,jdbcType=VARCHAR},
      URGENCY = #{urgency,jdbcType=VARCHAR},
      USE_TIME = #{useTime,jdbcType=TIMESTAMP},
      PLAN_RETURN_TIME = #{planReturnTime,jdbcType=TIMESTAMP},
      REAL_RETURN_TIME = #{realReturnTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
      REVIEWER = #{reviewer,jdbcType=VARCHAR},
      SENDER = #{sender,jdbcType=VARCHAR},
      ADDRESSEE = #{addressee,jdbcType=VARCHAR},
      COURIER_NUM = #{courierNum,jdbcType=VARCHAR},
      DISPATCH_TIME = #{dispatchTime,jdbcType=TIMESTAMP},
      MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR},
      USE_STATUS = #{useStatus,jdbcType=VARCHAR},
      USE_REASON = #{useReason,jdbcType=LONGVARCHAR},
      LICENSE_IDS = #{licenseIds,jdbcType=LONGVARCHAR}
    where LICENSE_USE_ID = #{licenseUseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.comlicense.ComlicenseUse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comlicense_use
    set LEND_TITLE = #{lendTitle,jdbcType=VARCHAR},
      APPROVAL_USER = #{approvalUser,jdbcType=VARCHAR},
      APPROVAL_DEPT = #{approvalDept,jdbcType=INTEGER},
      CUSTOMER = #{customer,jdbcType=VARCHAR},
      URGENCY = #{urgency,jdbcType=VARCHAR},
      USE_TIME = #{useTime,jdbcType=TIMESTAMP},
      PLAN_RETURN_TIME = #{planReturnTime,jdbcType=TIMESTAMP},
      REAL_RETURN_TIME = #{realReturnTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
      REVIEWER = #{reviewer,jdbcType=VARCHAR},
      SENDER = #{sender,jdbcType=VARCHAR},
      ADDRESSEE = #{addressee,jdbcType=VARCHAR},
      COURIER_NUM = #{courierNum,jdbcType=VARCHAR},
      DISPATCH_TIME = #{dispatchTime,jdbcType=TIMESTAMP},
      MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR},
      USE_STATUS = #{useStatus,jdbcType=VARCHAR}
    where LICENSE_USE_ID = #{licenseUseId,jdbcType=INTEGER}
  </update>

  <select id="getDataByCondition" resultMap="ResultMapWithBLOBs">
    select * from comlicense_use
    <where>
      <if test="approvalUser!=null and approvalUser!=''">
        and APPROVAL_USER=#{approvalUser}
      </if>
      <if test="lendTitle!=null and lendTitle!=''">
        and LEND_TITLE like concat('%',#{lendTitle},'%')
      </if>
      <if  test="urgency!=null and urgency!=''">
        and URGENCY=#{urgency}
      </if>
      <if test="reviewer!=null and reviewer!=''">
        and REVIEWER=#{reviewer}
      </if>
      <if test="approvalStatus!=null and approvalStatus!=''">
        and APPROVAL_STATUS=#{approvalStatus}
      </if>
      <if test="licenseUseId!=null">
        and LICENSE_USE_ID=#{licenseUseId}
      </if>
    </where>
    order by USE_TIME desc
  </select>
</mapper>