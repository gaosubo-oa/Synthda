<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.HSTmeeting.HstMeetingMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.HSTmeeting.HstMeeting" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="MEETING_ID" property="meetingId" jdbcType="INTEGER" />
    <result column="MEET_NAME" property="meetName" jdbcType="VARCHAR" />
    <result column="SUBJECT" property="subject" jdbcType="VARCHAR" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="ROOM_ID" property="roomId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="PROPOSER_TIME" property="proposerTime" jdbcType="TIMESTAMP" />
    <result column="MANAGER_ID" property="managerId" jdbcType="VARCHAR" />
    <result column="MANAGER_TIME" property="managerTime" jdbcType="TIMESTAMP" />
    <result column="MEET_STATUS" property="meetStatus" jdbcType="CHAR" />
    <result column="ADVANCE_MIN" property="advanceMin" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="MEET_DESC" property="meetDesc" jdbcType="LONGVARCHAR" />
    <result column="USER_IDS" property="userIds" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
    <result column="REASON" property="reason" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MEETING_ID, MEET_NAME, SUBJECT, START_TIME, END_TIME, ROOM_ID, USER_ID, PROPOSER_TIME, 
    MANAGER_ID, MANAGER_TIME, MEET_STATUS, ADVANCE_MIN
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MEET_DESC, USER_IDS, ATTACHMENT_ID, ATTACHMENT_NAME, REASON
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.HSTmeeting.HstMeetingExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hst_meeting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="map">
  select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting where USER_ID = #{userId} ORDER BY PROPOSER_TIME DESC
</select>
  <select id="selectAllMeeting" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting where USER_ID = #{userId}
    <if test="hstMeetingWithBLOBs.meetStatus != null" >
      and meet_Status=#{hstMeetingWithBLOBs.meetStatus,jdbcType=CHAR}
    </if>
    ORDER BY PROPOSER_TIME DESC
  </select>

  <select id="selectAllMeetingCount" resultType="integer" parameterType="map">
    select count(* )from hst_meeting where USER_ID = #{userId}
    <if test="hstMeetingWithBLOBs.meetStatus != null" >
      and meet_Status=#{hstMeetingWithBLOBs.meetStatus,jdbcType=CHAR}
    </if>
  </select>

  <select id="selectAllMeeting2" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting where USER_ID = #{userId}
    <if test="hstMeetingWithBLOBs.meetStatus != null" >
      and meet_Status = 2
    </if>
    ORDER BY PROPOSER_TIME DESC
  </select>
  <select id="selectAllMeeting2Count" resultType="integer"  parameterType="map">
    select count(*) from hst_meeting where USER_ID = #{userId}
    <if test="hstMeetingWithBLOBs.meetStatus != null" >
      and meet_Status = 2
    </if>


  </select>
  <select id="selectAlls" resultType="integer" parameterType="string">
    select count(*) from hst_meeting where USER_ID = #{userId}
  </select>

  <select id="selectMeetingMy" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting where MANAGER_ID = #{userId} ORDER BY PROPOSER_TIME DESC
  </select>

  <select id="selectMeetingMys" resultType="integer" parameterType="string">
    select count(*) from hst_meeting where MANAGER_ID = #{userId}
  </select>

  <select id="selectMeetStatus" parameterType="map" resultMap="ResultMapWithBLOBs">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting
    <where>
        <if test="meetStatus != null and meetStatus !=''">
          MEET_STATUS = #{meetStatus} AND
        </if>
      USER_ID = #{userId}
    </where>
    ORDER BY PROPOSER_TIME DESC
  </select>

  <select id="selectMeetStatusMy" parameterType="map" resultMap="ResultMapWithBLOBs">
    select hm.*,hr.ROOM_MANAGER from hst_meeting hm
    LEFT JOIN hst_room hr ON hm.ROOM_ID = hr.ROOM_ID
    where
    <choose>
      <when test="userPriv==1">
      1=1
        <if test="meetStatus != null and meetStatus !=''">
         and hm.MEET_STATUS = #{meetStatus}
        </if>
      </when>

    <otherwise>
      <if test="meetStatus != null and meetStatus !=''">
        hm.MEET_STATUS = #{meetStatus} AND
      </if>
      (hm.MANAGER_ID LIKE concat('%,',#{userId},',%')
      OR hm.MANAGER_ID LIKE concat(#{userId},',%')) OR
      (hr.ROOM_MANAGER LIKE concat('%,',#{userId},',%')
      OR hr.ROOM_MANAGER LIKE concat(#{userId},',%'))
    </otherwise>
    </choose>
    order by START_TIME DESC

  </select>

  <select id="selectMeetStatusMyCount"  resultType="integer">
    select count(*) from hst_meeting
    <where>
      <if test="meetStatus != null and meetStatus !=''">
        MEET_STATUS = #{meetStatus} AND
      </if>
      (MANAGER_ID LIKE concat('%,',#{userId},',%')
      OR MANAGER_ID LIKE concat(#{userId},',%'))
    </where>

  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.HSTmeeting.HstMeetingExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hst_meeting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hst_meeting
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from hst_meeting
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.HSTmeeting.HstMeetingExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from hst_meeting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hst_meeting (MEETING_ID, MEET_NAME, SUBJECT, 
      START_TIME, END_TIME, ROOM_ID, 
      USER_ID, PROPOSER_TIME, MANAGER_ID, 
      MANAGER_TIME, MEET_STATUS, MEET_DESC, 
      USER_IDS, ATTACHMENT_ID, ATTACHMENT_NAME,
      REASON,ADVANCE_MIN)
    values (#{meetingId,jdbcType=INTEGER}, #{meetName,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{roomId,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR}, #{proposerTime,jdbcType=TIMESTAMP}, #{managerId,jdbcType=VARCHAR}, 
      #{managerTime,jdbcType=TIMESTAMP}, #{meetStatus,jdbcType=CHAR}, #{meetDesc,jdbcType=LONGVARCHAR}, 
      #{userIds,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR}, #{attachmentName,jdbcType=LONGVARCHAR}, 
      #{reason,jdbcType=LONGVARCHAR},#{advanceMin,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey order="AFTER" keyProperty="meetingId" resultType="int">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hst_meeting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meetingId != null" >
        MEETING_ID,
      </if>
      <if test="meetName != null" >
        MEET_NAME,
      </if>
      <if test="subject != null" >
        SUBJECT,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="roomId != null" >
        ROOM_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="proposerTime != null" >
        PROPOSER_TIME,
      </if>
      <if test="managerId != null" >
        MANAGER_ID,
      </if>
      <if test="managerTime != null" >
        MANAGER_TIME,
      </if>
      <if test="meetStatus != null" >
        MEET_STATUS,
      </if>
      <if test="meetDesc != null" >
        MEET_DESC,
      </if>
      <if test="userIds != null" >
        USER_IDS,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="advanceMin != null and advanceMin !=''" >
        ADVANCE_MIN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meetingId != null" >
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="meetName != null" >
        #{meetName,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="proposerTime != null" >
        #{proposerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="managerTime != null" >
        #{managerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetStatus != null" >
        #{meetStatus,jdbcType=CHAR},
      </if>
      <if test="meetDesc != null" >
        #{meetDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="userIds != null" >
        #{userIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="advanceMin != null and advanceMin !=''" >
        #{advanceMin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" databaseId="kingbase">
    insert into hst_meeting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meetingId != null" >
        MEETING_ID,
      </if>
      <if test="meetName != null" >
        MEET_NAME,
      </if>
      <if test="subject != null" >
        SUBJECT,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="roomId != null" >
        ROOM_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="proposerTime != null" >
        PROPOSER_TIME,
      </if>
      <if test="managerId != null" >
        MANAGER_ID,
      </if>
      <if test="managerTime != null" >
        MANAGER_TIME,
      </if>
      <if test="meetStatus != null" >
        MEET_STATUS,
      </if>
      <if test="meetDesc != null" >
        MEET_DESC,
      </if>
      <if test="userIds != null" >
        USER_IDS,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="advanceMin != null and advanceMin !=''" >
        ADVANCE_MIN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meetingId != null" >
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="meetName != null" >
        #{meetName,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="proposerTime != null" >
        #{proposerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="managerTime != null" >
        #{managerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetStatus != null" >
        #{meetStatus,jdbcType=CHAR},
      </if>
      <if test="meetDesc != null" >
        #{meetDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="userIds != null" >
        #{userIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="advanceMin != null and advanceMin !=''" >
        #{advanceMin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.xoa.model.HSTmeeting.HstMeetingExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from hst_meeting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    <set >
      <if test="record.meetingId != null" >
        MEETING_ID = #{record.meetingId,jdbcType=INTEGER},
      </if>
      <if test="record.meetName != null" >
        MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roomId != null" >
        ROOM_ID = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.proposerTime != null" >
        PROPOSER_TIME = #{record.proposerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.managerId != null" >
        MANAGER_ID = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.managerTime != null" >
        MANAGER_TIME = #{record.managerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meetStatus != null" >
        MEET_STATUS = #{record.meetStatus,jdbcType=CHAR},
      </if>
      <if test="record.meetDesc != null" >
        MEET_DESC = #{record.meetDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userIds != null" >
        USER_IDS = #{record.userIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reason != null" >
        REASON = #{record.reason,jdbcType=LONGVARCHAR},
      </if><if test="record.reason != null" >
      REASON = #{record.reason,jdbcType=LONGVARCHAR},
    </if>
      <if test="record.advanceMin != null" >
        ADVANCE_MIN = #{record.advanceMin,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    set MEETING_ID = #{record.meetingId,jdbcType=INTEGER},
      MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      ROOM_ID = #{record.roomId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      PROPOSER_TIME = #{record.proposerTime,jdbcType=TIMESTAMP},
      MANAGER_ID = #{record.managerId,jdbcType=VARCHAR},
      MANAGER_TIME = #{record.managerTime,jdbcType=TIMESTAMP},
      MEET_STATUS = #{record.meetStatus,jdbcType=CHAR},
      MEET_DESC = #{record.meetDesc,jdbcType=LONGVARCHAR},
      USER_IDS = #{record.userIds,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      REASON = #{record.reason,jdbcType=LONGVARCHAR},
    ADVANCE_MIN = #{record.advanceMin,jdbcType=INTEGER},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    set MEETING_ID = #{record.meetingId,jdbcType=INTEGER},
      MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      ROOM_ID = #{record.roomId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      PROPOSER_TIME = #{record.proposerTime,jdbcType=TIMESTAMP},
      MANAGER_ID = #{record.managerId,jdbcType=VARCHAR},
      MANAGER_TIME = #{record.managerTime,jdbcType=TIMESTAMP},
      MEET_STATUS = #{record.meetStatus,jdbcType=CHAR},
    ADVANCE_MIN = #{record.advanceMin,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    <set >
      <if test="meetName != null" >
        MEET_NAME = #{meetName,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        SUBJECT = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomId != null" >
        ROOM_ID = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="proposerTime != null" >
        PROPOSER_TIME = #{proposerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="managerId != null" >
        MANAGER_ID = #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="managerTime != null" >
        MANAGER_TIME = #{managerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetStatus != null" >
        MEET_STATUS = #{meetStatus,jdbcType=CHAR},
      </if>
      <if test="meetDesc != null" >
        MEET_DESC = #{meetDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="userIds != null" >
        USER_IDS = #{userIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        REASON = #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        ADVANCE_MIN = #{advanceMin,jdbcType=Integer},
      </if>
    </set>
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.HSTmeeting.HstMeetingWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    set MEET_NAME = #{meetName,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      ROOM_ID = #{roomId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      PROPOSER_TIME = #{proposerTime,jdbcType=TIMESTAMP},
      MANAGER_ID = #{managerId,jdbcType=VARCHAR},
      MANAGER_TIME = #{managerTime,jdbcType=TIMESTAMP},
      MEET_STATUS = #{meetStatus,jdbcType=CHAR},
      MEET_DESC = #{meetDesc,jdbcType=LONGVARCHAR},
      USER_IDS = #{userIds,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      REASON = #{reason,jdbcType=LONGVARCHAR},
      ADVANCE_MIN = #{advanceMin,jdbcType=LONGVARCHAR}
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.HSTmeeting.HstMeeting" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hst_meeting
    set MEET_NAME = #{meetName,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      ROOM_ID = #{roomId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      PROPOSER_TIME = #{proposerTime,jdbcType=TIMESTAMP},
      MANAGER_ID = #{managerId,jdbcType=VARCHAR},
      MANAGER_TIME = #{managerTime,jdbcType=TIMESTAMP},
      MEET_STATUS = #{meetStatus,jdbcType=CHAR},
    ADVANCE_MIN = #{advanceMin,jdbcType=CHAR}
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </update>

  <update id="updateMeetingStatus" >
    update hst_meeting
    set MEET_STATUS = #{meetStatus,jdbcType=CHAR}
    where MEETING_ID = #{meetingId,jdbcType=INTEGER}
  </update>

  <select id="selectAll2" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting
    where
    MEET_STATUS NOT in (1,4)
    and (USER_ID=#{meetingWithBLOBs.userId}  OR USER_IDS LIKE CONCAT('%,',#{meetingWithBLOBs.userId},',%') OR USER_IDS LIKE CONCAT(#{meetingWithBLOBs.userId},',%'))
    order by PROPOSER_TIME desc
  </select>

  <select id="selectAll3" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting
    where
    MEET_STATUS in (2,3)
    and (USER_ID=#{meetingWithBLOBs.userId}  OR USER_IDS LIKE CONCAT('%,',#{meetingWithBLOBs.userId},',%') OR USER_IDS LIKE CONCAT(#{meetingWithBLOBs.userId},',%'))
    order by PROPOSER_TIME desc
  </select>

  <select id="selectCounts" resultType="integer" parameterType="map">
    select count(*) from hst_meeting
    where
    MEET_STATUS NOT in (1,4)
    and (USER_ID=#{meetingWithBLOBs.userId}  OR USER_IDS LIKE CONCAT('%,',#{meetingWithBLOBs.userId},',%') OR USER_IDS LIKE CONCAT(#{meetingWithBLOBs.userId},',%'))
    order by START_TIME desc
  </select>
  <update id="updHstMeetStatusById" parameterType="com.xoa.model.meet.Meeting">
    update
    hst_meeting
    SET
    MEET_STATUS=#{meetStatus}
    WHERE
    MEETING_ID=#{meetingId}
  </update>


  <select id="getHstMettingByTime" parameterType="map" resultType="java.lang.Integer">
    SELECT
    count(MEETING_ID)
    FROM
    hst_meeting
    WHERE
    START_TIME  &lt; #{endTime}
    AND END_TIME &gt;#{startTime}
    AND (MEET_STATUS = 1 OR MEET_STATUS = 2 OR MEET_STATUS = 3)
    AND ROOM_ID = #{roomId}

  </select>

  <select id="getHstMettingByTimePlus" parameterType="map" resultType="java.lang.Integer">
    SELECT
    count(MEETING_ID)
    FROM
    hst_meeting
    WHERE
    START_TIME  &lt; #{endTime}
    AND END_TIME &gt;#{startTime}
    AND (`MEET_STATUS` = 2 OR `MEET_STATUS` = 3)
    AND ROOM_ID = #{roomId}
  </select>
  <select id="getApp" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting
    where
    MEET_STATUS in (2,3)
    and (USER_IDS LIKE CONCAT('%,',#{userId},',%') OR USER_IDS LIKE CONCAT(#{userId},',%'))
    order by PROPOSER_TIME desc
  </select>
  <select id="selectAllApp" resultMap="ResultMapWithBLOBs" parameterType="map">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting where MEET_STATUS in (2,3)
  </select>
  <select id="hstMeetingView" resultMap="ResultMapWithBLOBs">
      select <include refid="Base_Column_List" />,<include refid="Blob_Column_List" /> from hst_meeting
      where START_TIME  &lt; #{endTime} AND END_TIME &gt;#{startTime}
  </select>

</mapper>