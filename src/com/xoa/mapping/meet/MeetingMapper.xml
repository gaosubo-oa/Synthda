<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.meet.MeetingMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.meet.Meeting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="SID" property="sid" jdbcType="INTEGER"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE"/>
        <result column="END_TIME" property="endTime" javaType="String"/>
        <result column="IS_WRITE_CALEDNAR" property="isWriteCalednar" jdbcType="INTEGER"/>
        <result column="MEET_NAME" property="meetName" jdbcType="VARCHAR"/>
        <result column="RESEND_HOUR" property="resendHour" jdbcType="INTEGER"/>
        <result column="RESEND_MINUTE" property="resendMinute" jdbcType="INTEGER"/>
        <result column="RESEND_SEVERAL" property="resendSeveral" jdbcType="INTEGER"/>
        <result column="SMS2_REMIND" property="sms2Remind" jdbcType="CHAR"/>
        <result column="SMS_REMIND" property="smsRemind" jdbcType="CHAR"/>
        <result column="START_TIME" property="startTime" javaType="String"/>
        <result column="STATUS" property="status" jdbcType="INTEGER"/>
        <result column="SUBJECT" property="subject" jdbcType="VARCHAR"/>
        <result column="MANAGER_ID" property="managerId" jdbcType="INTEGER"/>
        <result column="MEET_ROOM_ID" property="meetRoomId" jdbcType="INTEGER"/>
        <result column="UID" property="uid" jdbcType="INTEGER"/>
        <result column="RECORDER_ID" property="recorderId" jdbcType="INTEGER"/>
        <result column="ISUPLOADSUMMARY" property="isuploadsummary" jdbcType="VARCHAR"/>
        <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="VARCHAR"/>
        <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="VARCHAR"/>
        <result column="SUMMARY_ATTACHMENT_ID" property="summaryAttachmentId" jdbcType="VARCHAR"/>
        <result column="SUMMARY_ATTACHMENT_NAME" property="summaryAttachmentName" jdbcType="VARCHAR"/>
        <result column="MOBILE_NO" property="mobileNo" jdbcType="VARCHAR"/>
        <result column="M_PROPOSER" property="mProposer" javaType="string"/>
        <result column="M_MANAGER" property="mManager" javaType="string"/>
        <result column="MR_NAME" property="meetRoomName" javaType="string"/>
        <result column="CYCLE" property="cycle" javaType="string"/>
        <result column="CYCLE_NO" property="cycleNo" javaType="integer"/>
        <result column="VIDEO_CONF_FLAG" property="videoConfFlag" jdbcType="VARCHAR"/>
        <result column="VIDEO_CONF_ID" property="videoConfId" jdbcType="VARCHAR"/>
        <result column="MEET_CODE" property="meetCode" jdbcType="VARCHAR"/>
        <result column="SERVICE_USER" property="serviceUser" jdbcType="VARCHAR"/>
        <result column="PHOTO_ID" property="photoId" javaType="string"/>
        <result column="PHOTO_NAME" property="photoName" javaType="string"/>
        <result column="VIDEO_ID" property="videoId" javaType="string"/>
        <result column="VIDEO_NAME" property="videoName" javaType="string"/>
        <result column="RECORD_ID" property="recordId" javaType="string"/>
        <result column="RECORD_NAME" property="recordName" javaType="string"/>
        <result column="REGISTER_PHOTO_ID" property="registerPhotoId" javaType="string"/>
        <result column="REGISTER_PHOTO_NAME" property="registerPhotoName" javaType="string"/>
        <result column="HANDWRITING_SIGN_YN" property="handwritingSignYn" javaType="string"/>
        <result column="AGENDA_ID" jdbcType="LONGVARCHAR" property="agendaId"/>
        <result column="AGENDA_NAME" jdbcType="LONGVARCHAR" property="agendaName"/>
        <result column="CREATE_QRCODE_TIME" jdbcType="DATE" property="createQrcodeTime"/>
        <result column="SIGN_IN_TIME" property="signInTime" javaType="String"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.meet.MeetingWithBLOBs" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ATTENDEE" property="attendee" jdbcType="LONGVARCHAR"/>
        <result column="ATTENDEE_NOT" property="attendeeNot" jdbcType="LONGVARCHAR"/>
        <result column="ATTENDEE_OUT" property="attendeeOut" jdbcType="LONGVARCHAR"/>
        <result column="MEET_DESC" property="meetDesc" jdbcType="LONGVARCHAR"/>
        <result column="READ_PEOPLE_ID" property="readPeopleId" jdbcType="LONGVARCHAR"/>
        <result column="SUMMARY" property="summary" jdbcType="LONGVARCHAR"/>
        <result column="EQUIPMENTS" property="equipments" jdbcType="LONGVARCHAR"/>
        <result column="ATTENDEE_NOT_IDS" property="attendeeNotIds" jdbcType="LONGVARCHAR"/>
        <result column="ATTENDEE_NOT_NAMES" property="attendeeNotNames" jdbcType="LONGVARCHAR"/>
        <result column="EQUIPMENT_IDS" property="equipmentIds" jdbcType="LONGVARCHAR"/>
        <result column="EQUIPMENT_NAMES" property="equipmentNames" jdbcType="LONGVARCHAR"/>
        <result column="managerIds" property="managerIds" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SID, CREATE_TIME, END_TIME, IS_WRITE_CALEDNAR, MEET_NAME, RESEND_HOUR, RESEND_MINUTE,
        RESEND_SEVERAL, SMS2_REMIND, SMS_REMIND, START_TIME, STATUS, SUBJECT, MANAGER_ID,
        MEET_ROOM_ID, UID, RECORDER_ID, ISUPLOADSUMMARY,MOBILE_NO,SERVICE_USER, AGENDA_ID, AGENDA_NAME,
        PHOTO_ID, PHOTO_NAME, VIDEO_ID, VIDEO_NAME, RECORD_ID, RECORD_NAME, SUMMARY_ATTACHMENT_ID, SUMMARY_ATTACHMENT_NAME, REGISTER_PHOTO_ID,
        REGISTER_PHOTO_NAME, HANDWRITING_SIGN_YN, AGENDA_ID, AGENDA_NAME
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ATTENDEE, ATTENDEE_NOT, ATTENDEE_OUT, MEET_DESC, READ_PEOPLE_ID, SUMMARY, EQUIPMENTS,
        ATTENDEE_NOT_IDS, ATTENDEE_NOT_NAMES, EQUIPMENT_IDS, EQUIPMENT_NAMES
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.xoa.model.meet.MeetingExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from meeting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.meet.MeetingExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from meeting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from meeting
        where SID = #{sid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from meeting
        where SID = #{sid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xoa.model.meet.MeetingExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from meeting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into meeting (SID, CREATE_TIME, END_TIME,
        IS_WRITE_CALEDNAR, MEET_NAME, RESEND_HOUR,
        RESEND_MINUTE, RESEND_SEVERAL, SMS2_REMIND,
        SMS_REMIND, START_TIME, STATUS,
        SUBJECT, MANAGER_ID, MEET_ROOM_ID,
        UID, RECORDER_ID, ISUPLOADSUMMARY,
        ATTENDEE, ATTENDEE_NOT, ATTENDEE_OUT,
        MEET_DESC, READ_PEOPLE_ID, SUMMARY,
        EQUIPMENTS, ATTENDEE_NOT_IDS, ATTENDEE_NOT_NAMES,
        EQUIPMENT_IDS, EQUIPMENT_NAMES,MOBILE_NO)
        values (#{sid,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT},
        #{isWriteCalednar,jdbcType=INTEGER}, #{meetName,jdbcType=VARCHAR}, #{resendHour,jdbcType=INTEGER},
        #{resendMinute,jdbcType=INTEGER}, #{resendSeveral,jdbcType=INTEGER}, #{sms2Remind,jdbcType=CHAR},
        #{smsRemind,jdbcType=CHAR}, #{startTime,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},
        #{subject,jdbcType=VARCHAR}, #{managerId,jdbcType=INTEGER}, #{meetRoomId,jdbcType=INTEGER},
        #{uid,jdbcType=INTEGER}, #{recorderId,jdbcType=INTEGER}, #{isuploadsummary,jdbcType=VARCHAR},
        #{attendee,jdbcType=LONGVARCHAR}, #{attendeeNot,jdbcType=LONGVARCHAR}, #{attendeeOut,jdbcType=LONGVARCHAR},
        #{meetDesc,jdbcType=LONGVARCHAR}, #{readPeopleId,jdbcType=LONGVARCHAR}, #{summary,jdbcType=LONGVARCHAR},
        #{equipments,jdbcType=LONGVARCHAR}, #{attendeeNotIds,jdbcType=LONGVARCHAR},
        #{attendeeNotNames,jdbcType=LONGVARCHAR},
        #{equipmentIds,jdbcType=LONGVARCHAR}, #{equipmentNames,jdbcType=LONGVARCHAR},#{mobileNo})
    </insert>
    <insert id="insertSelective" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into meeting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                SID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="endTime != null">
                END_TIME,
            </if>
            <if test="isWriteCalednar != null">
                IS_WRITE_CALEDNAR,
            </if>
            <if test="meetName != null">
                MEET_NAME,
            </if>
            <if test="resendHour != null">
                RESEND_HOUR,
            </if>
            <if test="resendMinute != null">
                RESEND_MINUTE,
            </if>
            <if test="resendSeveral != null">
                RESEND_SEVERAL,
            </if>
            <if test="sms2Remind != null">
                SMS2_REMIND,
            </if>
            <if test="smsRemind != null">
                SMS_REMIND,
            </if>
            <if test="startTime != null">
                START_TIME,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="subject != null">
                SUBJECT,
            </if>
            <if test="managerId != null">
                MANAGER_ID,
            </if>
            <if test="meetRoomId != null">
                MEET_ROOM_ID,
            </if>
            <if test="uid != null">
                UID,
            </if>
            <if test="recorderId != null">
                RECORDER_ID,
            </if>
            <if test="isuploadsummary != null">
                ISUPLOADSUMMARY,
            </if>
            <if test="attendee != null">
                ATTENDEE,
            </if>
            <if test="attendeeNot != null">
                ATTENDEE_NOT,
            </if>
            <if test="attendeeOut != null">
                ATTENDEE_OUT,
            </if>
            <if test="meetDesc != null">
                MEET_DESC,
            </if>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID,
            </if>
            <if test="summary != null">
                SUMMARY,
            </if>
            <if test="equipments != null">
                EQUIPMENTS,
            </if>
            <if test="attendeeNotIds != null">
                ATTENDEE_NOT_IDS,
            </if>
            <if test="attendeeNotNames != null">
                ATTENDEE_NOT_NAMES,
            </if>
            <if test="equipmentIds != null">
                EQUIPMENT_IDS,
            </if>
            <if test="equipmentNames != null">
                EQUIPMENT_NAMES,
            </if>
            <if test="mobileNo!=null">
                MOBILE_NO,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=BIGINT},
            </if>
            <if test="isWriteCalednar != null">
                #{isWriteCalednar,jdbcType=INTEGER},
            </if>
            <if test="meetName != null">
                #{meetName,jdbcType=VARCHAR},
            </if>
            <if test="resendHour != null">
                #{resendHour,jdbcType=INTEGER},
            </if>
            <if test="resendMinute != null">
                #{resendMinute,jdbcType=INTEGER},
            </if>
            <if test="resendSeveral != null">
                #{resendSeveral,jdbcType=INTEGER},
            </if>
            <if test="sms2Remind != null">
                #{sms2Remind,jdbcType=CHAR},
            </if>
            <if test="smsRemind != null">
                #{smsRemind,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="subject != null">
                #{subject,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="meetRoomId != null">
                #{meetRoomId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="isuploadsummary != null">
                #{isuploadsummary,jdbcType=VARCHAR},
            </if>
            <if test="attendee != null">
                #{attendee,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNot != null">
                #{attendeeNot,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeOut != null">
                #{attendeeOut,jdbcType=LONGVARCHAR},
            </if>
            <if test="meetDesc != null">
                #{meetDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="readPeopleId != null">
                #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipments != null">
                #{equipments,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotIds != null">
                #{attendeeNotIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotNames != null">
                #{attendeeNotNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentIds != null">
                #{equipmentIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentNames != null">
                #{equipmentNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="mobileNo!=null">
                #{mobileNo},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.meet.MeetingExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from meeting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        <set>
            <if test="record.sid != null">
                SID = #{record.sid,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.endTime != null">
                END_TIME = #{record.endTime,jdbcType=BIGINT},
            </if>
            <if test="record.isWriteCalednar != null">
                IS_WRITE_CALEDNAR = #{record.isWriteCalednar,jdbcType=INTEGER},
            </if>
            <if test="record.meetName != null">
                MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
            </if>
            <if test="record.resendHour != null">
                RESEND_HOUR = #{record.resendHour,jdbcType=INTEGER},
            </if>
            <if test="record.resendMinute != null">
                RESEND_MINUTE = #{record.resendMinute,jdbcType=INTEGER},
            </if>
            <if test="record.resendSeveral != null">
                RESEND_SEVERAL = #{record.resendSeveral,jdbcType=INTEGER},
            </if>
            <if test="record.sms2Remind != null">
                SMS2_REMIND = #{record.sms2Remind,jdbcType=CHAR},
            </if>
            <if test="record.smsRemind != null">
                SMS_REMIND = #{record.smsRemind,jdbcType=CHAR},
            </if>
            <if test="record.startTime != null">
                START_TIME = #{record.startTime,jdbcType=BIGINT},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.subject != null">
                SUBJECT = #{record.subject,jdbcType=VARCHAR},
            </if>
            <if test="record.managerId != null">
                MANAGER_ID = #{record.managerId,jdbcType=INTEGER},
            </if>
            <if test="record.meetRoomId != null">
                MEET_ROOM_ID = #{record.meetRoomId,jdbcType=INTEGER},
            </if>
            <if test="record.uid != null">
                UID = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.recorderId != null">
                RECORDER_ID = #{record.recorderId,jdbcType=INTEGER},
            </if>
            <if test="record.isuploadsummary != null">
                ISUPLOADSUMMARY = #{record.isuploadsummary,jdbcType=VARCHAR},
            </if>
            <if test="record.attendee != null">
                ATTENDEE = #{record.attendee,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attendeeNot != null">
                ATTENDEE_NOT = #{record.attendeeNot,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attendeeOut != null">
                ATTENDEE_OUT = #{record.attendeeOut,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.meetDesc != null">
                MEET_DESC = #{record.meetDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.readPeopleId != null">
                READ_PEOPLE_ID = #{record.readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.summary != null">
                SUMMARY = #{record.summary,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.equipments != null">
                EQUIPMENTS = #{record.equipments,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attendeeNotIds != null">
                ATTENDEE_NOT_IDS = #{record.attendeeNotIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attendeeNotNames != null">
                ATTENDEE_NOT_NAMES = #{record.attendeeNotNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.equipmentIds != null">
                EQUIPMENT_IDS = #{record.equipmentIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.equipmentNames != null">
                EQUIPMENT_NAMES = #{record.equipmentNames,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        set SID = #{record.sid,jdbcType=INTEGER},
        CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
        END_TIME = #{record.endTime,jdbcType=BIGINT},
        IS_WRITE_CALEDNAR = #{record.isWriteCalednar,jdbcType=INTEGER},
        MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
        RESEND_HOUR = #{record.resendHour,jdbcType=INTEGER},
        RESEND_MINUTE = #{record.resendMinute,jdbcType=INTEGER},
        RESEND_SEVERAL = #{record.resendSeveral,jdbcType=INTEGER},
        SMS2_REMIND = #{record.sms2Remind,jdbcType=CHAR},
        SMS_REMIND = #{record.smsRemind,jdbcType=CHAR},
        START_TIME = #{record.startTime,jdbcType=BIGINT},
        STATUS = #{record.status,jdbcType=INTEGER},
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
        MANAGER_ID = #{record.managerId,jdbcType=INTEGER},
        MEET_ROOM_ID = #{record.meetRoomId,jdbcType=INTEGER},
        UID = #{record.uid,jdbcType=INTEGER},
        RECORDER_ID = #{record.recorderId,jdbcType=INTEGER},
        ISUPLOADSUMMARY = #{record.isuploadsummary,jdbcType=VARCHAR},
        ATTENDEE = #{record.attendee,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT = #{record.attendeeNot,jdbcType=LONGVARCHAR},
        ATTENDEE_OUT = #{record.attendeeOut,jdbcType=LONGVARCHAR},
        MEET_DESC = #{record.meetDesc,jdbcType=LONGVARCHAR},
        READ_PEOPLE_ID = #{record.readPeopleId,jdbcType=LONGVARCHAR},
        SUMMARY = #{record.summary,jdbcType=LONGVARCHAR},
        EQUIPMENTS = #{record.equipments,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT_IDS = #{record.attendeeNotIds,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT_NAMES = #{record.attendeeNotNames,jdbcType=LONGVARCHAR},
        EQUIPMENT_IDS = #{record.equipmentIds,jdbcType=LONGVARCHAR},
        EQUIPMENT_NAMES = #{record.equipmentNames,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        set SID = #{record.sid,jdbcType=INTEGER},
        CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
        END_TIME = #{record.endTime,jdbcType=BIGINT},
        IS_WRITE_CALEDNAR = #{record.isWriteCalednar,jdbcType=INTEGER},
        MEET_NAME = #{record.meetName,jdbcType=VARCHAR},
        RESEND_HOUR = #{record.resendHour,jdbcType=INTEGER},
        RESEND_MINUTE = #{record.resendMinute,jdbcType=INTEGER},
        RESEND_SEVERAL = #{record.resendSeveral,jdbcType=INTEGER},
        SMS2_REMIND = #{record.sms2Remind,jdbcType=CHAR},
        SMS_REMIND = #{record.smsRemind,jdbcType=CHAR},
        START_TIME = #{record.startTime,jdbcType=BIGINT},
        STATUS = #{record.status,jdbcType=INTEGER},
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
        MANAGER_ID = #{record.managerId,jdbcType=INTEGER},
        MEET_ROOM_ID = #{record.meetRoomId,jdbcType=INTEGER},
        UID = #{record.uid,jdbcType=INTEGER},
        RECORDER_ID = #{record.recorderId,jdbcType=INTEGER},
        ISUPLOADSUMMARY = #{record.isuploadsummary,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        <set>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                END_TIME = #{endTime,jdbcType=BIGINT},
            </if>
            <if test="isWriteCalednar != null">
                IS_WRITE_CALEDNAR = #{isWriteCalednar,jdbcType=INTEGER},
            </if>
            <if test="meetName != null">
                MEET_NAME = #{meetName,jdbcType=VARCHAR},
            </if>
            <if test="resendHour != null">
                RESEND_HOUR = #{resendHour,jdbcType=INTEGER},
            </if>
            <if test="resendMinute != null">
                RESEND_MINUTE = #{resendMinute,jdbcType=INTEGER},
            </if>
            <if test="resendSeveral != null">
                RESEND_SEVERAL = #{resendSeveral,jdbcType=INTEGER},
            </if>
            <if test="sms2Remind != null">
                SMS2_REMIND = #{sms2Remind,jdbcType=CHAR},
            </if>
            <if test="smsRemind != null">
                SMS_REMIND = #{smsRemind,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                START_TIME = #{startTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=INTEGER},
            </if>
            <if test="subject != null">
                SUBJECT = #{subject,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                MANAGER_ID = #{managerId,jdbcType=INTEGER},
            </if>
            <if test="meetRoomId != null">
                MEET_ROOM_ID = #{meetRoomId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                UID = #{uid,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                RECORDER_ID = #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="isuploadsummary != null">
                ISUPLOADSUMMARY = #{isuploadsummary,jdbcType=VARCHAR},
            </if>
            <if test="attendee != null">
                ATTENDEE = #{attendee,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNot != null">
                ATTENDEE_NOT = #{attendeeNot,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeOut != null">
                ATTENDEE_OUT = #{attendeeOut,jdbcType=LONGVARCHAR},
            </if>
            <if test="meetDesc != null">
                MEET_DESC = #{meetDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID = #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                SUMMARY = #{summary,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipments != null">
                EQUIPMENTS = #{equipments,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotIds != null">
                ATTENDEE_NOT_IDS = #{attendeeNotIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotNames != null">
                ATTENDEE_NOT_NAMES = #{attendeeNotNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentIds != null">
                EQUIPMENT_IDS = #{equipmentIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentNames != null">
                EQUIPMENT_NAMES = #{equipmentNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="mobileNo!=null">
                MOBILE_NO = #{mobileNo}
            </if>
        </set>
        where SID = #{sid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        set CREATE_TIME = #{createTime,jdbcType=BIGINT},
        END_TIME = #{endTime,jdbcType=BIGINT},
        IS_WRITE_CALEDNAR = #{isWriteCalednar,jdbcType=INTEGER},
        MEET_NAME = #{meetName,jdbcType=VARCHAR},
        RESEND_HOUR = #{resendHour,jdbcType=INTEGER},
        RESEND_MINUTE = #{resendMinute,jdbcType=INTEGER},
        RESEND_SEVERAL = #{resendSeveral,jdbcType=INTEGER},
        SMS2_REMIND = #{sms2Remind,jdbcType=CHAR},
        SMS_REMIND = #{smsRemind,jdbcType=CHAR},
        START_TIME = #{startTime,jdbcType=BIGINT},
        STATUS = #{status,jdbcType=INTEGER},
        SUBJECT = #{subject,jdbcType=VARCHAR},
        MANAGER_ID = #{managerId,jdbcType=INTEGER},
        MEET_ROOM_ID = #{meetRoomId,jdbcType=INTEGER},
        UID = #{uid,jdbcType=INTEGER},
        RECORDER_ID = #{recorderId,jdbcType=INTEGER},
        ISUPLOADSUMMARY = #{isuploadsummary,jdbcType=VARCHAR},
        ATTENDEE = #{attendee,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT = #{attendeeNot,jdbcType=LONGVARCHAR},
        ATTENDEE_OUT = #{attendeeOut,jdbcType=LONGVARCHAR},
        MEET_DESC = #{meetDesc,jdbcType=LONGVARCHAR},
        READ_PEOPLE_ID = #{readPeopleId,jdbcType=LONGVARCHAR},
        SUMMARY = #{summary,jdbcType=LONGVARCHAR},
        EQUIPMENTS = #{equipments,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT_IDS = #{attendeeNotIds,jdbcType=LONGVARCHAR},
        ATTENDEE_NOT_NAMES = #{attendeeNotNames,jdbcType=LONGVARCHAR},
        EQUIPMENT_IDS = #{equipmentIds,jdbcType=LONGVARCHAR},
        EQUIPMENT_NAMES = #{equipmentNames,jdbcType=LONGVARCHAR},
        MOBILE_NO = #{mobileNo}
        where SID = #{sid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xoa.model.meet.Meeting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        set CREATE_TIME = #{createTime,jdbcType=BIGINT},
        END_TIME = #{endTime,jdbcType=BIGINT},
        IS_WRITE_CALEDNAR = #{isWriteCalednar,jdbcType=INTEGER},
        MEET_NAME = #{meetName,jdbcType=VARCHAR},
        RESEND_HOUR = #{resendHour,jdbcType=INTEGER},
        RESEND_MINUTE = #{resendMinute,jdbcType=INTEGER},
        RESEND_SEVERAL = #{resendSeveral,jdbcType=INTEGER},
        SMS2_REMIND = #{sms2Remind,jdbcType=CHAR},
        SMS_REMIND = #{smsRemind,jdbcType=CHAR},
        START_TIME = #{startTime,jdbcType=BIGINT},
        STATUS = #{status,jdbcType=INTEGER},
        SUBJECT = #{subject,jdbcType=VARCHAR},
        MANAGER_ID = #{managerId,jdbcType=INTEGER},
        MEET_ROOM_ID = #{meetRoomId,jdbcType=INTEGER},
        UID = #{uid,jdbcType=INTEGER},
        RECORDER_ID = #{recorderId,jdbcType=INTEGER},
        ISUPLOADSUMMARY = #{isuploadsummary,jdbcType=VARCHAR},
        MOBILE_NO = #{mobileNo}
        where SID = #{sid,jdbcType=INTEGER}
    </update>


    <select id="queryMeeting" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT m.* FROM meeting m
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and m.START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and m.START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=0 and meetingWithBLOBs.status!=3 and meetingWithBLOBs.status!=5 and meetingWithBLOBs.status!=2">
                and m.STATUS=#{meetingWithBLOBs.status}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null and meetingWithBLOBs.meetRoomId!=0">
                and m.MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            <if test="meetingWithBLOBs.status==2">
                AND m.STATUS IN (2,5)
            </if>
            <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                and UID=#{meetingWithBLOBs.uid}
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!='' and meetingWithBLOBs.status==3">
                and (m.START_TIME &lt;= #{meetingWithBLOBs.currentTime} and #{meetingWithBLOBs.currentTime} &lt;
                m.END_TIME) AND m.STATUS NOT IN (1,4,5)
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!='' and meetingWithBLOBs.status==5">
                and (((m.START_TIME &lt;= #{meetingWithBLOBs.currentTime} and #{meetingWithBLOBs.currentTime} &gt;
                m.END_TIME) AND m.STATUS NOT IN (1,4)) OR m.STATUS='5')
            </if>
            <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!=''">
                and m.CYCLE = #{meetingWithBLOBs.cycle}
            </if>
            <if test="meetingWithBLOBs.cycleNo!=null and meetingWithBLOBs.cycleNo!=''">
                and m.CYCLE_NO = #{meetingWithBLOBs.cycleNo}
            </if>
        </where>
        <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!='' and meetingWithBLOBs.cycleNo==null">
            GROUP BY m.CYCLE_NO
        </if>
        order by m.CREATE_TIME desc
    </select>

    <select id="queryMeeting" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="oracle">
        SELECT * FROM meeting
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like concat(concat('%,',#{meetingWithBLOBs.meetName}, ',%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= to_date(#{meetingWithBLOBs.startTime})
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= to_date(#{meetingWithBLOBs.endTime})
            </if>
            <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=0 and meetingWithBLOBs.status!=3 and meetingWithBLOBs.status!=5 and meetingWithBLOBs.status!=2">
                and STATUS=#{meetingWithBLOBs.status}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null and meetingWithBLOBs.meetRoomId!=0">
                and MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            <if test="meetingWithBLOBs.status==2">
                AND STATUS IN (2,5)
            </if>
            <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                and UID=#{meetingWithBLOBs.uid}
            </if>
            <if test="meetingWithBLOBs.managerId!=null and meetingWithBLOBs.managerId!=''">
                and MANAGER_ID=#{meetingWithBLOBs.managerId}
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!=''and meetingWithBLOBs.status==3">
                and (START_TIME &lt;= to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') &lt; END_TIME) AND STATUS NOT IN
                (1,4,5)
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!=''and meetingWithBLOBs.status==5">
                and (((START_TIME &lt;=to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') &gt; END_TIME) AND STATUS NOT IN (1,4))
                OR STATUS='5')
            </if>
        </where>
        order by CREATE_TIME desc
    </select>

    <select id="queryMeeting" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="dm">
        SELECT * FROM meeting
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like concat(concat('%,',#{meetingWithBLOBs.meetName}, ',%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=0 and meetingWithBLOBs.status!=3 and meetingWithBLOBs.status!=5 and meetingWithBLOBs.status!=2">
                and STATUS=#{meetingWithBLOBs.status}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null and meetingWithBLOBs.meetRoomId!=0">
                and MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            <if test="meetingWithBLOBs.status==2">
                AND STATUS IN (2,5)
            </if>
            <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                and UID=#{meetingWithBLOBs.uid}
            </if>
            <if test="meetingWithBLOBs.managerId!=null and meetingWithBLOBs.managerId!=''">
                and MANAGER_ID=#{meetingWithBLOBs.managerId}
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!=''and meetingWithBLOBs.status==3">
                and (START_TIME &lt;= to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') &lt; END_TIME) AND STATUS NOT IN
                (1,4,5)
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!=''and meetingWithBLOBs.status==5">
                and (((START_TIME &lt;=to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{meetingWithBLOBs.currentTime},'yyyy-mm-dd hh24:mi:ss') &gt; END_TIME) AND STATUS NOT IN (1,4))
                OR STATUS='5')
            </if>
        </where>
        order by CREATE_TIME desc
    </select>


    <select id="getMyMeeting" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT * FROM meeting
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and TO_DAYS(START_TIME) &gt;= TO_DAYS(str_to_date(#{meetingWithBLOBs.startTime}, '%Y-%m-%d %H'))
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and TO_DAYS(START_TIME) &lt;= TO_DAYS(str_to_date(#{meetingWithBLOBs.endTime}, '%Y-%m-%d %H'))
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null">
                and MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            and status NOT in (1,4)
            and (UID=#{meetingWithBLOBs.uid} or RECORDER_ID=#{meetingWithBLOBs.uid} OR ATTENDEE LIKE
            CONCAT('%,',#{meetingWithBLOBs.uid},',%') OR ATTENDEE LIKE CONCAT(#{meetingWithBLOBs.uid},',%'))
        </where>
        order by START_TIME desc
    </select>

    <select id="getMyMeeting" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="oracle">
        SELECT * FROM meeting
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like concat(concat('%,',#{meetingWithBLOBs.meetName}), ',%')
            </if>
            <!--<if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
              and UID=#{meetingWithBLOBs.uid}
            </if>-->
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null">
                and MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            and status NOT in (1,4)
            <if test="meetingWithBLOBs.uid!=null">
                and ("UID"=#{meetingWithBLOBs.uid} or RECORDER_ID=#{meetingWithBLOBs.uid} OR ATTENDEE LIKE
                concat(concat('%,',#{meetingWithBLOBs.uid}), ',%') OR ATTENDEE LIKE
                concat(concat('%,',#{meetingWithBLOBs.uid}), ',%'))
            </if>
        </where>
        order by START_TIME desc
    </select>

    <select id="getMyMeeting" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="dm">
        SELECT * FROM meeting
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like concat(concat('%,',#{meetingWithBLOBs.meetName}), ',%')
            </if>
            <!--<if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
              and UID=#{meetingWithBLOBs.uid}
            </if>-->
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null">
                and MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            and status NOT in (1,4)
            <if test="meetingWithBLOBs.uid!=null">
                and ("UID"=#{meetingWithBLOBs.uid} or RECORDER_ID=#{meetingWithBLOBs.uid} OR ATTENDEE LIKE
                concat(concat('%,',#{meetingWithBLOBs.uid}), ',%') OR ATTENDEE LIKE
                concat(concat('%,',#{meetingWithBLOBs.uid}), ',%'))
            </if>
        </where>
        order by START_TIME desc
    </select>

    <select id="queryMeetingById" resultMap="ResultMapWithBLOBs">
    SELECT * from meeting where SID=#{sid}
  </select>

    <update id="updateMeetingById" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        update meeting
        <set>
            MEET_NAME=#{meetName},SUBJECT=#{subject},UID=#{uid},RECORDER_ID=#{recorderId},CREATE_TIME=#{createTime},
            START_TIME=#{startTime},END_TIME=#{endTime},MEET_ROOM_ID=#{meetRoomId},UID=#{uid},MOBILE_NO=#{mobileNo},
            MANAGER_ID=#{managerId},ATTENDEE=#{attendee},ATTENDEE_OUT=#{attendeeOut},EQUIPMENT_IDS=#{equipmentIds},
            EQUIPMENT_NAMES=#{equipmentNames},IS_WRITE_CALEDNAR=#{isWriteCalednar},SMS_REMIND=#{smsRemind},
            RESEND_HOUR=#{resendHour},RESEND_MINUTE=#{resendMinute},MEET_DESC=#{meetDesc},SMS2_REMIND=#{sms2Remind},
            ATTACHMENT_ID=#{attachmentId},ATTACHMENT_NAME=#{attachmentName},VIDEO_CONF_FLAG=#{videoConfFlag},
            SERVICE_USER = #{serviceUser},PHOTO_ID = #{photoId}, PHOTO_NAME = #{photoName}, VIDEO_ID = #{videoId},
            AGENDA_ID = #{agendaId}, AGENDA_NAME = #{agendaName},
            <if test="signInTime != null and signInTime != ''">
                SIGN_IN_TIME = #{signInTime},
            </if>
            <if test="status!=null and status!=''">
                STATUS = #{status},
            </if>
        </set>
        where SID = #{sid}
    </update>

    <update id="updateMeetingByIdV1" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        update meeting
        <set>
            <if test="meetName != null">
                MEET_NAME=#{meetName},
            </if>
            <if test="subject != null">
                SUBJECT=#{subject},
            </if>
            <if test="uid != null">
                UID=#{uid},
            </if>
            <if test="mobileNo != null">
                MOBILE_NO=#{mobileNo},
            </if>
            <if test="attendee != null">
                ATTENDEE=#{attendee},
            </if>
            <if test="startTime != null">
                START_TIME=#{startTime},
            </if>
        </set>
        WHERE SID=#{sid}
    </update>

    <update id="updateMeetingById" parameterType="com.xoa.model.meet.MeetingWithBLOBs" databaseId="oracle">
    update meeting
    set
    MEET_NAME=#{meetName},SUBJECT=#{subject},"UID"=#{uid},RECORDER_ID=#{recorderId},CREATE_TIME=to_date(#{createTime},'yyyy-mm-dd hh24:mi:ss'),
    START_TIME=to_date(#{startTime},'yyyy-mm-dd hh24:mi:ss'),END_TIME=to_date(#{endTime},'yyyy-mm-dd hh24:mi:ss'),MEET_ROOM_ID=#{meetRoomId},
    MANAGER_ID=#{managerId},ATTENDEE=#{attendee},ATTENDEE_OUT=#{attendeeOut},EQUIPMENT_IDS=#{equipmentIds},
    EQUIPMENT_NAMES=#{equipmentNames},IS_WRITE_CALEDNAR=#{isWriteCalednar},SMS_REMIND=#{smsRemind},
    RESEND_HOUR=#{resendHour},RESEND_MINUTE=#{resendMinute},MEET_DESC=#{meetDesc},SMS2_REMIND=#{sms2Remind},
    ATTACHMENT_ID=#{attachmentId},ATTACHMENT_NAME=#{attachmentName},SERVICE_USER = #{serviceUser}, SIGN_IN_TIME = #{signInTime}
    WHERE  SID=#{sid}
  </update>

    <update id="updateMeetingById" parameterType="com.xoa.model.meet.MeetingWithBLOBs" databaseId="dm">
     update meeting
    set
    MEET_NAME=#{meetName},SUBJECT=#{subject},"UID"=#{uid},RECORDER_ID=#{recorderId},CREATE_TIME=to_date(#{createTime},'yyyy-mm-dd hh24:mi:ss'),
    START_TIME=to_date(#{startTime},'yyyy-mm-dd hh24:mi:ss'),END_TIME=to_date(#{endTime},'yyyy-mm-dd hh24:mi:ss'),MEET_ROOM_ID=#{meetRoomId},
    MANAGER_ID=#{managerId},ATTENDEE=#{attendee},ATTENDEE_OUT=#{attendeeOut},EQUIPMENT_IDS=#{equipmentIds},
    EQUIPMENT_NAMES=#{equipmentNames},IS_WRITE_CALEDNAR=#{isWriteCalednar},SMS_REMIND=#{smsRemind},
    RESEND_HOUR=#{resendHour},RESEND_MINUTE=#{resendMinute},MEET_DESC=#{meetDesc},SMS2_REMIND=#{sms2Remind},
    ATTACHMENT_ID=#{attachmentId},ATTACHMENT_NAME=#{attachmentName},SERVICE_USER = #{serviceUser}, SIGN_IN_TIME = #{signInTime}
    WHERE  SID=#{sid}
  </update>

    <update id="updMeetStatusById" parameterType="com.xoa.model.meet.Meeting">
        update
        meeting
        SET
        STATUS=#{status}
        <if test="reason != null and reason != ''">
            ,REASON=#{reason}
        </if>
        WHERE
        SID=#{sid}
    </update>


    <update id="updMeetVideoById" parameterType="com.xoa.model.meet.Meeting">
        update
        meeting
        <set>
            <if test="videoConfId!=null and videoConfId!=''">
                VIDEO_CONF_ID=#{videoConfId},
            </if>
            <if test="meetCode!=null and meetCode!=''">
                MEET_CODE=#{meetCode},
            </if>
        </set>
        WHERE
        SID=#{sid}
    </update>

    <insert id="insertMeeting" parameterType="com.xoa.model.meet.MeetingWithBLOBs" useGeneratedKeys="true"
            keyColumn="SID" keyProperty="sid">
        <selectKey order="AFTER" keyProperty="sid" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into meeting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                SID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="endTime != null">
                END_TIME,
            </if>
            <if test="isWriteCalednar != null">
                IS_WRITE_CALEDNAR,
            </if>
            <if test="meetName != null">
                MEET_NAME,
            </if>
            <if test="resendHour != null">
                RESEND_HOUR,
            </if>
            <if test="resendMinute != null">
                RESEND_MINUTE,
            </if>
            <if test="resendSeveral != null">
                RESEND_SEVERAL,
            </if>
            <if test="sms2Remind != null">
                SMS2_REMIND,
            </if>
            <if test="smsRemind != null">
                SMS_REMIND,
            </if>
            <if test="startTime != null">
                START_TIME,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="subject != null">
                SUBJECT,
            </if>
            <if test="managerId != null">
                MANAGER_ID,
            </if>
            <if test="meetRoomId != null">
                MEET_ROOM_ID,
            </if>
            <if test="uid != null">
                UID,
            </if>
            <if test="recorderId != null">
                RECORDER_ID,
            </if>
            <if test="isuploadsummary != null">
                ISUPLOADSUMMARY,
            </if>
            <if test="attachmentId != null">
                ATTACHMENT_ID,
            </if>
            <if test="attachmentName != null">
                ATTACHMENT_NAME,
            </if>
            <if test="attendee != null">
                ATTENDEE,
            </if>
            <if test="attendeeNot != null">
                ATTENDEE_NOT,
            </if>
            <if test="attendeeOut != null">
                ATTENDEE_OUT,
            </if>
            <if test="meetDesc != null">
                MEET_DESC,
            </if>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID,
            </if>
            <if test="summary != null">
                SUMMARY,
            </if>
            <if test="equipments != null">
                EQUIPMENTS,
            </if>
            <if test="attendeeNotIds != null">
                ATTENDEE_NOT_IDS,
            </if>
            <if test="attendeeNotNames != null">
                ATTENDEE_NOT_NAMES,
            </if>
            <if test="equipmentIds != null">
                EQUIPMENT_IDS,
            </if>
            <if test="equipmentNames != null">
                EQUIPMENT_NAMES,
            </if>
            <if test="mobileNo!=null">
                MOBILE_NO,
            </if>
            <if test="agendaId != null and agendaId != ''">
                AGENDA_ID,
            </if>
            <if test="agendaName != null and agendaName != ''">
                AGENDA_NAME,
            </if>
            <if test="videoConfFlag != null and videoConfFlag != ''">
                VIDEO_CONF_FLAG,
            </if>
            <if test="signInTime != null and signInTime != ''">
                SIGN_IN_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=BIGINT},
            </if>
            <if test="isWriteCalednar != null">
                #{isWriteCalednar,jdbcType=INTEGER},
            </if>
            <if test="meetName != null">
                #{meetName,jdbcType=VARCHAR},
            </if>
            <if test="resendHour != null">
                #{resendHour,jdbcType=INTEGER},
            </if>
            <if test="resendMinute != null">
                #{resendMinute,jdbcType=INTEGER},
            </if>
            <if test="resendSeveral != null">
                #{resendSeveral,jdbcType=INTEGER},
            </if>
            <if test="sms2Remind != null">
                #{sms2Remind,jdbcType=CHAR},
            </if>
            <if test="smsRemind != null">
                #{smsRemind,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="subject != null">
                #{subject,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="meetRoomId != null">
                #{meetRoomId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="isuploadsummary != null">
                #{isuploadsummary,jdbcType=VARCHAR},
            </if>
            <if test="attachmentId != null">
                #{attachmentId,jdbcType=VARCHAR},
            </if>
            <if test="attachmentName != null">
                #{attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="attendee != null">
                #{attendee,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNot != null">
                #{attendeeNot,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeOut != null">
                #{attendeeOut,jdbcType=LONGVARCHAR},
            </if>
            <if test="meetDesc != null">
                #{meetDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="readPeopleId != null">
                #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipments != null">
                #{equipments,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotIds != null">
                #{attendeeNotIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotNames != null">
                #{attendeeNotNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentIds != null">
                #{equipmentIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentNames != null">
                #{equipmentNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="mobileNo!=null">
                #{mobileNo},
            </if>
            <if test="agendaId != null and agendaId != ''">
                #{agendaId},
            </if>
            <if test="agendaName != null and agendaName != ''">
                #{agendaName},
            </if>
            <if test="videoConfFlag != null and videoConfFlag != ''">
                #{videoConfFlag},
            </if>
            <if test="signInTime != null and signInTime != ''">
                #{signInTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <insert id="insertMeeting" parameterType="com.xoa.model.meet.MeetingWithBLOBs" useGeneratedKeys="true"
            keyColumn="SID" keyProperty="sid" databaseId="kingbase">
        insert into meeting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                SID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="endTime != null">
                END_TIME,
            </if>
            <if test="isWriteCalednar != null">
                IS_WRITE_CALEDNAR,
            </if>
            <if test="meetName != null">
                MEET_NAME,
            </if>
            <if test="resendHour != null">
                RESEND_HOUR,
            </if>
            <if test="resendMinute != null">
                RESEND_MINUTE,
            </if>
            <if test="resendSeveral != null">
                RESEND_SEVERAL,
            </if>
            <if test="sms2Remind != null">
                SMS2_REMIND,
            </if>
            <if test="smsRemind != null">
                SMS_REMIND,
            </if>
            <if test="startTime != null">
                START_TIME,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="subject != null">
                SUBJECT,
            </if>
            <if test="managerId != null">
                MANAGER_ID,
            </if>
            <if test="meetRoomId != null">
                MEET_ROOM_ID,
            </if>
            <if test="uid != null">
                UID,
            </if>
            <if test="recorderId != null">
                RECORDER_ID,
            </if>
            <if test="isuploadsummary != null">
                ISUPLOADSUMMARY,
            </if>
            <if test="attendee != null">
                ATTENDEE,
            </if>
            <if test="attendeeNot != null">
                ATTENDEE_NOT,
            </if>
            <if test="attendeeOut != null">
                ATTENDEE_OUT,
            </if>
            <if test="meetDesc != null">
                MEET_DESC,
            </if>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID,
            </if>
            <if test="summary != null">
                SUMMARY,
            </if>
            <if test="equipments != null">
                EQUIPMENTS,
            </if>
            <if test="attendeeNotIds != null">
                ATTENDEE_NOT_IDS,
            </if>
            <if test="attendeeNotNames != null">
                ATTENDEE_NOT_NAMES,
            </if>
            <if test="equipmentIds != null">
                EQUIPMENT_IDS,
            </if>
            <if test="equipmentNames != null">
                EQUIPMENT_NAMES,
            </if>
            <if test="mobileNo!=null">
                MOBILE_NO,
            </if>
            <if test="agendaId != null and agendaId != ''">
                AGENDA_ID,
            </if>
            <if test="agendaName != null and agendaName != ''">
                AGENDA_NAME,
            </if>
            <if test="videoConfFlag != null and videoConfFlag != ''">
                VIDEO_CONF_FLAG,
            </if>
            <if test="signInTime != null and signInTime != ''">
                SIGN_IN_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=BIGINT},
            </if>
            <if test="isWriteCalednar != null">
                #{isWriteCalednar,jdbcType=INTEGER},
            </if>
            <if test="meetName != null">
                #{meetName,jdbcType=VARCHAR},
            </if>
            <if test="resendHour != null">
                #{resendHour,jdbcType=INTEGER},
            </if>
            <if test="resendMinute != null">
                #{resendMinute,jdbcType=INTEGER},
            </if>
            <if test="resendSeveral != null">
                #{resendSeveral,jdbcType=INTEGER},
            </if>
            <if test="sms2Remind != null">
                #{sms2Remind,jdbcType=CHAR},
            </if>
            <if test="smsRemind != null">
                #{smsRemind,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="subject != null">
                #{subject,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="meetRoomId != null">
                #{meetRoomId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="isuploadsummary != null">
                #{isuploadsummary,jdbcType=VARCHAR},
            </if>
            <if test="attendee != null">
                #{attendee,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNot != null">
                #{attendeeNot,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeOut != null">
                #{attendeeOut,jdbcType=LONGVARCHAR},
            </if>
            <if test="meetDesc != null">
                #{meetDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="readPeopleId != null">
                #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipments != null">
                #{equipments,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotIds != null">
                #{attendeeNotIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="attendeeNotNames != null">
                #{attendeeNotNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentIds != null">
                #{equipmentIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="equipmentNames != null">
                #{equipmentNames,jdbcType=LONGVARCHAR},
            </if>
            <if test="mobileNo!=null">
                #{mobileNo},
            </if>
            <if test="agendaId != null and agendaId != ''">
                #{agendaId},
            </if>
            <if test="agendaName != null and agendaName != ''">
                #{agendaName},
            </if>
            <if test="videoConfFlag != null and videoConfFlag != ''">
                #{videoConfFlag},
            </if>
            <if test="signInTime != null and signInTime != ''">
                #{signInTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <insert id="insertMeetingv1" parameterType="com.xoa.model.meet.MeetingWithBLOBs" useGeneratedKeys="true"
            keyColumn="SID" keyProperty="sid">
      insert into meeting ( MEET_NAME,`SUBJECT`,UID,MOBILE_NO,ATTENDEE,RESEND_HOUR ,VIDEO_CONF_ID,START_TIME,`STATUS`)
    values ( #{meetName},#{subject} , #{uid}, #{mobileNo},#{attendee}, '0' ,#{videoConfId},#{startTime},#{status})
   </insert>

    <delete id="delMeetingById" parameterType="String">
    delete from meeting where SID=#{sid}
  </delete>

    <select id="queryCountByStatus" parameterType="map" resultType="Integer">
        SELECT count(*) FROM (SELECT m.* FROM meeting m
        <where>
            <if test="meetName!=null and meetName!=''">
                and m.MEET_NAME like CONCAT('%',#{meetName},'%')
            </if>
            <if test="startTime!=null and startTime!=''">
                and m.START_TIME &gt;= #{startTime}
            </if>
            <if test="endTime!=null and endTime!=''">
                and m.START_TIME &lt;= #{endTime}
            </if>
            <if test="status!=null and status!=0 and status!=3 and status!=5 and status!=2">
                and m.STATUS=#{status}
            </if>
            <if test="meetRoomId!=null and meetRoomId!=0">
                and m.MEET_ROOM_ID=#{meetRoomId}
            </if>
            <if test="status==2">
                AND m.STATUS IN (2,5)
            </if>
            <if test="uid!=null and uid!=''">
                and (UID=#{uid} or RECORDER_ID=#{uid} OR ATTENDEE LIKE CONCAT('%,',#{uid},',%') OR ATTENDEE LIKE
                CONCAT(#{uid},',%'))
            </if>
            <if test="currentTime!=null and currentTime!='' and status==3">
                and (m.START_TIME &lt;= #{currentTime} and #{currentTime} &lt; m.END_TIME) AND m.STATUS NOT IN (1,4,5)
            </if>
            <if test="currentTime!=null and currentTime!='' and status==5">
                and (((m.START_TIME &lt;= #{currentTime} and #{currentTime} &gt; m.END_TIME) AND m.STATUS NOT IN (1,4))
                OR m.STATUS='5')
            </if>
            <if test="cycle!=null and cycle!=''">
                and m.CYCLE = #{cycle}
            </if>
            <if test="cycleNo!=null and cycleNo!=''">
                and m.CYCLE_NO = #{cycleNo}
            </if>
        </where>
        <if test="cycle!=null and cycle!='' and cycleNo==null">
            GROUP BY m.CYCLE_NO
        </if>
        order by m.CREATE_TIME desc
        ) t
    </select>

    <select id="queryCountByStatu" parameterType="map" resultType="Integer">
        SELECT count(*) FROM (SELECT m.* FROM meeting m where
        <choose>
            <when test="userPriv==1">
                1=1
                <if test="status!=null and status!=''">
                    and STATUS=#{status}
                </if>
                <if test="cycle!=null and cycle!=''">
                    and m.CYCLE = #{cycle}
                </if>
                <if test="cycleNo!=null and cycleNo!=''">
                    and m.CYCLE_NO = #{cycleNo}
                </if>
            </when>
            <otherwise>
                1=1
                <if test="uid!=null and uid!=''">
                    and MANAGER_ID=#{uid}
                </if>
                <if test="status!=null and status!=''">
                    and STATUS=#{status}
                </if>
                <if test="cycle!=null and cycle!=''">
                    and m.CYCLE = #{cycle}
                </if>
                <if test="cycleNo!=null and cycleNo!=''">
                    and m.CYCLE_NO = #{cycleNo}
                </if>
            </otherwise>
        </choose>
        order by START_TIME desc) t
    </select>

    <select id="queryCountByStatus" parameterType="com.xoa.model.meet.Meeting" resultType="Integer" databaseId="oracle">
        SELECT count(*) FROM meeting
        <where>
            <if test="status!=null and status!=0 and status!=3 and status!=5 and status!=2">
                and STATUS=#{status}
            </if>
            <if test="managerId!=null and managerId!=''">
                and MANAGER_ID=#{managerId}
            </if>
            <if test="status==2">
                AND STATUS IN (2,5)
            </if>
            <if test="currentTime!=null and currentTime!=''and status==3">
                and (START_TIME &lt;= to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') &lt; END_TIME) AND STATUS NOT IN (1,4,5)
            </if>
            <if test="currentTime!=null and currentTime!=''and status==5">
                and (((START_TIME &lt;= to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') &gt; END_TIME) AND STATUS NOT IN (1,4)) OR STATUS=5)
                <!-- and (START_TIME &lt;= #{currentTime} and  #{currentTime} &gt; END_TIME) AND STATUS NOT IN (1,4)-->
            </if>
        </where>

    </select>

    <select id="queryCountByStatus" parameterType="com.xoa.model.meet.Meeting" resultType="Integer" databaseId="dm">
        SELECT count(*) FROM meeting
        <where>
            <if test="status!=null and status!=0 and status!=3 and status!=5 and status!=2">
                and STATUS=#{status}
            </if>
            <if test="managerId!=null and managerId!=''">
                and MANAGER_ID=#{managerId}
            </if>
            <if test="status==2">
                AND STATUS IN (2,5)
            </if>
            <if test="currentTime!=null and currentTime!=''and status==3">
                and (START_TIME &lt;= to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') &lt; END_TIME) AND STATUS NOT IN (1,4,5)
            </if>
            <if test="currentTime!=null and currentTime!=''and status==5">
                and (((START_TIME &lt;= to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') and
                to_date(#{currentTime},'yyyy-mm-dd hh24:mi:ss') &gt; END_TIME) AND STATUS NOT IN (1,4)) OR STATUS=5)
                <!-- and (START_TIME &lt;= #{currentTime} and  #{currentTime} &gt; END_TIME) AND STATUS NOT IN (1,4)-->
            </if>
        </where>

    </select>


    <select id="getMeetSummary" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT m.* FROM meeting m where
        <choose>
            <when test="userPriv==1">
                1=1
            </when>
            <otherwise>
                1=1

                and ((ATTENDEE LIKE concat('%,',#{id},',%')
                OR ATTENDEE LIKE concat(#{id},',%')
                )OR
                (ATTENDEE_OUT LIKE concat('%,',#{id},',%')
                OR ATTENDEE_OUT LIKE concat(#{id},',%')
                )OR
                (RECORDER_ID = #{id} OR RECORDER_ID LIKE concat('%,',#{id},',%')
                OR RECORDER_ID LIKE concat(#{id},',%')
                )
                )

            </otherwise>
        </choose>
        ORDER BY m.START_TIME DESC
    </select>

    <select id="getMeetSummary" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="oracle">
        SELECT * FROM meeting
        <if test="id!=null and id !=''">
            <where>
                RECORDER_ID =#{id} OR READ_PEOPLE_ID like concat(concat('%,',#{id}), ',%') OR READ_PEOPLE_ID LIKE
                CONCAT(#{id},',%')
            </where>
        </if>
    </select>

    <select id="getMeetSummary" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="dm">
        SELECT * FROM meeting
        <if test="id!=null and id !=''">
            <where>
                RECORDER_ID =#{id} OR READ_PEOPLE_ID like concat(concat('%,',#{id}), ',%') OR READ_PEOPLE_ID LIKE
                CONCAT(#{id},',%')
            </where>
        </if>
    </select>

    <update id="editMeetSummary" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update meeting
        <set>
            <trim suffixOverrides=",">
                <if test="createTime != null">
                    CREATE_TIME = #{createTime,jdbcType=BIGINT},
                </if>
                <if test="endTime != null">
                    END_TIME = #{endTime,jdbcType=BIGINT},
                </if>
                <if test="isWriteCalednar != null">
                    IS_WRITE_CALEDNAR = #{isWriteCalednar,jdbcType=INTEGER},
                </if>
                <if test="meetName != null">
                    MEET_NAME = #{meetName,jdbcType=VARCHAR},
                </if>
                <if test="resendHour != null">
                    RESEND_HOUR = #{resendHour,jdbcType=INTEGER},
                </if>
                <if test="resendMinute != null">
                    RESEND_MINUTE = #{resendMinute,jdbcType=INTEGER},
                </if>
                <if test="resendSeveral != null">
                    RESEND_SEVERAL = #{resendSeveral,jdbcType=INTEGER},
                </if>
                <if test="sms2Remind != null">
                    SMS2_REMIND = #{sms2Remind,jdbcType=CHAR},
                </if>
                <if test="smsRemind != null">
                    SMS_REMIND = #{smsRemind,jdbcType=CHAR},
                </if>
                <if test="startTime != null">
                    START_TIME = #{startTime,jdbcType=BIGINT},
                </if>
                <if test="subject != null">
                    SUBJECT = #{subject,jdbcType=VARCHAR},
                </if>
                <if test="managerId != null">
                    MANAGER_ID = #{managerId,jdbcType=INTEGER},
                </if>
                <if test="meetRoomId != null">
                    MEET_ROOM_ID = #{meetRoomId,jdbcType=INTEGER},
                </if>
                <if test="uid != null">
                    UID = #{uid,jdbcType=INTEGER},
                </if>
                <if test="recorderId != null">
                    RECORDER_ID = #{recorderId,jdbcType=INTEGER},
                </if>
                <if test="isuploadsummary != null">
                    ISUPLOADSUMMARY = #{isuploadsummary,jdbcType=VARCHAR},
                </if>
                <if test="attendee != null">
                    ATTENDEE = #{attendee,jdbcType=LONGVARCHAR},
                </if>
                <if test="attendeeNot != null">
                    ATTENDEE_NOT = #{attendeeNot,jdbcType=LONGVARCHAR},
                </if>
                <if test="attendeeOut != null">
                    ATTENDEE_OUT = #{attendeeOut,jdbcType=LONGVARCHAR},
                </if>
                <if test="meetDesc != null">
                    MEET_DESC = #{meetDesc,jdbcType=LONGVARCHAR},
                </if>
                <if test="readPeopleId != null">
                    READ_PEOPLE_ID = #{readPeopleId,jdbcType=LONGVARCHAR},
                </if>
                <if test="summary != null">
                    SUMMARY = #{summary,jdbcType=LONGVARCHAR},
                </if>
                <if test="equipments != null">
                    EQUIPMENTS = #{equipments,jdbcType=LONGVARCHAR},
                </if>
                <if test="attendeeNotIds != null">
                    ATTENDEE_NOT_IDS = #{attendeeNotIds,jdbcType=LONGVARCHAR},
                </if>
                <if test="attendeeNotNames != null">
                    ATTENDEE_NOT_NAMES = #{attendeeNotNames,jdbcType=LONGVARCHAR},
                </if>
                <if test="equipmentIds != null">
                    EQUIPMENT_IDS = #{equipmentIds,jdbcType=LONGVARCHAR},
                </if>
                <if test="equipmentNames != null">
                    EQUIPMENT_NAMES = #{equipmentNames,jdbcType=LONGVARCHAR},
                </if>
                <if test="SummaryAttachmentId!= null">
                    SUMMARY_ATTACHMENT_ID=#{SummaryAttachmentId,jdbcType=VARCHAR},
                </if>
                <if test="SummaryAttachmentName!= null">
                    SUMMARY_ATTACHMENT_NAME=#{SummaryAttachmentName,jdbcType=VARCHAR},
                </if>
                <if test="mobileNo!=null">
                    MOBILE_NO = #{mobileNo},
                </if>
                <if test="serviceUser != null">
                    SERVICE_USER = #{serviceUser}
                </if>
            </trim>
        </set>
        <if test="sid != null">
            <where>
                SID=#{sid,jdbcType=INTEGER}
            </where>
        </if>
    </update>

    <!-- 申请会议的时间和已有会议的时间不冲突的数量-->
    <select id="selCountRoomNoConflict" resultType="int" parameterType="map">
        select count(*) from meeting
        where
        MEET_ROOM_ID=#{meetRoomId}
        and STATUS=2
        and VIDEO_CONF_FLAG = '0'
        <if test="startTime!=null and startTime!='' and endTime!=null and endTime!=''">
            and
            (
                ( START_TIME <![CDATA[<]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{startTime} AS datetime) )
                OR ( START_TIME <![CDATA[<]]> CAST(#{endTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{endTime} AS datetime) )
                OR ( START_TIME <![CDATA[>]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[<]]> CAST(#{endTime} AS datetime) )
                OR ( START_TIME <![CDATA[<]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{endTime} AS datetime) )
                OR ( START_TIME <![CDATA[=]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[=]]> CAST(#{endTime} AS datetime) )
            )
        </if>
    </select>


    <select id="queryCurrentRoomUserCondition" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT * from meeting
    WHERE
       MEET_ROOM_ID=#{meetRoomId}
       and
       (
          START_TIME &lt; #{currentBeginTime} and END_TIME &gt;= #{currentEndTime}
          or
          START_TIME &gt;= #{currentBeginTime} and END_TIME &lt; #{currentEndTime}
          or
          START_TIME &lt;= #{currentBeginTime} and END_TIME &lt; #{currentEndTime} and END_TIME &gt; #{currentBeginTime}
          or
          START_TIME &gt;= #{currentBeginTime} and START_TIME &lt; #{currentEndTime} and END_TIME &gt; #{currentEndTime}
        )
  </select>

    <select id="getMeetingNotify" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT * FROM meeting
        <where>
            STATUS IN (2,3)
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            and (UID=#{meetingWithBLOBs.uid} or RECORDER_ID=#{meetingWithBLOBs.uid}
            OR ATTENDEE LIKE CONCAT('%,',#{meetingWithBLOBs.uid},',%') OR ATTENDEE LIKE
            CONCAT(#{meetingWithBLOBs.uid},',%')
            OR (SERVICE_USER = #{meetingWithBLOBs.uid} OR SERVICE_USER LIKE concat('%,',#{meetingWithBLOBs.uid},',%')
            OR SERVICE_USER LIKE concat(#{meetingWithBLOBs.uid},',%')))
        </where>
        order by CREATE_TIME desc
    </select>
    <select id="getMeetingNotify" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="oracle">
        SELECT * FROM meeting
        <where>
            STATUS IN (2,3)
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like CONCAT('%#{meetingWithBLOBs.meetName}','%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
        </where>
        order by CREATE_TIME desc
    </select>
    <select id="getMeetingNotify" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="dm">
        SELECT * FROM meeting
        <where>
            STATUS IN (2,3)
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like CONCAT('%#{meetingWithBLOBs.meetName}','%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
        </where>
        order by CREATE_TIME desc
    </select>

    <select id="getMeetingNotify" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="kingbase">
        SELECT * FROM meeting
        <where>
            STATUS IN (2,3)
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and MEET_NAME like CONCAT(CONCAT('%',#{meetingWithBLOBs.meetName}),'%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            and (UID=#{meetingWithBLOBs.uid} or RECORDER_ID=#{meetingWithBLOBs.uid}
            OR ATTENDEE LIKE CONCAT(CONCAT('%,',#{meetingWithBLOBs.uid}),',%') OR ATTENDEE LIKE
            CONCAT(#{meetingWithBLOBs.uid},',%')
            OR (SERVICE_USER = #{meetingWithBLOBs.uid} OR SERVICE_USER LIKE
            CONCAT(CONCAT('%,',#{meetingWithBLOBs.uid}),',%')
            OR SERVICE_USER LIKE CONCAT(#{meetingWithBLOBs.uid},',%')))
        </where>
        order by CREATE_TIME desc
    </select>

    <select id="queryMeetingByIdInt" parameterType="Integer" resultMap="ResultMapWithBLOBs">
    SELECT
    m.* ,r.managerIds
    from meeting as m
    LEFT JOIN meeting_room AS r ON m.MEET_ROOM_ID = r.SID
     where m.SID=#{sid}
  </select>
    <!--查询会议是否有冲突-->
    <select id="getMettingByTime" parameterType="map" resultType="java.lang.Integer">
        SELECT
            COUNT( SID )
        FROM
            meeting
        WHERE
        (
            ( START_TIME <![CDATA[<]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{startTime} AS datetime) )
            OR ( START_TIME <![CDATA[<]]> CAST(#{endTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{endTime} AS datetime) )
            OR ( START_TIME <![CDATA[>]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[<]]> CAST(#{endTime} AS datetime) )
            OR ( START_TIME <![CDATA[<]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[>]]> CAST(#{endTime} AS datetime) )
            OR ( START_TIME <![CDATA[=]]> CAST(#{startTime} AS datetime) AND END_TIME <![CDATA[=]]> CAST(#{endTime} AS datetime) )
        )
        AND ( STATUS = 1 OR STATUS = 2 OR STATUS = 3 )
        AND MEET_ROOM_ID = #{roomId}
        AND ( VIDEO_CONF_FLAG = '0' OR VIDEO_CONF_FLAG IS NULL OR VIDEO_CONF_FLAG = '' )
  </select>

    <select id="getPTMettingByTime" parameterType="map" resultType="java.lang.Integer">
    SELECT
    count(SID)
    FROM
    meeting
    WHERE
    END_TIME &gt; #{startTime} AND START_TIME  &lt; #{endTime}
    AND (`STATUS` = 1 OR `STATUS` = 2 OR `STATUS` = 3)
    AND MEET_ROOM_ID = #{roomId}
    and VIDEO_CONF_FLAG = '0'
  </select>

    <update id="updateMettingById" parameterType="com.xoa.model.meet.MeetingWithBLOBs">
        update meeting
        <set>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID = #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                SUMMARY=#{summary},
            </if>
            <if test="photoId != null and photoId != ''">
                PHOTO_ID = #{photoId,jdbcType=VARCHAR},
            </if>
            <if test="photoName != null and photoName != ''">
                PHOTO_NAME = #{photoName,jdbcType=VARCHAR},
            </if>
            <if test="videoId != null and videoId != ''">
                VIDEO_ID = #{videoId,jdbcType=VARCHAR},
            </if>
            <if test="videoName != null and videoName !=''">
                VIDEO_NAME = #{videoName,jdbcType=VARCHAR},
            </if>
            <if test="recordId != null and recordId!=''">
                RECORD_ID = #{recordId,jdbcType=VARCHAR},
            </if>
            <if test="recordName != null and recordName!=''">
                RECORD_NAME = #{recordName,jdbcType=VARCHAR},
            </if>
            <if test="summaryAttachmentId != null and summaryAttachmentId !=''">
                SUMMARY_ATTACHMENT_ID=#{summaryAttachmentId,jdbcType=VARCHAR},
            </if>
            <if test="summaryAttachmentName != null and summaryAttachmentName !=''">
                SUMMARY_ATTACHMENT_NAME=#{summaryAttachmentName,jdbcType=VARCHAR},
            </if>
            <if test="attachmentId != null and attachmentId != ''">
                ATTACHMENT_ID=#{attachmentId,jdbcType=VARCHAR},
            </if>
            <if test="attachmentName != null and attachmentName != ''">
                ATTACHMENT_NAME=#{attachmentName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="sid != null">
            <where>
                SID=#{sid,jdbcType=INTEGER}
            </where>
        </if>
    </update>

    <update id="updateMettingById" parameterType="com.xoa.model.meet.MeetingWithBLOBs" databaseId="kingbase">
        update meeting
        <set>
            <if test="readPeopleId != null">
                READ_PEOPLE_ID = #{readPeopleId,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                SUMMARY=#{summary},
            </if>
            <if test="photoId != null and photoId != ''">
                PHOTO_ID = #{photoId,jdbcType=VARCHAR},
            </if>
            <if test="photoName != null and photoName != ''">
                PHOTO_NAME = #{photoName,jdbcType=VARCHAR},
            </if>
            <if test="videoId != null and videoId != ''">
                VIDEO_ID = #{videoId,jdbcType=VARCHAR},
            </if>
            <if test="videoName != null and videoName !=''">
                VIDEO_NAME = #{videoName,jdbcType=VARCHAR},
            </if>
            <if test="recordId != null and recordId!=''">
                RECORD_ID = #{recordId,jdbcType=VARCHAR},
            </if>
            <if test="recordName != null and recordName!=''">
                RECORD_NAME = #{recordName,jdbcType=VARCHAR},
            </if>
            <if test="summaryAttachmentId != null and summaryAttachmentId !=''">
                SUMMARY_ATTACHMENT_ID=#{summaryAttachmentId,jdbcType=VARCHAR},
            </if>
            <if test="summaryAttachmentName != null and summaryAttachmentName !=''">
                SUMMARY_ATTACHMENT_NAME=#{summaryAttachmentName,jdbcType=VARCHAR},
            </if>
            <if test="attachmentId != null and attachmentId != ''">
                ATTACHMENT_ID=#{attachmentId,jdbcType=VARCHAR},
            </if>
            <if test="attachmentName != null and attachmentName != ''">
                ATTACHMENT_NAME=#{attachmentName,jdbcType=VARCHAR},
            </if>
        </set>
        where
            SID=#{sid,jdbcType=INTEGER}
    </update>

    <update id="updatePowerChinaMeet">
    update meeting set STATUS= 5 WHERE SID=#{sid}
  </update>

    <select id="getCycleMeeting" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT * FROM MEETING WHERE CYCLE = 1 GROUP BY CYCLE_NO
  </select>

    <select id="getCycleMeetingByNo" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT * FROM MEETING WHERE CYCLE = 1
    AND CYCLE_NO = #{cycleNo}
  </select>

    <select id="getMaxCycleNo" resultType="int">
    SELECT ifnull(max(cycle_no),0) FROM meeting
  </select>
    <select id="MyMeeting" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT * FROM meeting m where 1=1
        AND (
        (ATTENDEE LIKE concat('%,',#{meetingWithBLOBs.uid},',%') OR ATTENDEE LIKE concat(#{meetingWithBLOBs.uid},',%'))
        OR (ATTENDEE_OUT LIKE concat('%,',#{meetingWithBLOBs.uid},',%') OR ATTENDEE_OUT LIKE
        concat(#{meetingWithBLOBs.uid},',%') )
        OR (RECORDER_ID = #{meetingWithBLOBs.uid} OR RECORDER_ID LIKE concat('%,',#{meetingWithBLOBs.uid},',%') OR
        RECORDER_ID LIKE concat(#{meetingWithBLOBs.uid},',%') )
        OR (SERVICE_USER = #{meetingWithBLOBs.uid} OR SERVICE_USER LIKE concat('%,',#{meetingWithBLOBs.uid},',%') OR
        SERVICE_USER LIKE concat(#{meetingWithBLOBs.uid},',%') )
        OR UID = #{meetingWithBLOBs.uid}
        )
        <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
            and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
        </if>
        <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
            and m.START_TIME &gt;= #{meetingWithBLOBs.startTime}
        </if>
        <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
            and m.START_TIME &lt;= #{meetingWithBLOBs.endTime}
        </if>
        and STATUS in (2,3,5)
        order by START_TIME desc
    </select>

    <select id="MyMeeting" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="kingbase">
        SELECT * FROM meeting m where 1=1
        AND (
        (ATTENDEE LIKE concat('%,',#{meetingWithBLOBs.uid}::VARCHAR,',%') OR ATTENDEE LIKE concat(#{meetingWithBLOBs.uid}::VARCHAR,',%'))
        OR (ATTENDEE_OUT LIKE concat('%,',#{meetingWithBLOBs.uid}::VARCHAR,',%') OR ATTENDEE_OUT LIKE
        concat(#{meetingWithBLOBs.uid}::VARCHAR,',%') )
        OR (RECORDER_ID = #{meetingWithBLOBs.uid} OR RECORDER_ID LIKE concat('%,',#{meetingWithBLOBs.uid}::VARCHAR,',%') OR
        RECORDER_ID LIKE concat(#{meetingWithBLOBs.uid}::VARCHAR,',%') )
        OR (SERVICE_USER = #{meetingWithBLOBs.uid} OR SERVICE_USER LIKE concat('%,',#{meetingWithBLOBs.uid}::VARCHAR,',%') OR
        SERVICE_USER LIKE concat(#{meetingWithBLOBs.uid}::VARCHAR,',%') )
        OR UID = #{meetingWithBLOBs.uid}
        )
        <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
            and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName}::VARCHAR,'%')
        </if>
        <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
            and m.START_TIME &gt;= #{meetingWithBLOBs.startTime}
        </if>
        <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
            and m.START_TIME &lt;= #{meetingWithBLOBs.endTime}
        </if>
        and STATUS in (2,3,5)
        order by START_TIME desc
    </select>

    <select id="MyMeetingv1" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT * FROM meeting m
        <where>
            <if test="uid != null">
                AND (
                (ATTENDEE LIKE concat('%',#{uid},'%') OR ATTENDEE LIKE concat(#{uid},'%'))
                OR (ATTENDEE_OUT LIKE concat('%',#{uid},'%') OR ATTENDEE_OUT LIKE concat(#{uid},'%') )
                OR (RECORDER_ID = #{uid} OR RECORDER_ID LIKE concat('%',#{uid},'%') OR RECORDER_ID LIKE
                concat(#{uid},'%') )
                OR (SERVICE_USER = #{uid} OR SERVICE_USER LIKE concat('%',#{uid},'%') OR SERVICE_USER LIKE
                concat(#{uid},'%') )
                OR UID = #{uid}
                )
                and STATUS in (2,3,5)
            </if>
        </where>
        order by START_TIME desc
    </select>

    <select id="meetingManage" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT m.* FROM meeting m where
        <choose>
            <when test="meetingWithBLOBs.userPriv==1">
                1=1
                <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                    and m.UID = #{meetingWithBLOBs.uid}
                </if>
                <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                    and m.MEET_NAME LIKE CONCAT('%',#{meetingWithBLOBs.meetName},'%')
                </if>
                <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                    and m.START_TIME <![CDATA[>=]]> cast(concat( #{meetingWithBLOBs.startTime},' 00:00:00') AS datetime)
                </if>
                <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                    and m.START_TIME <![CDATA[<=]]> cast(concat( #{meetingWithBLOBs.endTime},' 23:59:59') AS datetime)
                </if>
                <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=''">
                    and STATUS = #{meetingWithBLOBs.status}
                </if>
                <if test="meetingWithBLOBs.meetRoomId != null and meetingWithBLOBs.meetRoomId != ''">
                    and m.MEET_ROOM_ID = #{meetingWithBLOBs.meetRoomId}
                </if>
                <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!=''">
                    and m.CYCLE = #{meetingWithBLOBs.cycle}
                </if>
                <if test="meetingWithBLOBs.cycleNo!=null and meetingWithBLOBs.cycleNo!=''">
                    and m.CYCLE_NO = #{meetingWithBLOBs.cycleNo}
                </if>
            </when>
            <otherwise>
                1=1
                <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                    and m.UID = #{meetingWithBLOBs.uid}
                </if>
                <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                    and m.MEET_NAME LIKE CONCAT('%',#{meetingWithBLOBs.meetName},'%')
                </if>
                <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                    and m.START_TIME <![CDATA[>=]]> cast(concat( #{meetingWithBLOBs.startTime},' 00:00:00') AS datetime)
                </if>
                <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                    and m.START_TIME <![CDATA[<=]]> cast(concat( #{meetingWithBLOBs.endTime},' 23:59:59') AS datetime)
                </if>
                <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=''">
                    and STATUS = #{meetingWithBLOBs.status}
                </if>
                <if test="meetingWithBLOBs.meetRoomId != null and meetingWithBLOBs.meetRoomId != ''">
                    and m.MEET_ROOM_ID = #{meetingWithBLOBs.meetRoomId}
                </if>
                <if test="meetingWithBLOBs.managerId != null and meetingWithBLOBs.managerId != ''">
                    and MANAGER_ID = #{meetingWithBLOBs.managerId}
                </if>
                <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!=''">
                    and m.CYCLE = #{meetingWithBLOBs.cycle}
                </if>
                <if test="meetingWithBLOBs.cycleNo!=null and meetingWithBLOBs.cycleNo!=''">
                    and m.CYCLE_NO = #{meetingWithBLOBs.cycleNo}
                </if>
            </otherwise>
        </choose>
        <choose>
            <when test="meetingWithBLOBs.status != null and meetingWithBLOBs.status != '' and meetingWithBLOBs.status == 1">
                order by START_TIME
            </when>
            <otherwise>
                order by START_TIME desc
            </otherwise>
        </choose>
    </select>

    <select id="meetingQuery" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT m.* FROM meeting m left join meeting_room mr on m.MEET_ROOM_ID = mr.SID where
        <choose>
            <when test="meetingWithBLOBs.userPriv==1">
                1=1
                <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                    and m.UID=#{meetingWithBLOBs.uid}
                </if>
                <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                    and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
                </if>
                <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                    and m.START_TIME <![CDATA[>=]]> cast(concat( #{meetingWithBLOBs.startTime},' 00:00:00') AS datetime)
                </if>
                <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                    and m.START_TIME <![CDATA[<=]]> cast(concat( #{meetingWithBLOBs.endTime},' 23:59:59') AS datetime)
                </if>
                <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=''">
                    and m.STATUS=#{meetingWithBLOBs.status}
                </if>
                <if test="meetingWithBLOBs.meetRoomId != null and meetingWithBLOBs.meetRoomId != ''">
                    and m.MEET_ROOM_ID = #{meetingWithBLOBs.meetRoomId}
                </if>
            </when>
            <otherwise>
                1=1
                <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                    and ( m.UID=#{meetingWithBLOBs.uid} OR (m.ATTENDEE LIKE concat('%,',#{meetingWithBLOBs.uid},',%')
                    OR m.ATTENDEE LIKE concat(#{meetingWithBLOBs.uid},',%')
                    )OR
                    (m.ATTENDEE_OUT LIKE concat('%,',#{meetingWithBLOBs.uid},',%')
                    OR m.ATTENDEE_OUT LIKE concat(#{meetingWithBLOBs.uid},',%')
                    )OR
                    (m.RECORDER_ID = #{meetingWithBLOBs.uid} OR m.RECORDER_ID LIKE
                    concat('%,',#{meetingWithBLOBs.uid},',%')
                    OR m.RECORDER_ID LIKE concat(#{meetingWithBLOBs.uid},',%')
                    )OR (m.SERVICE_USER = #{meetingWithBLOBs.uid} OR m.SERVICE_USER LIKE
                    concat('%,',#{meetingWithBLOBs.uid},',%')
                    OR m.SERVICE_USER LIKE concat(#{meetingWithBLOBs.uid},',%'))
                    OR (mr.managerIds LIKE concat('%,',#{meetingWithBLOBs.uid},',%') OR mr.managerIds LIKE
                    concat(#{meetingWithBLOBs.uid},',%'))
                    )
                </if>
                <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                    and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName}::VARCHAR,'%')
                </if>
                <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                    and m.START_TIME &gt;= #{meetingWithBLOBs.startTime}
                </if>
                <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                    and m.START_TIME &lt;= #{meetingWithBLOBs.endTime}
                </if>
                <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=''">
                    and m.STATUS=#{meetingWithBLOBs.status}
                </if>
                <if test="meetingWithBLOBs.meetRoomId != null and meetingWithBLOBs.meetRoomId != ''">
                    and m.MEET_ROOM_ID = #{meetingWithBLOBs.meetRoomId}
                </if>
            </otherwise>
        </choose>
        order by m.START_TIME desc
    </select>
    <select id="getApp" resultMap="ResultMapWithBLOBs">
        select<include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from meeting
        where
        STATUS in (2,3)
        and ((ATTENDEE LIKE concat('%,',#{userId},',%')
        OR ATTENDEE LIKE concat(#{userId},',%')
        )OR
        (ATTENDEE_OUT LIKE concat('%,',#{userId},',%')
        OR ATTENDEE_OUT LIKE concat(#{userId},',%')
        ))
        order by CREATE_TIME desc
    </select>
    <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select SID,START_TIME,END_TIME,STATUS,REASON from meeting where STATUS in (2,3)
  </select>
    <select id="queryMeetingByRoomIds" parameterType="map" resultMap="ResultMapWithBLOBs">
        SELECT m.* FROM meeting m
        <where>
            <if test="meetingWithBLOBs.meetName!=null and meetingWithBLOBs.meetName!=''">
                and m.MEET_NAME like CONCAT('%',#{meetingWithBLOBs.meetName},'%')
            </if>
            <if test="meetingWithBLOBs.startTime!=null and meetingWithBLOBs.startTime!=''">
                and m.START_TIME &gt;= #{meetingWithBLOBs.startTime}
            </if>
            <if test="meetingWithBLOBs.endTime!=null and meetingWithBLOBs.endTime!=''">
                and m.START_TIME &lt;= #{meetingWithBLOBs.endTime}
            </if>
            <if test="meetingWithBLOBs.status!=null and meetingWithBLOBs.status!=0 and meetingWithBLOBs.status!=3 and meetingWithBLOBs.status!=5 and meetingWithBLOBs.status!=2">
                and m.STATUS=#{meetingWithBLOBs.status}
            </if>
            <if test="meetingWithBLOBs.meetRoomId!=null and meetingWithBLOBs.meetRoomId!=0">
                and m.MEET_ROOM_ID=#{meetingWithBLOBs.meetRoomId}
            </if>
            <if test="meetingWithBLOBs.status==2">
                AND m.STATUS IN (2,5)
            </if>
            <if test="meetingWithBLOBs.uid!=null and meetingWithBLOBs.uid!=''">
                and UID=#{meetingWithBLOBs.uid}
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!='' and meetingWithBLOBs.status==3">
                and (m.START_TIME &lt;= #{meetingWithBLOBs.currentTime} and #{meetingWithBLOBs.currentTime} &lt;
                m.END_TIME) AND m.STATUS NOT IN (1,4,5)
            </if>
            <if test="meetingWithBLOBs.currentTime!=null and meetingWithBLOBs.currentTime!='' and meetingWithBLOBs.status==5">
                and (((m.START_TIME &lt;= #{meetingWithBLOBs.currentTime} and #{meetingWithBLOBs.currentTime} &gt;
                m.END_TIME) AND m.STATUS NOT IN (1,4)) OR m.STATUS='5')
            </if>
            <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!=''">
                and m.CYCLE = #{meetingWithBLOBs.cycle}
            </if>
            <if test="meetingWithBLOBs.cycleNo!=null and meetingWithBLOBs.cycleNo!=''">
                and m.CYCLE_NO = #{meetingWithBLOBs.cycleNo}
            </if>
            AND MEET_ROOM_ID in
            <foreach item="meetingRoom" collection="meetingRoom" open="(" separator="," close=")">
                #{meetingRoom}
            </foreach>
        </where>
        <if test="meetingWithBLOBs.cycle!=null and meetingWithBLOBs.cycle!='' and meetingWithBLOBs.cycleNo==null">
            GROUP BY m.CYCLE_NO
        </if>
        order by m.CREATE_TIME desc
    </select>

    <select id="selectOwner" resultType="java.lang.String">
        SELECT
            GROUP_CONCAT(USER_ID)
        FROM `user`
        WHERE
            USER_PRIV = #{i}
            OR USER_PRIV_OTHER like CONCAT('%,', #{i} ,',%')
            OR USER_PRIV_OTHER like CONCAT(#{i} ,',%')
    </select>

    <select id="selectTimeWithStatus" resultMap="ResultMapWithBLOBs">
    select SID, START_TIME, END_TIME, STATUS from meeting where STATUS in (2,3)
  </select>
    <update id="updateCreateQrcodeTimeBySid" parameterType="com.xoa.model.meet.Meeting">
    update meeting set CREATE_QRCODE_TIME=#{createQrcodeTime} where SID=#{sid}
  </update>

    <select id="selectMeetingReserve" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
        SELECT
            *
        FROM
            meeting
        WHERE
            MEET_ROOM_ID = #{meetRoomId}
            AND STATUS != 4
            AND (
                ( #{startDate} <![CDATA[>=]]> START_TIME AND #{startDate} <![CDATA[<]]> END_TIME )
                OR ( #{endDate} <![CDATA[>]]> START_TIME AND #{endDate} <![CDATA[<=]]> END_TIME )
                OR ( #{startDate} <![CDATA[<]]> START_TIME AND #{endDate} <![CDATA[>]]> END_TIME )
            )
    </select>

</mapper>
