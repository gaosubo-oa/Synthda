<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.rms.RmsLendMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.rms.RmsLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LEND_ID" property="lendId" jdbcType="INTEGER" />
    <result column="FILE_ID" property="fileId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ADD_TIME" property="addTime"  jdbcType="TIMESTAMP"/>
    <result column="LEND_TIME" property="lendTime"   jdbcType="TIMESTAMP"/>
    <result column="RETURN_TIME" property="returnTime"   jdbcType="TIMESTAMP"/>
    <result column="ALLOW_TIME" property="allowTime"  jdbcType="TIMESTAMP"/>
    <result column="ALLOW" property="allow" jdbcType="CHAR" />
    <result column="APPROVE" property="approve" jdbcType="VARCHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="FILE_CODE" property="fileCode" jdbcType="VARCHAR" />
    <result column="ROOM_NAME" property="roomName" jdbcType="VARCHAR" />
    <result column="ROLL_NAME" property="rollName" jdbcType="VARCHAR" />
    <result column="FILE_SUBJECT" property="fileSubject" jdbcType="VARCHAR" />
    <result column="FILE_TITLE" property="fileTitle" jdbcType="VARCHAR" />
    <result column="FILE_TITLE0" property="fileTitle0" jdbcType="VARCHAR" />
    <result column="SEND_UNIT" property="sendUnit" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="SECRET" property="SECRET" jdbcType="VARCHAR" />
    <result column="URGENCY" property="urgency" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR"/>

  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LEND_ID, FILE_ID, USER_ID, ADD_TIME, LEND_TIME, RETURN_TIME, ALLOW_TIME, ALLOW, APPROVE, 
    DELETE_FLAG, OPERATOR,TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.rms.RmsLendExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rms_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from rms_lend
    where LEND_ID = #{lendId,jdbcType=INTEGER} and DELETE_FLAG = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rms_lend
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.rms.RmsLendExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rms_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.rms.RmsLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into rms_lend (LEND_ID, FILE_ID, USER_ID, 
      ADD_TIME, LEND_TIME, RETURN_TIME, 
      ALLOW_TIME, ALLOW, APPROVE, 
      DELETE_FLAG, OPERATOR,TYPE )
    values (#{lendId,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{lendTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, 
      #{allowTime,jdbcType=TIMESTAMP}, #{allow,jdbcType=CHAR}, #{approve,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=CHAR}, #{operator,jdbcType=VARCHAR}),#{type,jdbcType=VARCHAR}
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.rms.RmsLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into rms_lend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lendId != null" >
        LEND_ID,
      </if>
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="returnTime != null" >
        RETURN_TIME,
      </if>
      <if test="allowTime != null" >
        ALLOW_TIME,
      </if>
      <if test="allow != null" >
        ALLOW,
      </if>
      <if test="approve != null" >
        APPROVE,
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="type != null">
        TYPE ,
      </if>
      <if test="lendTime != null">
        LEND_TIME ,
      </if>
        ADD_TIME,

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lendId != null" >
        #{lendId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allowTime != null" >
        #{allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allow != null" >
        #{allow,jdbcType=CHAR},
      </if>
      <if test="approve != null" >
        #{approve,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="lendTime != null">
        #{lendTime,jdbcType=VARCHAR},
      </if>
      NOW(),
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.rms.RmsLendExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from rms_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rms_lend
    <set >
      <if test="record.lendId != null" >
        LEND_ID = #{record.lendId,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lendTime != null" >
        LEND_TIME = #{record.lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null" >
        RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allowTime != null" >
        ALLOW_TIME = #{record.allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allow != null" >
        ALLOW = #{record.allow,jdbcType=CHAR},
      </if>
      <if test="record.approve != null" >
        APPROVE = #{record.approve,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null" >
        DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.operator != null" >
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type , jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rms_lend
    set LEND_ID = #{record.lendId,jdbcType=INTEGER},
      FILE_ID = #{record.fileId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      LEND_TIME = #{record.lendTime,jdbcType=TIMESTAMP},
      RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      ALLOW_TIME = #{record.allowTime,jdbcType=TIMESTAMP},
      ALLOW = #{record.allow,jdbcType=CHAR},
      APPROVE = #{record.approve,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      OPERATOR = #{record.operator,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.rms.RmsLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rms_lend
    <set >
      <if test="fileId != null" >
        FILE_ID = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lendTime != null" >
        LEND_TIME = #{lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null" >
        RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allowTime != null" >
        ALLOW_TIME = #{allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allow != null" >
        ALLOW = #{allow,jdbcType=CHAR},
      </if>
      <if test="approve != null" >
        APPROVE = #{approve,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.rms.RmsLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rms_lend
    set FILE_ID = #{fileId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      LEND_TIME = #{lendTime,jdbcType=TIMESTAMP},
      RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      ALLOW_TIME = #{allowTime,jdbcType=TIMESTAMP},
      ALLOW = #{allow,jdbcType=CHAR},
      APPROVE = #{approve,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </update>
  <select id="selRmsLend" parameterType="map" resultMap="BaseResultMap" >
    select rl.*,rf.FILE_CODE from rms_lend rl ,rms_file rf where rl.FILE_ID=rf.FILE_ID and DELETE_FLAG=0
    <if test="allow != null and allow != ''" >
      and ALLOW = #{allow,jdbcType=CHAR}
    </if>
    <if test="userId != null and userId != ''" >
      and USER_ID = #{userId,jdbcType=CHAR}
    </if>
  </select>

  <update id="modifyRmsLendById" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rms_lend
    <set >
      <if test="allow != null and allow != ''" >
        ALLOW = #{allow},
      </if>
      <if test="deleteFlag != null and deleteFlag != ''" >
        DELETE_FLAG = #{deleteFlag},
      </if>
      <if test="operator != null and operator != ''" >
        OPERATOR = #{operator},
      </if>


      <if test="lendTime != null" >
        LEND_TIME = NOW(),
      </if>
      <if test="returnTime != null" >
        RETURN_TIME = NOW(),
      </if>
      <if test="allowTime != null" >
        ALLOW_TIME = NOW(),
      </if>



    </set>
    where LEND_ID = #{lendId}
  </update>




  <insert id ="insertLensd" parameterType="map" >
    insert into rms_lend(FILE_ID,USER_ID,ALLOW,APPROVE,ADD_TIME,LEND_TIME) values
    <foreach collection ="rmsLend" item="lend" index= "index" separator =",">
      (
      #{lend.fileId},
      #{lend.userId},
      #{lend.allow},
      #{lend.approve},
      NOW(),
      NOW()
      )
    </foreach >
  </insert >
  <select id="selAllLendBy" parameterType="map" resultMap="BaseResultMap" >
    SELECT
    rf.*, rr.roll_name,
    rrr.room_name
    FROM
    rms_file rf,
    rms_roll rr,
    rms_roll_room rrr
    WHERE
    rf.roll_id = rr.roll_id
    AND rr.room_id = rrr.room_id

    <if test="roomName != null and roomName != ''" >
      and rrr.ROOM_NAME LIKE   CONCAT('%',#{roomName},'%')
    </if>
    <if test="rollName != null and rollName != ''" >
      and rr.ROLL_NAME  LIKE   CONCAT('%',#{rollName},'%')
    </if>
    <if test="rmsFile.fileCode != null and rmsFile.fileCode != ''" >
      and rf.FILE_CODE  LIKE   CONCAT('%',#{rmsFile.fileCode},'%')
    </if>
    <if test="rmsFile.fileSubject != null and rmsFile.fileSubject != ''" >
      and rf.FILE_SUBJECT LIKE   CONCAT('%',#{rmsFile.fileSubject},'%')
    </if>
    <if test="rmsFile.fileTitle != null and rmsFile.fileTitle != ''" >
      and rf.FILE_TITLE LIKE   CONCAT('%',#{rmsFile.fileTitle},'%')
    </if>
    <if test="rmsFile.fileTitle0 != null and rmsFile.fileTitle0 != ''" >
      and rf.FILE_TITLE0 LIKE   CONCAT('%',#{rmsFile.fileTitle0},'%')
    </if>
    <if test="rmsFile.sendUnit != null and rmsFile.sendUnit != ''" >
      and rf.SEND_UNIT LIKE   CONCAT('%',#{rmsFile.sendUnit},'%')
    </if>
    <if test="rmsFile.remark != null and rmsFile.remark != ''" >
      and rf.REMARK LIKE   CONCAT('%',#{rmsFile.remark},'%')
    </if>
  </select>
  <select id="selFileJieYueCount" parameterType="Integer" resultType="java.lang.Integer">
    SELECT Count(*) FROM rms_lend where FILE_ID= #{fileId}
  </select>


  <select id="selRmsLendByJieYe" parameterType="map" resultMap="BaseResultMap" >
    select rl.*,rf.FILE_CODE from rms_lend rl ,rms_file rf where rl.FILE_ID=rf.FILE_ID and DELETE_FLAG=0
    <if test="allow != null and allow != ''" >
      and ALLOW = #{allow,jdbcType=CHAR}
    </if>
    <if test="fileId != null and fileId != ''" >
      and rl.FILE_ID = #{fileId,jdbcType=CHAR}
    </if>
  </select>
<!--修改状态-->
  <select id="selectAllow" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from rms_lend where ALLOW = #{allow,jdbcType=CHAR} and DELETE_FLAG = '0';
  </select>

    <update id="deleteFlag" parameterType="Integer" >
        update rms_lend
        set  DELETE_FLAG = 1
        where LEND_ID = #{lendId}
    </update>

    <!--查询-->
    <select id="selectByCondition"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM rms_lend
      where DELETE_FLAG = 0
    </select>
    <!--查询关联文件管理-->
    <select id="selectByFile" resultMap="BaseResultMap" parameterType="com.xoa.model.rms.RmsLend" >
      select rl.* , rf.FILE_TITLE
        from rms_lend rl ,rms_file rf
          where rl.TYPE = 0  and  rl.FILE_ID = rf.FILE_ID and rl.DELETE_FLAG = 0
      <if test="allow != null and allow != ''" >
        and rl.ALLOW = #{allow,jdbcType=CHAR}
      </if>
      <if test="name != null and name != '' ">
        and   rf.FILE_TITLE LIKE   CONCAT('%',#{name},'%')
      </if>
    </select>
  <!--查询关联案卷管理-->
  <select id="selectByRoll" resultMap="BaseResultMap" parameterType="com.xoa.model.rms.RmsLend">
    select
    rl.* , rr.ROLL_NAME
    from rms_lend rl , rms_roll rr
    where rl.TYPE = 1 and rl.FILE_ID = rr.ROLL_ID and rl.DELETE_FLAG = 0
    <if test="allow != null and allow != ''" >
      and rl.ALLOW = #{allow,jdbcType=CHAR}
    </if>
    <if test="name != null and name != '' ">
      and   rr.ROLL_NAME LIKE   CONCAT('%',#{name},'%')
    </if>
  </select>
  <!--查看详情关联文件管理-->
  <select id="selectFile" parameterType="com.xoa.model.rms.RmsLend" resultMap="BaseResultMap">
    select
     rl.* ,rf.FILE_TITLE
    from rms_lend rl , rms_file rf
    where  rl.FILE_ID = rf.FILE_ID AND DELETE_FLAG = 0
    AND LEND_ID = #{lendId , jdbcType=INTEGER}
  </select>
  <!--查看详情关联案卷管理-->
  <select id="selectRoll" parameterType="com.xoa.model.rms.RmsLend" resultMap="BaseResultMap">
    select
     rl.* ,rr.ROLL_NAME
    from rms_lend rl , rms_roll rr
    where  rl.FILE_ID = rr.ROLL_ID AND DELETE_FLAG = 0
    AND LEND_ID = #{lendId , jdbcType=INTEGER}
  </select>

  <!--查询所有数据-->
  <select id="queryCount" parameterType="map"  resultMap="BaseResultMap">

    select rl.*
    from rms_lend rl
    where DELETE_FLAG = 0
    <if test="userId != null and userId != ''">
      and USER_ID = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="obj.allow != null and obj.allow != ''" >
      and ALLOW = #{obj.allow,jdbcType=CHAR}
    </if>
  </select>
  <!--根据文件管理来关联查询-->
  <select id="selectAndFileId" parameterType="com.xoa.model.rms.RmsLend" resultMap="BaseResultMap">
    select rl.* , rf.FILE_TITLE
    from rms_lend rl , rms_file rf
    where rl.LEND_ID = #{lendId,jdbcType=INTEGER}
    and rl.FILE_ID = rf.FILE_ID and DELETE_FLAG = 0
    <if test="name != null and name != '' ">
     and   rf.FILE_TITLE LIKE   CONCAT('%',#{name},'%')
    </if>

  </select>

  <!--根据案卷管理来关联查询-->
  <select id="selectAndRollId" parameterType="com.xoa.model.rms.RmsLend" resultMap="BaseResultMap">
    select rl.* , rr.ROLL_NAME
    from rms_lend rl , rms_roll rr
    where rl.LEND_ID = #{lendId,jdbcType=INTEGER}
    and rl.FILE_ID = rr.ROLL_ID and DELETE_FLAG = 0

  </select>
  <!--我的借阅记录-->
  <select id="selectByUid" parameterType="map" resultMap="BaseResultMap">
    select rl.*
    from rmd_lend rl
    where rl.DELETE_FLAG = 0
    and rl.USER_ID = #{userId,jdbcType=VARCHAR}
  </select>

  <!--根据文件名称模糊查询-->
  <select id="selectByName" parameterType="map" resultMap="BaseResultMap">
    select rl.* , rf.FILE_TITLE
    from rms_lend rl , rms_file rf , rms_roll rr
    where rl.DELETE_FLAG = 0
    <if test="obj.name !=null and obj.name != ''">
      and rl.FILE_ID = rf.FILE_ID and rf.ROLL_ID = rr.ROLL_ID
      and rf.FILE_TITLE LIKE   CONCAT('%',#{obj.name},'%')
    </if>


  </select>

  <select id="select" parameterType="map" resultMap="BaseResultMap">
    select rm.*
    from (
    select rl.*
    from rms_lend rl
    where
    rl.DELETE_FLAG = 0
    <if test="list != null and list.size()>0">
            and rl.LEND_ID in
          <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.lendId}
          </foreach>
        </if>
    ) rm
  </select>

  <select id="selectByType" parameterType="map" resultMap="BaseResultMap">
    select *
    from rmd_lend rl
    where rl.DELETE_FLAG = 0
    and rl.ALLOW = #{allow,jdbcType=VARCHAR}
  </select>
</mapper>