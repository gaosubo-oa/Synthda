<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.qrCodeLogin.QrCodeLoginMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.qrCodeLogin.QrCodeLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="QR_CODE_ID" jdbcType="INTEGER" property="qrCodeId" />
    <result column="SECRET_KEY" jdbcType="VARCHAR" property="secretKey" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="KEY_CREATE_TIME" jdbcType="TIMESTAMP" property="keyCreateTime" />
    <result column="LOGIN_TIME" jdbcType="TIMESTAMP" property="loginTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    QR_CODE_ID, SECRET_KEY, USER_ID, KEY_CREATE_TIME, LOGIN_TIME
  </sql>
  <select id="selectByExample" parameterType="com.xoa.model.qrCodeLogin.QrCodeLoginExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qr_code_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from qr_code_login
    where QR_CODE_ID = #{qrCodeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from qr_code_login
    where QR_CODE_ID = #{qrCodeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.qrCodeLogin.QrCodeLoginExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from qr_code_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.qrCodeLogin.QrCodeLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into qr_code_login (QR_CODE_ID, SECRET_KEY, USER_ID, 
      KEY_CREATE_TIME, LOGIN_TIME)
    values (#{qrCodeId,jdbcType=INTEGER}, #{secretKey,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{keyCreateTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.qrCodeLogin.QrCodeLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into qr_code_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qrCodeId != null">
        QR_CODE_ID,
      </if>
      <if test="secretKey != null">
        SECRET_KEY,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="keyCreateTime != null">
        KEY_CREATE_TIME,
      </if>
      <if test="loginTime != null">
        LOGIN_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qrCodeId != null">
        #{qrCodeId,jdbcType=INTEGER},
      </if>
      <if test="secretKey != null">
        #{secretKey,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="keyCreateTime != null">
        #{keyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.qrCodeLogin.QrCodeLoginExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from qr_code_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qr_code_login
    <set>
      <if test="record.qrCodeId != null">
        QR_CODE_ID = #{record.qrCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.secretKey != null">
        SECRET_KEY = #{record.secretKey,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.keyCreateTime != null">
        KEY_CREATE_TIME = #{record.keyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qr_code_login
    set QR_CODE_ID = #{record.qrCodeId,jdbcType=INTEGER},
      SECRET_KEY = #{record.secretKey,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      KEY_CREATE_TIME = #{record.keyCreateTime,jdbcType=TIMESTAMP},
      LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.qrCodeLogin.QrCodeLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qr_code_login
    <set>
      <if test="secretKey != null">
        SECRET_KEY = #{secretKey,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="keyCreateTime != null">
        KEY_CREATE_TIME = #{keyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where QR_CODE_ID = #{qrCodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.qrCodeLogin.QrCodeLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qr_code_login
    set SECRET_KEY = #{secretKey,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      KEY_CREATE_TIME = #{keyCreateTime,jdbcType=TIMESTAMP},
      LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP}
    where QR_CODE_ID = #{qrCodeId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" parameterType="string" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from qr_code_login where USER_ID = #{userId}
    order by QR_CODE_ID DESC LIMIT 1;
  </select>

  <select id="selectBySecretKey" parameterType="string" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from qr_code_login where SECRET_KEY = #{secretKey};
  </select>
</mapper>