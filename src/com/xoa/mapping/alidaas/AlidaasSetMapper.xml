<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.alidaas.AlidaasSetMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="IDAAS_ID" jdbcType="INTEGER" property="idaasId" />
    <result column="APP_ID" jdbcType="VARCHAR" property="appId" />
    <result column="APP_NAME" jdbcType="VARCHAR" property="appName" />
    <result column="IDAAS_BASE_URL" jdbcType="VARCHAR" property="idaasBaseUrl" />
    <result column="API_KEY" jdbcType="VARCHAR" property="apiKey" />
    <result column="API_SECRET" jdbcType="VARCHAR" property="apiSecret" />
    <result column="OID" jdbcType="VARCHAR" property="oid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="JWT_PUBLICKEY" jdbcType="LONGVARCHAR" property="jwtPublickey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    IDAAS_ID, APP_ID, APP_NAME, IDAAS_BASE_URL, API_KEY, API_SECRET, OID
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    JWT_PUBLICKEY
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xoa.model.alidaas.AlidaasSetExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from alidaas_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xoa.model.alidaas.AlidaasSetExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from alidaas_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from alidaas_set
    where IDAAS_ID = #{idaasId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from alidaas_set
    where IDAAS_ID = #{idaasId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.alidaas.AlidaasSetExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from alidaas_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into alidaas_set (IDAAS_ID, APP_ID, APP_NAME, 
      IDAAS_BASE_URL, API_KEY,
      API_SECRET, OID, JWT_PUBLICKEY
      )
    values (#{idaasId,jdbcType=INTEGER}, #{appId,jdbcType=VARCHAR}, #{appName,jdbcType=VARCHAR}, 
      #{apiDomain,jdbcType=VARCHAR}, #{idaasBaseUrl,jdbcType=VARCHAR}, #{apiKey,jdbcType=VARCHAR}, 
      #{apiSecret,jdbcType=VARCHAR}, #{oid,jdbcType=VARCHAR}, #{jwtPublickey,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into alidaas_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idaasId != null">
        IDAAS_ID,
      </if>
      <if test="appId != null">
        APP_ID,
      </if>
      <if test="appName != null">
        APP_NAME,
      </if>
      <if test="idaasBaseUrl != null">
        IDAAS_BASE_URL,
      </if>
      <if test="apiKey != null">
        API_KEY,
      </if>
      <if test="apiSecret != null">
        API_SECRET,
      </if>
      <if test="oid != null">
        OID,
      </if>
      <if test="jwtPublickey != null">
        JWT_PUBLICKEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idaasId != null">
        #{idaasId,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="idaasBaseUrl != null">
        #{idaasBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiSecret != null">
        #{apiSecret,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="jwtPublickey != null">
        #{jwtPublickey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.alidaas.AlidaasSetExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from alidaas_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    <set>
      <if test="record.idaasId != null">
        IDAAS_ID = #{record.idaasId,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null">
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        APP_NAME = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.idaasBaseUrl != null">
        IDAAS_BASE_URL = #{record.idaasBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.apiKey != null">
        API_KEY = #{record.apiKey,jdbcType=VARCHAR},
      </if>
      <if test="record.apiSecret != null">
        API_SECRET = #{record.apiSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.oid != null">
        OID = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.jwtPublickey != null">
        JWT_PUBLICKEY = #{record.jwtPublickey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    set IDAAS_ID = #{record.idaasId,jdbcType=INTEGER},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      APP_NAME = #{record.appName,jdbcType=VARCHAR},
      IDAAS_BASE_URL = #{record.idaasBaseUrl,jdbcType=VARCHAR},
      API_KEY = #{record.apiKey,jdbcType=VARCHAR},
      API_SECRET = #{record.apiSecret,jdbcType=VARCHAR},
      OID = #{record.oid,jdbcType=VARCHAR},
      JWT_PUBLICKEY = #{record.jwtPublickey,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    set IDAAS_ID = #{record.idaasId,jdbcType=INTEGER},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      APP_NAME = #{record.appName,jdbcType=VARCHAR},
      IDAAS_BASE_URL = #{record.idaasBaseUrl,jdbcType=VARCHAR},
      API_KEY = #{record.apiKey,jdbcType=VARCHAR},
      API_SECRET = #{record.apiSecret,jdbcType=VARCHAR},
      OID = #{record.oid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    <set>
      <if test="appId != null">
        APP_ID = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        APP_NAME = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="idaasBaseUrl != null">
        IDAAS_BASE_URL = #{idaasBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        API_KEY = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiSecret != null">
        API_SECRET = #{apiSecret,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        OID = #{oid,jdbcType=VARCHAR},
      </if>
      <if test="jwtPublickey != null">
        JWT_PUBLICKEY = #{jwtPublickey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where IDAAS_ID = #{idaasId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    set APP_ID = #{appId,jdbcType=VARCHAR},
      APP_NAME = #{appName,jdbcType=VARCHAR},
      IDAAS_BASE_URL = #{idaasBaseUrl,jdbcType=VARCHAR},
      API_KEY = #{apiKey,jdbcType=VARCHAR},
      API_SECRET = #{apiSecret,jdbcType=VARCHAR},
      OID = #{oid,jdbcType=VARCHAR},
      JWT_PUBLICKEY = #{jwtPublickey,jdbcType=LONGVARCHAR}
    where IDAAS_ID = #{idaasId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.alidaas.AlidaasSet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update alidaas_set
    set APP_ID = #{appId,jdbcType=VARCHAR},
      APP_NAME = #{appName,jdbcType=VARCHAR},
      IDAAS_BASE_URL = #{idaasBaseUrl,jdbcType=VARCHAR},
      API_KEY = #{apiKey,jdbcType=VARCHAR},
      API_SECRET = #{apiSecret,jdbcType=VARCHAR},
      OID = #{oid,jdbcType=VARCHAR}
    where IDAAS_ID = #{idaasId,jdbcType=INTEGER}
  </update>

  <select id="getAllSeting" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from alidaas_set
  </select>

  <select id="getAllSetingConmany" resultMap="ResultMapWithBLOBs" parameterType="map">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ${company}.alidaas_set
  </select>
</mapper>