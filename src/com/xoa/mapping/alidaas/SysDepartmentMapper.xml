<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.alidaas.SysDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.alidaas.SysDepartment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
    <result column="TEL_NO" property="telNo" jdbcType="VARCHAR" />
    <result column="FAX_NO" property="faxNo" jdbcType="VARCHAR" />
    <result column="DEPT_ADDRESS" property="deptAddress" jdbcType="VARCHAR" />
    <result column="DEPT_NO" property="deptNo" jdbcType="VARCHAR" />
    <result column="DEPT_PARENT" property="deptParent" jdbcType="INTEGER" />
    <result column="IS_ORG" property="isOrg" jdbcType="CHAR" />
    <result column="ORG_ADMIN" property="orgAdmin" jdbcType="VARCHAR" />
    <result column="DEPT_EMAIL_AUDITS_IDS" property="deptEmailAuditsIds" jdbcType="VARCHAR" />
    <result column="WEIXIN_DEPT_ID" property="weixinDeptId" jdbcType="VARCHAR" />
    <result column="DINGDING_DEPT_ID" property="dingdingDeptId" jdbcType="VARCHAR" />
    <result column="G_DEPT" property="gDept" javaType="java.lang.Integer" />
    <result column="ClASSIFY_ORG" property="classifyOrg" jdbcType="INTEGER" />
    <result column="ClASSIFY_ORG_ADMIN" property="classifyOrgAdmin" jdbcType="VARCHAR" />
    <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
    <result column="SMS_GATE_ACCOUNT" property="smsGateAccount" jdbcType="VARCHAR" />
    <result column="SMS_GATE_PASSWORD" property="smsGatePassword" jdbcType="VARCHAR" />
    <result column="WELINK_DEPT" property="welinkDept" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.alidaas.SysDepartmentWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="MANAGER" property="manager" jdbcType="LONGVARCHAR" />
    <result column="ASSISTANT_ID" property="assistantId" jdbcType="LONGVARCHAR" />
    <result column="LEADER1" property="leader1" jdbcType="LONGVARCHAR" />
    <result column="LEADER2" property="leader2" jdbcType="LONGVARCHAR" />
    <result column="DEPT_FUNC" property="deptFunc" jdbcType="LONGVARCHAR" />
  </resultMap>

<!--  <resultMap id="IDaasSynDeptMap" type="" >-->
<!--    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />-->
<!--    <result column="ORGANIZATION_UUID" property="organizationUuid" jdbcType="VARCHAR" />-->
<!--  </resultMap>-->
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DEPT_ID, DEPT_NAME, TEL_NO, FAX_NO, DEPT_ADDRESS, DEPT_NO, DEPT_PARENT, IS_ORG, ORG_ADMIN,
    DEPT_EMAIL_AUDITS_IDS, WEIXIN_DEPT_ID, DINGDING_DEPT_ID, G_DEPT, ClASSIFY_ORG, ClASSIFY_ORG_ADMIN,
    DEPT_CODE, SMS_GATE_ACCOUNT, SMS_GATE_PASSWORD, WELINK_DEPT
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MANAGER, ASSISTANT_ID, LEADER1, LEADER2, DEPT_FUNC
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.alidaas.SysDepartmentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.alidaas.SysDepartmentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from department
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from department
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.alidaas.SysDepartmentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" useGeneratedKeys="true" keyColumn="DEPT_ID" keyProperty="deptId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department (DEPT_ID, DEPT_NAME, TEL_NO,
    FAX_NO, DEPT_ADDRESS, DEPT_NO,
    DEPT_PARENT, IS_ORG, ORG_ADMIN,
    DEPT_EMAIL_AUDITS_IDS, WEIXIN_DEPT_ID, DINGDING_DEPT_ID,
    G_DEPT, ClASSIFY_ORG, ClASSIFY_ORG_ADMIN,
    DEPT_CODE, SMS_GATE_ACCOUNT, SMS_GATE_PASSWORD,
    WELINK_DEPT, MANAGER, ASSISTANT_ID,
    LEADER1, LEADER2, DEPT_FUNC
    )
    values (#{deptId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{telNo,jdbcType=VARCHAR},
    #{faxNo,jdbcType=VARCHAR}, #{deptAddress,jdbcType=VARCHAR}, #{deptNo,jdbcType=VARCHAR},
    #{deptParent,jdbcType=INTEGER}, #{isOrg,jdbcType=CHAR}, #{orgAdmin,jdbcType=VARCHAR},
    #{deptEmailAuditsIds,jdbcType=VARCHAR}, #{weixinDeptId,jdbcType=VARCHAR}, #{dingdingDeptId,jdbcType=VARCHAR},
    #{gDept,jdbcType=TINYINT}, #{classifyOrg,jdbcType=INTEGER}, #{classifyOrgAdmin,jdbcType=VARCHAR},
    #{deptCode,jdbcType=VARCHAR}, #{smsGateAccount,jdbcType=VARCHAR}, #{smsGatePassword,jdbcType=VARCHAR},
    #{welinkDept,jdbcType=VARCHAR}, #{manager,jdbcType=LONGVARCHAR}, #{assistantId,jdbcType=LONGVARCHAR},
    #{leader1,jdbcType=LONGVARCHAR}, #{leader2,jdbcType=LONGVARCHAR}, #{deptFunc,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" useGeneratedKeys="true" keyColumn="DEPT_ID" keyProperty="deptId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="deptName != null" >
        DEPT_NAME,
      </if>
      <if test="telNo != null" >
        TEL_NO,
      </if>
      <if test="faxNo != null" >
        FAX_NO,
      </if>
      <if test="deptAddress != null" >
        DEPT_ADDRESS,
      </if>
      <if test="deptNo != null" >
        DEPT_NO,
      </if>
      <if test="deptParent != null" >
        DEPT_PARENT,
      </if>
      <if test="isOrg != null" >
        IS_ORG,
      </if>
      <if test="orgAdmin != null" >
        ORG_ADMIN,
      </if>
      <if test="deptEmailAuditsIds != null" >
        DEPT_EMAIL_AUDITS_IDS,
      </if>
      <if test="weixinDeptId != null" >
        WEIXIN_DEPT_ID,
      </if>
      <if test="dingdingDeptId != null" >
        DINGDING_DEPT_ID,
      </if>
      <if test="gDept != null" >
        G_DEPT,
      </if>
      <if test="classifyOrg != null" >
        ClASSIFY_ORG,
      </if>
      <if test="classifyOrgAdmin != null" >
        ClASSIFY_ORG_ADMIN,
      </if>
      <if test="deptCode != null" >
        DEPT_CODE,
      </if>
      <if test="smsGateAccount != null" >
        SMS_GATE_ACCOUNT,
      </if>
      <if test="smsGatePassword != null" >
        SMS_GATE_PASSWORD,
      </if>
      <if test="welinkDept != null" >
        WELINK_DEPT,
      </if>
      <if test="manager != null" >
        MANAGER,
      </if>
      <if test="assistantId != null" >
        ASSISTANT_ID,
      </if>
      <if test="leader1 != null" >
        LEADER1,
      </if>
      <if test="leader2 != null" >
        LEADER2,
      </if>
      <if test="deptFunc != null" >
        DEPT_FUNC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null" >
        #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="faxNo != null" >
        #{faxNo,jdbcType=VARCHAR},
      </if>
      <if test="deptAddress != null" >
        #{deptAddress,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptParent != null" >
        #{deptParent,jdbcType=INTEGER},
      </if>
      <if test="isOrg != null" >
        #{isOrg,jdbcType=CHAR},
      </if>
      <if test="orgAdmin != null" >
        #{orgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptEmailAuditsIds != null" >
        #{deptEmailAuditsIds,jdbcType=VARCHAR},
      </if>
      <if test="weixinDeptId != null" >
        #{weixinDeptId,jdbcType=VARCHAR},
      </if>
      <if test="dingdingDeptId != null" >
        #{dingdingDeptId,jdbcType=VARCHAR},
      </if>
      <if test="gDept != null" >
        #{gDept,jdbcType=TINYINT},
      </if>
      <if test="classifyOrg != null" >
        #{classifyOrg,jdbcType=INTEGER},
      </if>
      <if test="classifyOrgAdmin != null" >
        #{classifyOrgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="smsGateAccount != null" >
        #{smsGateAccount,jdbcType=VARCHAR},
      </if>
      <if test="smsGatePassword != null" >
        #{smsGatePassword,jdbcType=VARCHAR},
      </if>
      <if test="welinkDept != null" >
        #{welinkDept,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=LONGVARCHAR},
      </if>
      <if test="assistantId != null" >
        #{assistantId,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader1 != null" >
        #{leader1,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader2 != null" >
        #{leader2,jdbcType=LONGVARCHAR},
      </if>
      <if test="deptFunc != null" >
        #{deptFunc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.alidaas.SysDepartmentExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    <set >
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null" >
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.telNo != null" >
        TEL_NO = #{record.telNo,jdbcType=VARCHAR},
      </if>
      <if test="record.faxNo != null" >
        FAX_NO = #{record.faxNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deptAddress != null" >
        DEPT_ADDRESS = #{record.deptAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.deptNo != null" >
        DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deptParent != null" >
        DEPT_PARENT = #{record.deptParent,jdbcType=INTEGER},
      </if>
      <if test="record.isOrg != null" >
        IS_ORG = #{record.isOrg,jdbcType=CHAR},
      </if>
      <if test="record.orgAdmin != null" >
        ORG_ADMIN = #{record.orgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.deptEmailAuditsIds != null" >
        DEPT_EMAIL_AUDITS_IDS = #{record.deptEmailAuditsIds,jdbcType=VARCHAR},
      </if>
      <if test="record.weixinDeptId != null" >
        WEIXIN_DEPT_ID = #{record.weixinDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.dingdingDeptId != null" >
        DINGDING_DEPT_ID = #{record.dingdingDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.gDept != null" >
        G_DEPT = #{record.gDept,jdbcType=TINYINT},
      </if>
      <if test="record.classifyOrg != null" >
        ClASSIFY_ORG = #{record.classifyOrg,jdbcType=INTEGER},
      </if>
      <if test="record.classifyOrgAdmin != null" >
        ClASSIFY_ORG_ADMIN = #{record.classifyOrgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCode != null" >
        DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.smsGateAccount != null" >
        SMS_GATE_ACCOUNT = #{record.smsGateAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.smsGatePassword != null" >
        SMS_GATE_PASSWORD = #{record.smsGatePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.welinkDept != null" >
        WELINK_DEPT = #{record.welinkDept,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null" >
        MANAGER = #{record.manager,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.assistantId != null" >
        ASSISTANT_ID = #{record.assistantId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.leader1 != null" >
        LEADER1 = #{record.leader1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.leader2 != null" >
        LEADER2 = #{record.leader2,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.deptFunc != null" >
        DEPT_FUNC = #{record.deptFunc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set DEPT_ID = #{record.deptId,jdbcType=INTEGER},
    DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
    TEL_NO = #{record.telNo,jdbcType=VARCHAR},
    FAX_NO = #{record.faxNo,jdbcType=VARCHAR},
    DEPT_ADDRESS = #{record.deptAddress,jdbcType=VARCHAR},
    DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
    DEPT_PARENT = #{record.deptParent,jdbcType=INTEGER},
    IS_ORG = #{record.isOrg,jdbcType=CHAR},
    ORG_ADMIN = #{record.orgAdmin,jdbcType=VARCHAR},
    DEPT_EMAIL_AUDITS_IDS = #{record.deptEmailAuditsIds,jdbcType=VARCHAR},
    WEIXIN_DEPT_ID = #{record.weixinDeptId,jdbcType=VARCHAR},
    DINGDING_DEPT_ID = #{record.dingdingDeptId,jdbcType=VARCHAR},
    G_DEPT = #{record.gDept,jdbcType=TINYINT},
    ClASSIFY_ORG = #{record.classifyOrg,jdbcType=INTEGER},
    ClASSIFY_ORG_ADMIN = #{record.classifyOrgAdmin,jdbcType=VARCHAR},
    DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
    SMS_GATE_ACCOUNT = #{record.smsGateAccount,jdbcType=VARCHAR},
    SMS_GATE_PASSWORD = #{record.smsGatePassword,jdbcType=VARCHAR},
    WELINK_DEPT = #{record.welinkDept,jdbcType=VARCHAR},
    MANAGER = #{record.manager,jdbcType=LONGVARCHAR},
    ASSISTANT_ID = #{record.assistantId,jdbcType=LONGVARCHAR},
    LEADER1 = #{record.leader1,jdbcType=LONGVARCHAR},
    LEADER2 = #{record.leader2,jdbcType=LONGVARCHAR},
    DEPT_FUNC = #{record.deptFunc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set DEPT_ID = #{record.deptId,jdbcType=INTEGER},
    DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
    TEL_NO = #{record.telNo,jdbcType=VARCHAR},
    FAX_NO = #{record.faxNo,jdbcType=VARCHAR},
    DEPT_ADDRESS = #{record.deptAddress,jdbcType=VARCHAR},
    DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
    DEPT_PARENT = #{record.deptParent,jdbcType=INTEGER},
    IS_ORG = #{record.isOrg,jdbcType=CHAR},
    ORG_ADMIN = #{record.orgAdmin,jdbcType=VARCHAR},
    DEPT_EMAIL_AUDITS_IDS = #{record.deptEmailAuditsIds,jdbcType=VARCHAR},
    WEIXIN_DEPT_ID = #{record.weixinDeptId,jdbcType=VARCHAR},
    DINGDING_DEPT_ID = #{record.dingdingDeptId,jdbcType=VARCHAR},
    G_DEPT = #{record.gDept,jdbcType=TINYINT},
    ClASSIFY_ORG = #{record.classifyOrg,jdbcType=INTEGER},
    ClASSIFY_ORG_ADMIN = #{record.classifyOrgAdmin,jdbcType=VARCHAR},
    DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
    SMS_GATE_ACCOUNT = #{record.smsGateAccount,jdbcType=VARCHAR},
    SMS_GATE_PASSWORD = #{record.smsGatePassword,jdbcType=VARCHAR},
    WELINK_DEPT = #{record.welinkDept,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    <set >
      <if test="deptName != null" >
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null" >
        TEL_NO = #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="faxNo != null" >
        FAX_NO = #{faxNo,jdbcType=VARCHAR},
      </if>
      <if test="deptAddress != null" >
        DEPT_ADDRESS = #{deptAddress,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptParent != null" >
        DEPT_PARENT = #{deptParent,jdbcType=INTEGER},
      </if>
      <if test="isOrg != null" >
        IS_ORG = #{isOrg,jdbcType=CHAR},
      </if>
      <if test="orgAdmin != null" >
        ORG_ADMIN = #{orgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptEmailAuditsIds != null" >
        DEPT_EMAIL_AUDITS_IDS = #{deptEmailAuditsIds,jdbcType=VARCHAR},
      </if>
      <if test="weixinDeptId != null" >
        WEIXIN_DEPT_ID = #{weixinDeptId,jdbcType=VARCHAR},
      </if>
      <if test="dingdingDeptId != null" >
        DINGDING_DEPT_ID = #{dingdingDeptId,jdbcType=VARCHAR},
      </if>
      <if test="gDept != null" >
        G_DEPT = #{gDept,jdbcType=TINYINT},
      </if>
      <if test="classifyOrg != null" >
        ClASSIFY_ORG = #{classifyOrg,jdbcType=INTEGER},
      </if>
      <if test="classifyOrgAdmin != null" >
        ClASSIFY_ORG_ADMIN = #{classifyOrgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="smsGateAccount != null" >
        SMS_GATE_ACCOUNT = #{smsGateAccount,jdbcType=VARCHAR},
      </if>
      <if test="smsGatePassword != null" >
        SMS_GATE_PASSWORD = #{smsGatePassword,jdbcType=VARCHAR},
      </if>
      <if test="welinkDept != null" >
        WELINK_DEPT = #{welinkDept,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        MANAGER = #{manager,jdbcType=LONGVARCHAR},
      </if>
      <if test="assistantId != null" >
        ASSISTANT_ID = #{assistantId,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader1 != null" >
        LEADER1 = #{leader1,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader2 != null" >
        LEADER2 = #{leader2,jdbcType=LONGVARCHAR},
      </if>
      <if test="deptFunc != null" >
        DEPT_FUNC = #{deptFunc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set DEPT_NAME = #{deptName,jdbcType=VARCHAR},
    TEL_NO = #{telNo,jdbcType=VARCHAR},
    FAX_NO = #{faxNo,jdbcType=VARCHAR},
    DEPT_ADDRESS = #{deptAddress,jdbcType=VARCHAR},
    DEPT_NO = #{deptNo,jdbcType=VARCHAR},
    DEPT_PARENT = #{deptParent,jdbcType=INTEGER},
    IS_ORG = #{isOrg,jdbcType=CHAR},
    ORG_ADMIN = #{orgAdmin,jdbcType=VARCHAR},
    DEPT_EMAIL_AUDITS_IDS = #{deptEmailAuditsIds,jdbcType=VARCHAR},
    WEIXIN_DEPT_ID = #{weixinDeptId,jdbcType=VARCHAR},
    DINGDING_DEPT_ID = #{dingdingDeptId,jdbcType=VARCHAR},
    G_DEPT = #{gDept,jdbcType=TINYINT},
    ClASSIFY_ORG = #{classifyOrg,jdbcType=INTEGER},
    ClASSIFY_ORG_ADMIN = #{classifyOrgAdmin,jdbcType=VARCHAR},
    DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
    SMS_GATE_ACCOUNT = #{smsGateAccount,jdbcType=VARCHAR},
    SMS_GATE_PASSWORD = #{smsGatePassword,jdbcType=VARCHAR},
    WELINK_DEPT = #{welinkDept,jdbcType=VARCHAR},
    MANAGER = #{manager,jdbcType=LONGVARCHAR},
    ASSISTANT_ID = #{assistantId,jdbcType=LONGVARCHAR},
    LEADER1 = #{leader1,jdbcType=LONGVARCHAR},
    LEADER2 = #{leader2,jdbcType=LONGVARCHAR},
    DEPT_FUNC = #{deptFunc,jdbcType=LONGVARCHAR}
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.alidaas.SysDepartment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set DEPT_NAME = #{deptName,jdbcType=VARCHAR},
    TEL_NO = #{telNo,jdbcType=VARCHAR},
    FAX_NO = #{faxNo,jdbcType=VARCHAR},
    DEPT_ADDRESS = #{deptAddress,jdbcType=VARCHAR},
    DEPT_NO = #{deptNo,jdbcType=VARCHAR},
    DEPT_PARENT = #{deptParent,jdbcType=INTEGER},
    IS_ORG = #{isOrg,jdbcType=CHAR},
    ORG_ADMIN = #{orgAdmin,jdbcType=VARCHAR},
    DEPT_EMAIL_AUDITS_IDS = #{deptEmailAuditsIds,jdbcType=VARCHAR},
    WEIXIN_DEPT_ID = #{weixinDeptId,jdbcType=VARCHAR},
    DINGDING_DEPT_ID = #{dingdingDeptId,jdbcType=VARCHAR},
    G_DEPT = #{gDept,jdbcType=TINYINT},
    ClASSIFY_ORG = #{classifyOrg,jdbcType=INTEGER},
    ClASSIFY_ORG_ADMIN = #{classifyOrgAdmin,jdbcType=VARCHAR},
    DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
    SMS_GATE_ACCOUNT = #{smsGateAccount,jdbcType=VARCHAR},
    SMS_GATE_PASSWORD = #{smsGatePassword,jdbcType=VARCHAR},
    WELINK_DEPT = #{welinkDept,jdbcType=VARCHAR}
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </update>
  <insert id="insertSelectiveCompany" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" useGeneratedKeys="true" keyColumn="DEPT_ID" keyProperty="deptId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ${company}.department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="deptName != null" >
        DEPT_NAME,
      </if>
      <if test="telNo != null" >
        TEL_NO,
      </if>
      <if test="faxNo != null" >
        FAX_NO,
      </if>
      <if test="deptAddress != null" >
        DEPT_ADDRESS,
      </if>
      <if test="deptNo != null" >
        DEPT_NO,
      </if>
      <if test="deptParent != null" >
        DEPT_PARENT,
      </if>
      <if test="isOrg != null" >
        IS_ORG,
      </if>
      <if test="orgAdmin != null" >
        ORG_ADMIN,
      </if>
      <if test="deptEmailAuditsIds != null" >
        DEPT_EMAIL_AUDITS_IDS,
      </if>
      <if test="weixinDeptId != null" >
        WEIXIN_DEPT_ID,
      </if>
      <if test="dingdingDeptId != null" >
        DINGDING_DEPT_ID,
      </if>
      <if test="gDept != null" >
        G_DEPT,
      </if>
      <if test="classifyOrg != null" >
        ClASSIFY_ORG,
      </if>
      <if test="classifyOrgAdmin != null" >
        ClASSIFY_ORG_ADMIN,
      </if>
      <if test="deptCode != null" >
        DEPT_CODE,
      </if>
      <if test="smsGateAccount != null" >
        SMS_GATE_ACCOUNT,
      </if>
      <if test="smsGatePassword != null" >
        SMS_GATE_PASSWORD,
      </if>
      <if test="welinkDept != null" >
        WELINK_DEPT,
      </if>
      <if test="manager != null" >
        MANAGER,
      </if>
      <if test="assistantId != null" >
        ASSISTANT_ID,
      </if>
      <if test="leader1 != null" >
        LEADER1,
      </if>
      <if test="leader2 != null" >
        LEADER2,
      </if>
      <if test="deptFunc != null" >
        DEPT_FUNC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null" >
        #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="faxNo != null" >
        #{faxNo,jdbcType=VARCHAR},
      </if>
      <if test="deptAddress != null" >
        #{deptAddress,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptParent != null" >
        #{deptParent,jdbcType=INTEGER},
      </if>
      <if test="isOrg != null" >
        #{isOrg,jdbcType=CHAR},
      </if>
      <if test="orgAdmin != null" >
        #{orgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptEmailAuditsIds != null" >
        #{deptEmailAuditsIds,jdbcType=VARCHAR},
      </if>
      <if test="weixinDeptId != null" >
        #{weixinDeptId,jdbcType=VARCHAR},
      </if>
      <if test="dingdingDeptId != null" >
        #{dingdingDeptId,jdbcType=VARCHAR},
      </if>
      <if test="gDept != null" >
        #{gDept,jdbcType=TINYINT},
      </if>
      <if test="classifyOrg != null" >
        #{classifyOrg,jdbcType=INTEGER},
      </if>
      <if test="classifyOrgAdmin != null" >
        #{classifyOrgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="smsGateAccount != null" >
        #{smsGateAccount,jdbcType=VARCHAR},
      </if>
      <if test="smsGatePassword != null" >
        #{smsGatePassword,jdbcType=VARCHAR},
      </if>
      <if test="welinkDept != null" >
        #{welinkDept,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=LONGVARCHAR},
      </if>
      <if test="assistantId != null" >
        #{assistantId,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader1 != null" >
        #{leader1,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader2 != null" >
        #{leader2,jdbcType=LONGVARCHAR},
      </if>
      <if test="deptFunc != null" >
        #{deptFunc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <delete id="deleteByPrimaryKeyCompany" parameterType="map" >
    delete from ${company}.department
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKeySelectiveCompany" parameterType="com.xoa.model.alidaas.SysDepartmentWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ${company}.department
    <set >
      <if test="deptName != null" >
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null" >
        TEL_NO = #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="faxNo != null" >
        FAX_NO = #{faxNo,jdbcType=VARCHAR},
      </if>
      <if test="deptAddress != null" >
        DEPT_ADDRESS = #{deptAddress,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="deptParent != null" >
        DEPT_PARENT = #{deptParent,jdbcType=INTEGER},
      </if>
      <if test="isOrg != null" >
        IS_ORG = #{isOrg,jdbcType=CHAR},
      </if>
      <if test="orgAdmin != null" >
        ORG_ADMIN = #{orgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptEmailAuditsIds != null" >
        DEPT_EMAIL_AUDITS_IDS = #{deptEmailAuditsIds,jdbcType=VARCHAR},
      </if>
      <if test="weixinDeptId != null" >
        WEIXIN_DEPT_ID = #{weixinDeptId,jdbcType=VARCHAR},
      </if>
      <if test="dingdingDeptId != null and dingdingDeptId != '' " >
        DINGDING_DEPT_ID = #{dingdingDeptId,jdbcType=VARCHAR},
      </if>
      <if test="gDept != null" >
        G_DEPT = #{gDept,jdbcType=TINYINT},
      </if>
      <if test="classifyOrg != null" >
        ClASSIFY_ORG = #{classifyOrg,jdbcType=INTEGER},
      </if>
      <if test="classifyOrgAdmin != null" >
        ClASSIFY_ORG_ADMIN = #{classifyOrgAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="smsGateAccount != null" >
        SMS_GATE_ACCOUNT = #{smsGateAccount,jdbcType=VARCHAR},
      </if>
      <if test="smsGatePassword != null" >
        SMS_GATE_PASSWORD = #{smsGatePassword,jdbcType=VARCHAR},
      </if>
      <if test="welinkDept != null" >
        WELINK_DEPT = #{welinkDept,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        MANAGER = #{manager,jdbcType=LONGVARCHAR},
      </if>
      <if test="assistantId != null" >
        ASSISTANT_ID = #{assistantId,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader1 != null" >
        LEADER1 = #{leader1,jdbcType=LONGVARCHAR},
      </if>
      <if test="leader2 != null" >
        LEADER2 = #{leader2,jdbcType=LONGVARCHAR},
      </if>
      <if test="deptFunc != null" >
        DEPT_FUNC = #{deptFunc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where DEPT_ID = #{deptId,jdbcType=INTEGER}
  </update>

  <select id="getAllDepartmentByDeptParent" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from
    department d
    user_alidaas_dept ud
    where DEPT_PARENT = #{deptParent,jdbcType=INTEGER}
  </select>
</mapper>