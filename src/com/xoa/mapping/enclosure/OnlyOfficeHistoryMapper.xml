<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.enclosure.OnlyOfficeHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.enclosure.OnlyOfficeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="OID" property="oid" jdbcType="INTEGER" />
    <result column="AID" property="aid" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="HISTORY_KEY" property="historyKey" jdbcType="VARCHAR" />
    <result column="CREATED" property="created" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.enclosure.OnlyOfficeHistoryWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CHANGES_URL" property="changesUrl" jdbcType="LONGVARCHAR" />
    <result column="FILE_URL" property="fileUrl" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    OID, AID, USER_ID, USER_NAME, HISTORY_KEY, CREATED
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CHANGES_URL, FILE_URL
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from only_office_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from only_office_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from only_office_history
    where OID = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from only_office_history
    where OID = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from only_office_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into only_office_history (OID, AID, USER_ID, 
      USER_NAME, HISTORY_KEY, CREATED, 
      CHANGES_URL, FILE_URL)
    values (#{oid,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{historyKey,jdbcType=VARCHAR}, #{created,jdbcType=VARCHAR}, 
      #{changesUrl,jdbcType=LONGVARCHAR}, #{fileUrl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into only_office_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        OID,
      </if>
      <if test="aid != null" >
        AID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="historyKey != null" >
        HISTORY_KEY,
      </if>
      <if test="created != null" >
        CREATED,
      </if>
      <if test="changesUrl != null" >
        CHANGES_URL,
      </if>
      <if test="fileUrl != null" >
        FILE_URL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="historyKey != null" >
        #{historyKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="changesUrl != null" >
        #{changesUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from only_office_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    <set >
      <if test="record.oid != null" >
        OID = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null" >
        AID = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.historyKey != null" >
        HISTORY_KEY = #{record.historyKey,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        CREATED = #{record.created,jdbcType=VARCHAR},
      </if>
      <if test="record.changesUrl != null" >
        CHANGES_URL = #{record.changesUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.fileUrl != null" >
        FILE_URL = #{record.fileUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    set OID = #{record.oid,jdbcType=INTEGER},
      AID = #{record.aid,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      HISTORY_KEY = #{record.historyKey,jdbcType=VARCHAR},
      CREATED = #{record.created,jdbcType=VARCHAR},
      CHANGES_URL = #{record.changesUrl,jdbcType=LONGVARCHAR},
      FILE_URL = #{record.fileUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    set OID = #{record.oid,jdbcType=INTEGER},
      AID = #{record.aid,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      HISTORY_KEY = #{record.historyKey,jdbcType=VARCHAR},
      CREATED = #{record.created,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    <set >
      <if test="aid != null" >
        AID = #{aid,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="historyKey != null" >
        HISTORY_KEY = #{historyKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        CREATED = #{created,jdbcType=VARCHAR},
      </if>
      <if test="changesUrl != null" >
        CHANGES_URL = #{changesUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileUrl != null" >
        FILE_URL = #{fileUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where OID = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.enclosure.OnlyOfficeHistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    set AID = #{aid,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      HISTORY_KEY = #{historyKey,jdbcType=VARCHAR},
      CREATED = #{created,jdbcType=VARCHAR},
      CHANGES_URL = #{changesUrl,jdbcType=LONGVARCHAR},
      FILE_URL = #{fileUrl,jdbcType=LONGVARCHAR}
    where OID = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.enclosure.OnlyOfficeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update only_office_history
    set AID = #{aid,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      HISTORY_KEY = #{historyKey,jdbcType=VARCHAR},
      CREATED = #{created,jdbcType=VARCHAR}
    where OID = #{oid,jdbcType=INTEGER}
  </update>
</mapper>