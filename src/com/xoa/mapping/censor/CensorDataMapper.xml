<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.censor.CensorDataMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DATA_ID" property="dataId" jdbcType="INTEGER" />
    <result column="MODULE_CODE" property="moduleCode" jdbcType="VARCHAR" />
    <result column="CENSOR_FLAG" property="censorFlag" jdbcType="CHAR" />
    <result column="CHECK_USER" property="checkUser" jdbcType="VARCHAR" />
    <result column="CHECK_TIME" property="checkTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.censor.CensorData" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DATA_ID, MODULE_CODE, CENSOR_FLAG, CHECK_USER, CHECK_TIME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.censor.CensorDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.censor.CensorDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from censor_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_data
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_data
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.censor.CensorDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_data (DATA_ID, MODULE_CODE, CENSOR_FLAG, 
      CHECK_USER, CHECK_TIME, CONTENT
      )
    values (#{dataId,jdbcType=INTEGER}, #{moduleCode,jdbcType=VARCHAR}, #{censorFlag,jdbcType=CHAR}, 
      #{checkUser,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        DATA_ID,
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE,
      </if>
      <if test="censorFlag != null" >
        CENSOR_FLAG,
      </if>
      <if test="checkUser != null" >
        CHECK_USER,
      </if>
      <if test="checkTime != null" >
        CHECK_TIME,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=INTEGER},
      </if>
      <if test="moduleCode != null" >
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="censorFlag != null" >
        #{censorFlag,jdbcType=CHAR},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.censor.CensorDataExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from censor_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    <set >
      <if test="record.dataId != null" >
        DATA_ID = #{record.dataId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleCode != null" >
        MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.censorFlag != null" >
        CENSOR_FLAG = #{record.censorFlag,jdbcType=CHAR},
      </if>
      <if test="record.checkUser != null" >
        CHECK_USER = #{record.checkUser,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null" >
        CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    set DATA_ID = #{record.dataId,jdbcType=INTEGER},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      CENSOR_FLAG = #{record.censorFlag,jdbcType=CHAR},
      CHECK_USER = #{record.checkUser,jdbcType=VARCHAR},
      CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    set DATA_ID = #{record.dataId,jdbcType=INTEGER},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      CENSOR_FLAG = #{record.censorFlag,jdbcType=CHAR},
      CHECK_USER = #{record.checkUser,jdbcType=VARCHAR},
      CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    <set >
      <if test="moduleCode != null" >
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="censorFlag != null" >
        CENSOR_FLAG = #{censorFlag,jdbcType=CHAR},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    set MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      CENSOR_FLAG = #{censorFlag,jdbcType=CHAR},
      CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    set MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      CENSOR_FLAG = #{censorFlag,jdbcType=CHAR},
      CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP}
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </update>
  <insert id="addCensorData" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        DATA_ID,
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE,
      </if>
      <if test="censorFlag != null" >
        CENSOR_FLAG,
      </if>
      <if test="checkUser != null" >
        CHECK_USER,
      </if>
      <if test="checkTime != null" >
        CHECK_TIME,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=INTEGER},
      </if>
      <if test="moduleCode != null" >
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="censorFlag != null" >
        #{censorFlag,jdbcType=CHAR},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <delete id="delCensorData" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_data
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </delete>
  <update id="updateCensorData" parameterType="com.xoa.model.censor.CensorData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_data
    <set >
      <if test="moduleCode != null" >
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="censorFlag != null" >
        CENSOR_FLAG = #{censorFlag,jdbcType=CHAR},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </update>
  <select id="getCensorDataInforById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_data
    where DATA_ID = #{dataId,jdbcType=INTEGER}
  </select>
  <select id="getCensorData" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_data
  </select>
  <select id="countNum"  resultType="Integer">
    SELECT
    count(*)
    FROM
    censor_data
  </select>
</mapper>