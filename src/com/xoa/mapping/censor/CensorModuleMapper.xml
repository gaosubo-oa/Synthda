<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.censor.CensorModuleMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="MODULE_ID" property="moduleId" jdbcType="INTEGER" />
    <result column="MODULE_CODE" property="moduleCode" jdbcType="VARCHAR" />
    <result column="FUNC_NAME" property="moduleName" jdbcType="VARCHAR" />
    <result column="USE_FLAG" property="useFlag" jdbcType="CHAR" />
    <result column="SMS_REMIND" property="smsRemind" jdbcType="VARCHAR" />
    <result column="SMS2_REMIND" property="sms2Remind" jdbcType="VARCHAR" />
    <result column="BANNED_HINT" property="bannedHint" jdbcType="VARCHAR" />
    <result column="MOD_HINT" property="modHint" jdbcType="VARCHAR" />
    <result column="FILTER_HINT" property="filterHint" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.censor.CensorModule" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CHECK_USER" property="checkUser" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MODULE_ID, MODULE_CODE, USE_FLAG, SMS_REMIND, SMS2_REMIND, BANNED_HINT, MOD_HINT, 
    FILTER_HINT
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CHECK_USER
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.censor.CensorModuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.censor.CensorModuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from censor_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from censor_module
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_module
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.censor.CensorModuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_module (MODULE_ID, MODULE_CODE, USE_FLAG, 
      SMS_REMIND, SMS2_REMIND, BANNED_HINT, 
      MOD_HINT, FILTER_HINT, CHECK_USER
      )
    values (#{moduleId,jdbcType=INTEGER}, #{moduleCode,jdbcType=VARCHAR}, #{useFlag,jdbcType=CHAR}, 
      #{smsRemind,jdbcType=VARCHAR}, #{sms2Remind,jdbcType=VARCHAR}, #{bannedHint,jdbcType=VARCHAR}, 
      #{modHint,jdbcType=VARCHAR}, #{filterHint,jdbcType=VARCHAR}, #{checkUser,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        MODULE_ID,
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE,
      </if>
      <if test="useFlag != null" >
        USE_FLAG,
      </if>
      <if test="smsRemind != null" >
        SMS_REMIND,
      </if>
      <if test="sms2Remind != null" >
        SMS2_REMIND,
      </if>
      <if test="bannedHint != null" >
        BANNED_HINT,
      </if>
      <if test="modHint != null" >
        MOD_HINT,
      </if>
      <if test="filterHint != null" >
        FILTER_HINT,
      </if>
      <if test="checkUser != null" >
        CHECK_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleCode != null" >
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        #{useFlag,jdbcType=CHAR},
      </if>
      <if test="smsRemind != null" >
        #{smsRemind,jdbcType=VARCHAR},
      </if>
      <if test="sms2Remind != null" >
        #{sms2Remind,jdbcType=VARCHAR},
      </if>
      <if test="bannedHint != null" >
        #{bannedHint,jdbcType=VARCHAR},
      </if>
      <if test="modHint != null" >
        #{modHint,jdbcType=VARCHAR},
      </if>
      <if test="filterHint != null" >
        #{filterHint,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.censor.CensorModuleExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from censor_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    <set >
      <if test="record.moduleId != null" >
        MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleCode != null" >
        MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.useFlag != null" >
        USE_FLAG = #{record.useFlag,jdbcType=CHAR},
      </if>
      <if test="record.smsRemind != null" >
        SMS_REMIND = #{record.smsRemind,jdbcType=VARCHAR},
      </if>
      <if test="record.sms2Remind != null" >
        SMS2_REMIND = #{record.sms2Remind,jdbcType=VARCHAR},
      </if>
      <if test="record.bannedHint != null" >
        BANNED_HINT = #{record.bannedHint,jdbcType=VARCHAR},
      </if>
      <if test="record.modHint != null" >
        MOD_HINT = #{record.modHint,jdbcType=VARCHAR},
      </if>
      <if test="record.filterHint != null" >
        FILTER_HINT = #{record.filterHint,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUser != null" >
        CHECK_USER = #{record.checkUser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    set MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      USE_FLAG = #{record.useFlag,jdbcType=CHAR},
      SMS_REMIND = #{record.smsRemind,jdbcType=VARCHAR},
      SMS2_REMIND = #{record.sms2Remind,jdbcType=VARCHAR},
      BANNED_HINT = #{record.bannedHint,jdbcType=VARCHAR},
      MOD_HINT = #{record.modHint,jdbcType=VARCHAR},
      FILTER_HINT = #{record.filterHint,jdbcType=VARCHAR},
      CHECK_USER = #{record.checkUser,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    set MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      USE_FLAG = #{record.useFlag,jdbcType=CHAR},
      SMS_REMIND = #{record.smsRemind,jdbcType=VARCHAR},
      SMS2_REMIND = #{record.sms2Remind,jdbcType=VARCHAR},
      BANNED_HINT = #{record.bannedHint,jdbcType=VARCHAR},
      MOD_HINT = #{record.modHint,jdbcType=VARCHAR},
      FILTER_HINT = #{record.filterHint,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    <set >
      <if test="moduleCode != null" >
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        USE_FLAG = #{useFlag,jdbcType=CHAR},
      </if>
      <if test="smsRemind != null" >
        SMS_REMIND = #{smsRemind,jdbcType=VARCHAR},
      </if>
      <if test="sms2Remind != null" >
        SMS2_REMIND = #{sms2Remind,jdbcType=VARCHAR},
      </if>
      <if test="bannedHint != null" >
        BANNED_HINT = #{bannedHint,jdbcType=VARCHAR},
      </if>
      <if test="modHint != null" >
        MOD_HINT = #{modHint,jdbcType=VARCHAR},
      </if>
      <if test="filterHint != null" >
        FILTER_HINT = #{filterHint,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    set MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      USE_FLAG = #{useFlag,jdbcType=CHAR},
      SMS_REMIND = #{smsRemind,jdbcType=VARCHAR},
      SMS2_REMIND = #{sms2Remind,jdbcType=VARCHAR},
      BANNED_HINT = #{bannedHint,jdbcType=VARCHAR},
      MOD_HINT = #{modHint,jdbcType=VARCHAR},
      FILTER_HINT = #{filterHint,jdbcType=VARCHAR},
      CHECK_USER = #{checkUser,jdbcType=LONGVARCHAR}
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    set MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      USE_FLAG = #{useFlag,jdbcType=CHAR},
      SMS_REMIND = #{smsRemind,jdbcType=VARCHAR},
      SMS2_REMIND = #{sms2Remind,jdbcType=VARCHAR},
      BANNED_HINT = #{bannedHint,jdbcType=VARCHAR},
      MOD_HINT = #{modHint,jdbcType=VARCHAR},
      FILTER_HINT = #{filterHint,jdbcType=VARCHAR}
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </update>
  <insert id="addCensorModule" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        MODULE_ID,
      </if>
      <if test="moduleCode != null" >
        MODULE_CODE,
      </if>
      <if test="useFlag != null" >
        USE_FLAG,
      </if>
      <if test="smsRemind != null" >
        SMS_REMIND,
      </if>
      <if test="sms2Remind != null" >
        SMS2_REMIND,
      </if>
      <if test="bannedHint != null" >
        BANNED_HINT,
      </if>
      <if test="modHint != null" >
        MOD_HINT,
      </if>
      <if test="filterHint != null" >
        FILTER_HINT,
      </if>
      <if test="checkUser != null" >
        CHECK_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleCode != null" >
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        #{useFlag,jdbcType=CHAR},
      </if>
      <if test="smsRemind != null" >
        #{smsRemind,jdbcType=VARCHAR},
      </if>
      <if test="sms2Remind != null" >
        #{sms2Remind,jdbcType=VARCHAR},
      </if>
      <if test="bannedHint != null" >
        #{bannedHint,jdbcType=VARCHAR},
      </if>
      <if test="modHint != null" >
        #{modHint,jdbcType=VARCHAR},
      </if>
      <if test="filterHint != null" >
        #{filterHint,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <delete id="delCensorModule" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_module
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </delete>
  <update id="updateCensorModule" parameterType="com.xoa.model.censor.CensorModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_module
    <set >
      <if test="moduleCode != null" >
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        USE_FLAG = #{useFlag,jdbcType=CHAR},
      </if>
      <if test="smsRemind != null" >
        SMS_REMIND = #{smsRemind,jdbcType=VARCHAR},
      </if>
      <if test="sms2Remind != null" >
        SMS2_REMIND = #{sms2Remind,jdbcType=VARCHAR},
      </if>
      <if test="bannedHint != null" >
        BANNED_HINT = #{bannedHint,jdbcType=VARCHAR},
      </if>
      <if test="modHint != null" >
        MOD_HINT = #{modHint,jdbcType=VARCHAR},
      </if>
      <if test="filterHint != null" >
        FILTER_HINT = #{filterHint,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where MODULE_ID = #{moduleId,jdbcType=INTEGER}
  </update>
  <select id="getCensorModuleInforById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    mo.MODULE_ID, mo.MODULE_CODE, mo.USE_FLAG, mo.SMS_REMIND, mo.SMS2_REMIND, mo.BANNED_HINT, mo.MOD_HINT, mo.FILTER_HINT,mo.CHECK_USER,s.FUNC_NAME
    from censor_module mo
    JOIN sys_function s on s.MENU_ID=mo.MODULE_CODE
    where mo.MODULE_ID= #{moduleId,jdbcType=INTEGER}
  </select>
  <select id="getCensorModule" resultMap="ResultMapWithBLOBs" parameterType="map" >
    select
    mo.MODULE_ID, mo.MODULE_CODE, mo.USE_FLAG, mo.SMS_REMIND, mo.SMS2_REMIND, mo.BANNED_HINT, mo.MOD_HINT, mo.FILTER_HINT,mo.CHECK_USER,s.FUNC_NAME
    from censor_module mo
    JOIN sys_function s on s.MENU_ID=mo.MODULE_CODE
  </select>
  <select id="countNum"  resultType="Integer">
    SELECT
    count(*)
    FROM
    censor_words
  </select>

  <select id="getCenModuleByCode" resultMap="ResultMapWithBLOBs" parameterType="String" >
    select
    mo.MODULE_ID, mo.MODULE_CODE, mo.USE_FLAG, mo.SMS_REMIND, mo.SMS2_REMIND, mo.BANNED_HINT, mo.MOD_HINT, mo.FILTER_HINT,mo.CHECK_USER,s.FUNC_NAME
    from censor_module mo
    JOIN sys_function s on s.MENU_ID=mo.MODULE_CODE
    where mo.MODULE_CODE=#{moduleCode}
  </select>
</mapper>