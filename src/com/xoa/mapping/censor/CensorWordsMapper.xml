<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.censor.CensorWordsMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="WORD_ID" property="wordId" jdbcType="INTEGER" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
    <result column="FIND" property="find" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REPLACEMENT" property="replacement" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    WORD_ID, UID, FIND, REPLACEMENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.censor.CensorWordsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from censor_words
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from censor_words
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_words
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.censor.CensorWordsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_words
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_words (WORD_ID, UID, FIND, 
      REPLACEMENT)
    values (#{wordId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{find,jdbcType=VARCHAR}, 
      #{replacement,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_words
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wordId != null" >
        WORD_ID,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="find != null" >
        FIND,
      </if>
      <if test="replacement != null" >
        REPLACEMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wordId != null" >
        #{wordId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="find != null" >
        #{find,jdbcType=VARCHAR},
      </if>
      <if test="replacement != null" >
        #{replacement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.censor.CensorWordsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from censor_words
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_words
    <set >
      <if test="record.wordId != null" >
        WORD_ID = #{record.wordId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.find != null" >
        FIND = #{record.find,jdbcType=VARCHAR},
      </if>
      <if test="record.replacement != null" >
        REPLACEMENT = #{record.replacement,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_words
    set WORD_ID = #{record.wordId,jdbcType=INTEGER},
      UID = #{record.uid,jdbcType=INTEGER},
      FIND = #{record.find,jdbcType=VARCHAR},
      REPLACEMENT = #{record.replacement,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_words
    <set >
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="find != null" >
        FIND = #{find,jdbcType=VARCHAR},
      </if>
      <if test="replacement != null" >
        REPLACEMENT = #{replacement,jdbcType=VARCHAR},
      </if>
    </set>
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_words
    set UID = #{uid,jdbcType=INTEGER},
      FIND = #{find,jdbcType=VARCHAR},
      REPLACEMENT = #{replacement,jdbcType=VARCHAR}
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </update>
  <delete id="delCensorWordsById" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from censor_words
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </delete>
  <insert id="addCensorWords" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into censor_words
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wordId != null" >
        WORD_ID,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="find != null" >
        FIND,
      </if>
      <if test="replacement != null" >
        REPLACEMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wordId != null" >
        #{wordId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="find != null" >
        #{find,jdbcType=VARCHAR},
      </if>
      <if test="replacement != null" >
        #{replacement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateCensorWords" parameterType="com.xoa.model.censor.CensorWords" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update censor_words
    <set >
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="find != null" >
        FIND = #{find,jdbcType=VARCHAR},
      </if>
      <if test="replacement != null" >
        REPLACEMENT = #{replacement,jdbcType=VARCHAR},
      </if>
    </set>
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </update>
  <select id="getCensorWordsInforById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from censor_words
    where WORD_ID = #{wordId,jdbcType=INTEGER}
  </select>
  <select id="getCensorWords" resultMap="BaseResultMap" parameterType="map" >
    select
    word.WORD_ID,word.UID, word.FIND, word.REPLACEMENT,user.USER_NAME
    from censor_words word
    LEFT JOIN user ON word.UID=user.UID
    <where>
      <if test="censorWords.find!=null and censorWords.find!=''">
        and word.FIND=#{censorWords.find}
      </if>
      <if test="censorWords.replacement!=null and censorWords.replacement!=''">
        and word.REPLACEMENT=#{censorWords.replacement}
      </if>
    </where>
  </select>

  <select id="getCensorWords" resultMap="BaseResultMap" parameterType="map" databaseId="dm" >
    select
    word.WORD_ID,word."UID", word.FIND, word.REPLACEMENT,u.USER_NAME
    from censor_words word
    LEFT JOIN "user" u ON word."UID"=u."UID"
    <where>
      <if test="censorWords.find!=null and censorWords.find!=''">
        and word.FIND=#{censorWords.find}
      </if>
      <if test="censorWords.replacement!=null and censorWords.replacement!=''">
        and word.REPLACEMENT=#{censorWords.replacement}
      </if>
    </where>
  </select>

  <select id="getCensorWords" resultMap="BaseResultMap" parameterType="map" databaseId="kingbase" >
    select
    word.WORD_ID,word.UID, word.FIND, word.REPLACEMENT,u.USER_NAME
    from censor_words word
    LEFT JOIN "user" u ON word.UID=u.UID
    <where>
      <if test="censorWords.find!=null and censorWords.find!=''">
        and word.FIND=#{censorWords.find}
      </if>
      <if test="censorWords.replacement!=null and censorWords.replacement!=''">
        and word.REPLACEMENT=#{censorWords.replacement}
      </if>
    </where>
  </select>

  <select id="getcensorWordsById" parameterType="map" resultMap="BaseResultMap">
    SELECT
    *
    FROM
    censor_words
    WHERE
    1=1
    <if test="find != null and find !=''">
      AND censor_words.FIND = #{find}
    </if>
  </select>
  <select id="countNum"  resultType="Integer">
    SELECT
    count(WORD_ID)
    FROM
    censor_words
  </select>

  <delete id="batchDel">
      delete FROM censor_words where WORD_ID IN
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
</mapper>