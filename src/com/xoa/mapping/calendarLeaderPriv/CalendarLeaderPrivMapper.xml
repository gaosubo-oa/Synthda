<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.calendarLeaderPriv.CalendarLeaderPrivMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="priv_id" property="privId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv"
               extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="managers" property="managers" jdbcType="LONGVARCHAR"/>
        <result column="query_priv_users" property="queryPrivUsers" jdbcType="LONGVARCHAR"/>
        <result column="edit_priv_users" property="editPrivUsers" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        priv_id
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        managers, query_priv_users, edit_priv_users
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPrivExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from calendar_leader_priv
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPrivExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from calendar_leader_priv
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from calendar_leader_priv
        where priv_id = #{privId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from calendar_leader_priv
        where priv_id = #{privId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPrivExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from calendar_leader_priv
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into calendar_leader_priv (priv_id, managers, query_priv_users,
        edit_priv_users)
        values (#{privId,jdbcType=INTEGER}, #{managers,jdbcType=LONGVARCHAR}, #{queryPrivUsers,jdbcType=LONGVARCHAR},
        #{editPrivUsers,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into calendar_leader_priv
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="privId != null">
                priv_id,
            </if>
            <if test="managers != null">
                managers,
            </if>
            <if test="queryPrivUsers != null">
                query_priv_users,
            </if>
            <if test="editPrivUsers != null">
                edit_priv_users,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="privId != null">
                #{privId,jdbcType=INTEGER},
            </if>
            <if test="managers != null">
                #{managers,jdbcType=LONGVARCHAR},
            </if>
            <if test="queryPrivUsers != null">
                #{queryPrivUsers,jdbcType=LONGVARCHAR},
            </if>
            <if test="editPrivUsers != null">
                #{editPrivUsers,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPrivExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from calendar_leader_priv
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update calendar_leader_priv
        <set>
            <if test="record.privId != null">
                priv_id = #{record.privId,jdbcType=INTEGER},
            </if>
            <if test="record.managers != null">
                managers = #{record.managers,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.queryPrivUsers != null">
                query_priv_users = #{record.queryPrivUsers,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.editPrivUsers != null">
                edit_priv_users = #{record.editPrivUsers,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update calendar_leader_priv
        set priv_id = #{record.privId,jdbcType=INTEGER},
        managers = #{record.managers,jdbcType=LONGVARCHAR},
        query_priv_users = #{record.queryPrivUsers,jdbcType=LONGVARCHAR},
        edit_priv_users = #{record.editPrivUsers,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update calendar_leader_priv
        set priv_id = #{record.privId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update calendar_leader_priv
        <set>
            <if test="managers != null">
                managers = #{managers,jdbcType=LONGVARCHAR},
            </if>
            <if test="queryPrivUsers != null">
                query_priv_users = #{queryPrivUsers,jdbcType=LONGVARCHAR},
            </if>
            <if test="editPrivUsers != null">
                edit_priv_users = #{editPrivUsers,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where priv_id = #{privId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.calendarLeaderPriv.CalendarLeaderPriv">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update calendar_leader_priv
        set managers = #{managers,jdbcType=LONGVARCHAR},
        query_priv_users = #{queryPrivUsers,jdbcType=LONGVARCHAR},
        edit_priv_users = #{editPrivUsers,jdbcType=LONGVARCHAR}
        where priv_id = #{privId,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from calendar_leader_priv
        <where>
            <if test="managers != null">
                managers = #{managers,jdbcType=LONGVARCHAR}
            </if>
            <if test="queryPrivUsers != null">
                and query_priv_users = #{queryPrivUsers,jdbcType=LONGVARCHAR}
            </if>
            <if test="editPrivUsers != null">
                and edit_priv_users = #{editPrivUsers,jdbcType=LONGVARCHAR}
            </if>
            <if test="privId != null">
                and priv_id = #{privId,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectLeader" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from calendar_leader_priv
        where
        query_priv_users like concat('%,',#{userId},',%')
        or query_priv_users like concat(#{userId},',%')
        or edit_priv_users like concat('%,',#{userId},',%')
        or edit_priv_users like concat(#{userId},',%')
    </select>
    <select id="selectCalendarByManger" resultMap="ResultMapWithBLOBs" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from calendar_leader_priv
        where
        managers like concat('%,',#{userId},',%')
        or managers like concat(#{userId},',%')
    </select>
</mapper>