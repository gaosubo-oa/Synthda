<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.institution.InstitutionSortMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.institution.InstitutionSort" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="SORT_ID" property="sortId" jdbcType="INTEGER" />
        <result column="SORT_NO" property="sortNo" jdbcType="INTEGER" />
        <result column="SORT_NAME" property="sortName" jdbcType="VARCHAR" />
        <result column="SORT_PARENT" property="sortParent" jdbcType="INTEGER" />
        <result column="VIEW_USER_TYPE" property="viewUserType" jdbcType="VARCHAR" />
        <result column="VIEW_SCOPE" property="viewScope" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.institution.InstitutionSortWithBLOBs" extends="BaseResultMap" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="SORT_DESC" property="sortDesc" jdbcType="LONGVARCHAR" />
        <result column="BELONGTO_DEPTS" property="belongtoDepts" jdbcType="LONGVARCHAR" />
        <result column="VIEW_DEPTS" property="viewDepts" jdbcType="LONGVARCHAR" />
        <result column="VIEW_PRIVS" property="viewPrivs" jdbcType="LONGVARCHAR" />
        <result column="VIEW_USERS" property="viewUsers" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SORT_ID, SORT_NO, SORT_NAME, SORT_PARENT, VIEW_USER_TYPE, VIEW_SCOPE
    </sql>
    <sql id="Blob_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SORT_DESC, BELONGTO_DEPTS, VIEW_DEPTS, VIEW_PRIVS, VIEW_USERS
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.institution.InstitutionSortExample" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from institution_sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.institution.InstitutionSortExample" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from institution_sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from institution_sort
        where SORT_ID = #{sortId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from institution_sort
        where SORT_ID = #{sortId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xoa.model.institution.InstitutionSortExample" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from institution_sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.institution.InstitutionSortWithBLOBs" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into institution_sort (SORT_ID, SORT_NO, SORT_NAME,
        SORT_PARENT, VIEW_USER_TYPE, VIEW_SCOPE,
        SORT_DESC, BELONGTO_DEPTS, VIEW_DEPTS,
        VIEW_PRIVS, VIEW_USERS)
        values (#{sortId,jdbcType=INTEGER}, #{sortNo,jdbcType=INTEGER}, #{sortName,jdbcType=VARCHAR},
        #{sortParent,jdbcType=INTEGER}, #{viewUserType,jdbcType=VARCHAR}, #{viewScope,jdbcType=VARCHAR},
        #{sortDesc,jdbcType=LONGVARCHAR}, #{belongtoDepts,jdbcType=LONGVARCHAR}, #{viewDepts,jdbcType=LONGVARCHAR},
        #{viewPrivs,jdbcType=LONGVARCHAR}, #{viewUsers,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xoa.model.institution.InstitutionSortWithBLOBs" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into institution_sort
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="sortId != null" >
                SORT_ID,
            </if>
            <if test="sortNo != null" >
                SORT_NO,
            </if>
            <if test="sortName != null" >
                SORT_NAME,
            </if>
            <if test="sortParent != null" >
                SORT_PARENT,
            </if>
            <if test="viewUserType != null" >
                VIEW_USER_TYPE,
            </if>
            <if test="viewScope != null" >
                VIEW_SCOPE,
            </if>
            <if test="sortDesc != null" >
                SORT_DESC,
            </if>
            <if test="belongtoDepts != null" >
                BELONGTO_DEPTS,
            </if>
            <if test="viewDepts != null" >
                VIEW_DEPTS,
            </if>
            <if test="viewPrivs != null" >
                VIEW_PRIVS,
            </if>
            <if test="viewUsers != null" >
                VIEW_USERS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="sortId != null" >
                #{sortId,jdbcType=INTEGER},
            </if>
            <if test="sortNo != null" >
                #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="sortName != null" >
                #{sortName,jdbcType=VARCHAR},
            </if>
            <if test="sortParent != null" >
                #{sortParent,jdbcType=INTEGER},
            </if>
            <if test="viewUserType != null" >
                #{viewUserType,jdbcType=VARCHAR},
            </if>
            <if test="viewScope != null" >
                #{viewScope,jdbcType=VARCHAR},
            </if>
            <if test="sortDesc != null" >
                #{sortDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="belongtoDepts != null" >
                #{belongtoDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewDepts != null" >
                #{viewDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewPrivs != null" >
                #{viewPrivs,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewUsers != null" >
                #{viewUsers,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.institution.InstitutionSortExample" resultType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from institution_sort
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        <set >
            <if test="record.sortId != null" >
                SORT_ID = #{record.sortId,jdbcType=INTEGER},
            </if>
            <if test="record.sortNo != null" >
                SORT_NO = #{record.sortNo,jdbcType=INTEGER},
            </if>
            <if test="record.sortName != null" >
                SORT_NAME = #{record.sortName,jdbcType=VARCHAR},
            </if>
            <if test="record.sortParent != null" >
                SORT_PARENT = #{record.sortParent,jdbcType=INTEGER},
            </if>
            <if test="record.viewUserType != null" >
                VIEW_USER_TYPE = #{record.viewUserType,jdbcType=VARCHAR},
            </if>
            <if test="record.viewScope != null" >
                VIEW_SCOPE = #{record.viewScope,jdbcType=VARCHAR},
            </if>
            <if test="record.sortDesc != null" >
                SORT_DESC = #{record.sortDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.belongtoDepts != null" >
                BELONGTO_DEPTS = #{record.belongtoDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.viewDepts != null" >
                VIEW_DEPTS = #{record.viewDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.viewPrivs != null" >
                VIEW_PRIVS = #{record.viewPrivs,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.viewUsers != null" >
                VIEW_USERS = #{record.viewUsers,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        set SORT_ID = #{record.sortId,jdbcType=INTEGER},
        SORT_NO = #{record.sortNo,jdbcType=INTEGER},
        SORT_NAME = #{record.sortName,jdbcType=VARCHAR},
        SORT_PARENT = #{record.sortParent,jdbcType=INTEGER},
        VIEW_USER_TYPE = #{record.viewUserType,jdbcType=VARCHAR},
        VIEW_SCOPE = #{record.viewScope,jdbcType=VARCHAR},
        SORT_DESC = #{record.sortDesc,jdbcType=LONGVARCHAR},
        BELONGTO_DEPTS = #{record.belongtoDepts,jdbcType=LONGVARCHAR},
        VIEW_DEPTS = #{record.viewDepts,jdbcType=LONGVARCHAR},
        VIEW_PRIVS = #{record.viewPrivs,jdbcType=LONGVARCHAR},
        VIEW_USERS = #{record.viewUsers,jdbcType=LONGVARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        set SORT_ID = #{record.sortId,jdbcType=INTEGER},
        SORT_NO = #{record.sortNo,jdbcType=INTEGER},
        SORT_NAME = #{record.sortName,jdbcType=VARCHAR},
        SORT_PARENT = #{record.sortParent,jdbcType=INTEGER},
        VIEW_USER_TYPE = #{record.viewUserType,jdbcType=VARCHAR},
        VIEW_SCOPE = #{record.viewScope,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.institution.InstitutionSortWithBLOBs" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        <set >
            <if test="sortNo != null" >
                SORT_NO = #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="sortName != null" >
                SORT_NAME = #{sortName,jdbcType=VARCHAR},
            </if>
            <if test="sortParent != null" >
                SORT_PARENT = #{sortParent,jdbcType=INTEGER},
            </if>
            <if test="viewUserType != null" >
                VIEW_USER_TYPE = #{viewUserType,jdbcType=VARCHAR},
            </if>
            <if test="viewScope != null" >
                VIEW_SCOPE = #{viewScope,jdbcType=VARCHAR},
            </if>
            <if test="sortDesc != null" >
                SORT_DESC = #{sortDesc,jdbcType=LONGVARCHAR},
            </if>
            <if test="belongtoDepts != null" >
                BELONGTO_DEPTS = #{belongtoDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewDepts != null" >
                VIEW_DEPTS = #{viewDepts,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewPrivs != null" >
                VIEW_PRIVS = #{viewPrivs,jdbcType=LONGVARCHAR},
            </if>
            <if test="viewUsers != null" >
                VIEW_USERS = #{viewUsers,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where SORT_ID = #{sortId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.institution.InstitutionSortWithBLOBs" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        set SORT_NO = #{sortNo,jdbcType=INTEGER},
        SORT_NAME = #{sortName,jdbcType=VARCHAR},
        SORT_PARENT = #{sortParent,jdbcType=INTEGER},
        VIEW_USER_TYPE = #{viewUserType,jdbcType=VARCHAR},
        VIEW_SCOPE = #{viewScope,jdbcType=VARCHAR},
        SORT_DESC = #{sortDesc,jdbcType=LONGVARCHAR},
        BELONGTO_DEPTS = #{belongtoDepts,jdbcType=LONGVARCHAR},
        VIEW_DEPTS = #{viewDepts,jdbcType=LONGVARCHAR},
        VIEW_PRIVS = #{viewPrivs,jdbcType=LONGVARCHAR},
        VIEW_USERS = #{viewUsers,jdbcType=LONGVARCHAR}
        where SORT_ID = #{sortId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xoa.model.institution.InstitutionSort" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update institution_sort
        set SORT_NO = #{sortNo,jdbcType=INTEGER},
        SORT_NAME = #{sortName,jdbcType=VARCHAR},
        SORT_PARENT = #{sortParent,jdbcType=INTEGER},
        VIEW_USER_TYPE = #{viewUserType,jdbcType=VARCHAR},
        VIEW_SCOPE = #{viewScope,jdbcType=VARCHAR}
        where SORT_ID = #{sortId,jdbcType=INTEGER}
    </update>
    <select id="findDataByIdentity" resultMap="ResultMapWithBLOBs" parameterType="map">
        SELECT
        *
        FROM
        `institution_sort`
        WHERE 1=1
        <if test="belongtoDepts!=null">
            AND(
            <trim suffixOverrides="OR">
                <foreach item="item" collection="belongtoDepts">
                    (
                    BELONGTO_DEPTS LIKE concat("%,",#{item},",%") OR
                    BELONGTO_DEPTS LIKE concat(#{item},",%")
                    ) OR
                </foreach>
            </trim>
            )
        </if>
    </select>
    <select id="findSortByPermission" resultMap="ResultMapWithBLOBs" parameterType="map">
        SELECT
        SORT_ID,SORT_NO,SORT_NAME,BELONGTO_DEPTS,VIEW_SCOPE,SORT_DESC
        FROM
        `institution_sort`
        WHERE ((VIEW_SCOPE LIKE concat('04,%') or VIEW_SCOPE LIKE concat('%,04,%'))
        <if test="deptId!=null">AND (
            <trim suffixOverrides="OR">
                <foreach item="item" collection="deptId">
                    (
                    BELONGTO_DEPTS LIKE concat("%,",#{item},",%") OR
                    BELONGTO_DEPTS LIKE concat(#{item},",%")
                    )
                    OR
                </foreach>
            </trim>
            )
        </if>
        )
        OR (VIEW_SCOPE LIKE concat('05,%') or VIEW_SCOPE LIKE concat('%,05,%'))
        <if test="viewScope!='0'.toString()">
            OR (VIEW_SCOPE LIKE concat(#{viewScope},',%') or VIEW_SCOPE LIKE concat('%,',#{viewScope},',%'))
        </if>
        order by SORT_NO
    </select>
    <select id="findSortChild" resultMap="ResultMapWithBLOBs">
        select
        *
        from institution_sort
        where SORT_PARENT=#{sortParent}
        ORDER BY SORT_NO
</select>
    <select id="findSortFather" resultMap="ResultMapWithBLOBs">
        select * from institution_sort where SORT_PARENT='0'
</select>
    <select id="isBelongtoDept" resultType="java.lang.Integer" parameterType="map">
        SELECT
        COUNT( SORT_ID )
        FROM
        `institution_sort`
        WHERE
        SORT_ID = #{sortId}
        AND(
        BELONGTO_DEPTS LIKE CONCAT( '%', #{belongtoDept}, ',%' )
        OR BELONGTO_DEPTS LIKE CONCAT(#{belongtoDept},',%')
        OR BELONGTO_DEPTS = "ALL_DEPT"
        )
</select>
</mapper>