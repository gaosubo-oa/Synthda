<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.projectManage.PlbProjMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.projectManage.PlbProj" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PROJ_ID" property="projId" jdbcType="INTEGER" />
    <result column="PROJ_NO" property="projNo" jdbcType="VARCHAR" />
    <result column="SORT_NO" property="sortNo" jdbcType="INTEGER" />
    <result column="PROJ_PARENT" property="projParent" jdbcType="INTEGER" />
    <result column="BELONG_PROJ" property="belongProj" jdbcType="INTEGER" />
    <result column="PROJ_NAME" property="projName" jdbcType="VARCHAR" />
    <result column="PROJ_ABBREVIATION" property="projAbbreviation" jdbcType="VARCHAR" />
    <result column="PROJECT_STATUS" property="projectStatus" jdbcType="CHAR" />
    <result column="BREAK_TIMES" property="breakTimes" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="PROJ_LEVEL" property="projLevel" jdbcType="VARCHAR" />
    <result column="PLAN_STATRT_TIME" property="planStatrtTime" jdbcType="DATE" />
    <result column="PLAN_END_TIME" property="planEndTime" jdbcType="DATE" />
    <result column="REAL_BEGIN_DATE" property="realBeginDate" jdbcType="DATE" />
    <result column="REAL_END_DATE" property="realEndDate" jdbcType="DATE" />
    <result column="BUDGET_YN" property="budgetYn" jdbcType="CHAR" />
    <result column="RUN_ID" property="runId" jdbcType="INTEGER" />
    <result column="APPROVAL_STATUS" property="approvalStatus" jdbcType="CHAR" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="CHAR" />
    <result column="PROJ_TYPE" property="projType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.projectManage.PlbProjWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="BUILD_CONTENT" property="buildContent" jdbcType="LONGVARCHAR" />
    <result column="CHECK_STANDARD" property="checkStandard" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PROJ_ID, PROJ_NO, SORT_NO, PROJ_PARENT, BELONG_PROJ, PROJ_NAME, PROJ_ABBREVIATION, 
    PROJECT_STATUS, BREAK_TIMES, DEPT_ID, PROJ_LEVEL, PLAN_STATRT_TIME, PLAN_END_TIME, 
    REAL_BEGIN_DATE, REAL_END_DATE, BUDGET_YN, RUN_ID, APPROVAL_STATUS, DEL_FLAG,PROJ_TYPE
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BUILD_CONTENT, CHECK_STANDARD
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.projectManage.PlbProjExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from plb_proj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.projectManage.PlbProjExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plb_proj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from plb_proj
    where PROJ_ID = #{projId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from plb_proj
    where PROJ_ID = #{projId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.projectManage.PlbProjExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from plb_proj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.projectManage.PlbProjWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into plb_proj (PROJ_ID, PROJ_NO, SORT_NO, 
      PROJ_PARENT, BELONG_PROJ, PROJ_NAME, 
      PROJ_ABBREVIATION, PROJECT_STATUS, BREAK_TIMES, 
      DEPT_ID, PROJ_LEVEL, PLAN_STATRT_TIME, 
      PLAN_END_TIME, REAL_BEGIN_DATE, REAL_END_DATE, 
      BUDGET_YN, RUN_ID, APPROVAL_STATUS, 
      DEL_FLAG, BUILD_CONTENT, CHECK_STANDARD
      )
    values (#{projId,jdbcType=INTEGER}, #{projNo,jdbcType=VARCHAR}, #{sortNo,jdbcType=INTEGER}, 
      #{projParent,jdbcType=INTEGER}, #{belongProj,jdbcType=INTEGER}, #{projName,jdbcType=VARCHAR}, 
      #{projAbbreviation,jdbcType=VARCHAR}, #{projectStatus,jdbcType=CHAR}, #{breakTimes,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{projLevel,jdbcType=VARCHAR}, #{planStatrtTime,jdbcType=DATE}, 
      #{planEndTime,jdbcType=DATE}, #{realBeginDate,jdbcType=DATE}, #{realEndDate,jdbcType=DATE}, 
      #{budgetYn,jdbcType=CHAR}, #{runId,jdbcType=INTEGER}, #{approvalStatus,jdbcType=CHAR}, 
      #{delFlag,jdbcType=CHAR}, #{buildContent,jdbcType=LONGVARCHAR}, #{checkStandard,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.projectManage.PlbProjWithBLOBs" useGeneratedKeys="true" keyProperty="projId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="projId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into plb_proj
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projNo != null" >
        PROJ_NO,
      </if>
      <if test="sortNo != null" >
        SORT_NO,
      </if>
      <if test="projParent != null" >
        PROJ_PARENT,
      </if>
      <if test="belongProj != null" >
        BELONG_PROJ,
      </if>
      <if test="projName != null" >
        PROJ_NAME,
      </if>
      <if test="projAbbreviation != null" >
        PROJ_ABBREVIATION,
      </if>
      <if test="projectStatus != null" >
        PROJECT_STATUS,
      </if>
      <if test="breakTimes != null" >
        BREAK_TIMES,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="projLevel != null" >
        PROJ_LEVEL,
      </if>
      <if test="planStatrtTime != null" >
        PLAN_STATRT_TIME,
      </if>
      <if test="planEndTime != null" >
        PLAN_END_TIME,
      </if>
      <if test="realBeginDate != null" >
        REAL_BEGIN_DATE,
      </if>
      <if test="realEndDate != null" >
        REAL_END_DATE,
      </if>
      <if test="budgetYn != null" >
        BUDGET_YN,
      </if>
      <if test="runId != null" >
        RUN_ID,
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS,
      </if>
      <if test="delFlag != null" >
        DEL_FLAG,
      </if>
      <if test="buildContent != null" >
        BUILD_CONTENT,
      </if>
      <if test="checkStandard != null" >
        CHECK_STANDARD,
      </if>
      <if test="projType != null" >
        PROJ_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projNo != null" >
        #{projNo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null" >
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="projParent != null" >
        #{projParent,jdbcType=INTEGER},
      </if>
      <if test="belongProj != null" >
        #{belongProj,jdbcType=INTEGER},
      </if>
      <if test="projName != null" >
        #{projName,jdbcType=VARCHAR},
      </if>
      <if test="projAbbreviation != null" >
        #{projAbbreviation,jdbcType=VARCHAR},
      </if>
      <if test="projectStatus != null" >
        #{projectStatus,jdbcType=CHAR},
      </if>
      <if test="breakTimes != null" >
        #{breakTimes,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="projLevel != null" >
        #{projLevel,jdbcType=VARCHAR},
      </if>
      <if test="planStatrtTime != null" >
        #{planStatrtTime,jdbcType=DATE},
      </if>
      <if test="planEndTime != null" >
        #{planEndTime,jdbcType=DATE},
      </if>
      <if test="realBeginDate != null" >
        #{realBeginDate,jdbcType=DATE},
      </if>
      <if test="realEndDate != null" >
        #{realEndDate,jdbcType=DATE},
      </if>
      <if test="budgetYn != null" >
        #{budgetYn,jdbcType=CHAR},
      </if>
      <if test="runId != null" >
        #{runId,jdbcType=INTEGER},
      </if>
      <if test="approvalStatus != null" >
        #{approvalStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="buildContent != null" >
        #{buildContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkStandard != null" >
        #{checkStandard,jdbcType=LONGVARCHAR},
      </if>
      <if test="projType != null" >
        #{projType,jdbcType=VARCHAR},
      </if>
    </trim>

  </insert>
  <select id="selectProjId" resultType="integer">
    SELECT PROJ_ID FROM plb_proj ORDER BY PROJ_ID DESC LIMIT 1
  </select>
  <select id="countByExample" parameterType="com.xoa.model.projectManage.PlbProjExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from plb_proj
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    <set >
      <if test="record.projId != null" >
        PROJ_ID = #{record.projId,jdbcType=INTEGER},
      </if>
      <if test="record.projNo != null" >
        PROJ_NO = #{record.projNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNo != null" >
        SORT_NO = #{record.sortNo,jdbcType=INTEGER},
      </if>
      <if test="record.projParent != null" >
        PROJ_PARENT = #{record.projParent,jdbcType=INTEGER},
      </if>
      <if test="record.belongProj != null" >
        BELONG_PROJ = #{record.belongProj,jdbcType=INTEGER},
      </if>
      <if test="record.projName != null" >
        PROJ_NAME = #{record.projName,jdbcType=VARCHAR},
      </if>
      <if test="record.projAbbreviation != null" >
        PROJ_ABBREVIATION = #{record.projAbbreviation,jdbcType=VARCHAR},
      </if>
      <if test="record.projectStatus != null" >
        PROJECT_STATUS = #{record.projectStatus,jdbcType=CHAR},
      </if>
      <if test="record.breakTimes != null" >
        BREAK_TIMES = #{record.breakTimes,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.projLevel != null" >
        PROJ_LEVEL = #{record.projLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.planStatrtTime != null" >
        PLAN_STATRT_TIME = #{record.planStatrtTime,jdbcType=DATE},
      </if>
      <if test="record.planEndTime != null" >
        PLAN_END_TIME = #{record.planEndTime,jdbcType=DATE},
      </if>
      <if test="record.realBeginDate != null" >
        REAL_BEGIN_DATE = #{record.realBeginDate,jdbcType=DATE},
      </if>
      <if test="record.realEndDate != null" >
        REAL_END_DATE = #{record.realEndDate,jdbcType=DATE},
      </if>
      <if test="record.budgetYn != null" >
        BUDGET_YN = #{record.budgetYn,jdbcType=CHAR},
      </if>
      <if test="record.runId != null" >
        RUN_ID = #{record.runId,jdbcType=INTEGER},
      </if>
      <if test="record.approvalStatus != null" >
        APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR},
      </if>
      <if test="record.delFlag != null" >
        DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.buildContent != null" >
        BUILD_CONTENT = #{record.buildContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.checkStandard != null" >
        CHECK_STANDARD = #{record.checkStandard,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    set PROJ_ID = #{record.projId,jdbcType=INTEGER},
      PROJ_NO = #{record.projNo,jdbcType=VARCHAR},
      SORT_NO = #{record.sortNo,jdbcType=INTEGER},
      PROJ_PARENT = #{record.projParent,jdbcType=INTEGER},
      BELONG_PROJ = #{record.belongProj,jdbcType=INTEGER},
      PROJ_NAME = #{record.projName,jdbcType=VARCHAR},
      PROJ_ABBREVIATION = #{record.projAbbreviation,jdbcType=VARCHAR},
      PROJECT_STATUS = #{record.projectStatus,jdbcType=CHAR},
      BREAK_TIMES = #{record.breakTimes,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      PROJ_LEVEL = #{record.projLevel,jdbcType=VARCHAR},
      PLAN_STATRT_TIME = #{record.planStatrtTime,jdbcType=DATE},
      PLAN_END_TIME = #{record.planEndTime,jdbcType=DATE},
      REAL_BEGIN_DATE = #{record.realBeginDate,jdbcType=DATE},
      REAL_END_DATE = #{record.realEndDate,jdbcType=DATE},
      BUDGET_YN = #{record.budgetYn,jdbcType=CHAR},
      RUN_ID = #{record.runId,jdbcType=INTEGER},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR},
      DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      BUILD_CONTENT = #{record.buildContent,jdbcType=LONGVARCHAR},
      CHECK_STANDARD = #{record.checkStandard,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    set PROJ_ID = #{record.projId,jdbcType=INTEGER},
      PROJ_NO = #{record.projNo,jdbcType=VARCHAR},
      SORT_NO = #{record.sortNo,jdbcType=INTEGER},
      PROJ_PARENT = #{record.projParent,jdbcType=INTEGER},
      BELONG_PROJ = #{record.belongProj,jdbcType=INTEGER},
      PROJ_NAME = #{record.projName,jdbcType=VARCHAR},
      PROJ_ABBREVIATION = #{record.projAbbreviation,jdbcType=VARCHAR},
      PROJECT_STATUS = #{record.projectStatus,jdbcType=CHAR},
      BREAK_TIMES = #{record.breakTimes,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      PROJ_LEVEL = #{record.projLevel,jdbcType=VARCHAR},
      PLAN_STATRT_TIME = #{record.planStatrtTime,jdbcType=DATE},
      PLAN_END_TIME = #{record.planEndTime,jdbcType=DATE},
      REAL_BEGIN_DATE = #{record.realBeginDate,jdbcType=DATE},
      REAL_END_DATE = #{record.realEndDate,jdbcType=DATE},
      BUDGET_YN = #{record.budgetYn,jdbcType=CHAR},
      RUN_ID = #{record.runId,jdbcType=INTEGER},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR},
      DEL_FLAG = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.projectManage.PlbProjWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    <set >
      <if test="projNo != null" >
        PROJ_NO = #{projNo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null" >
        SORT_NO = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="projParent != null" >
        PROJ_PARENT = #{projParent,jdbcType=INTEGER},
      </if>
      <if test="belongProj != null" >
        BELONG_PROJ = #{belongProj,jdbcType=INTEGER},
      </if>
      <if test="projName != null" >
        PROJ_NAME = #{projName,jdbcType=VARCHAR},
      </if>
      <if test="projAbbreviation != null" >
        PROJ_ABBREVIATION = #{projAbbreviation,jdbcType=VARCHAR},
      </if>
      <if test="projectStatus != null" >
        PROJECT_STATUS = #{projectStatus,jdbcType=CHAR},
      </if>
      <if test="breakTimes != null" >
        BREAK_TIMES = #{breakTimes,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="projLevel != null" >
        PROJ_LEVEL = #{projLevel,jdbcType=VARCHAR},
      </if>
      <if test="planStatrtTime != null" >
        PLAN_STATRT_TIME = #{planStatrtTime,jdbcType=DATE},
      </if>
      <if test="planEndTime != null" >
        PLAN_END_TIME = #{planEndTime,jdbcType=DATE},
      </if>
      <if test="realBeginDate != null" >
        REAL_BEGIN_DATE = #{realBeginDate,jdbcType=DATE},
      </if>
      <if test="realEndDate != null" >
        REAL_END_DATE = #{realEndDate,jdbcType=DATE},
      </if>
      <if test="budgetYn != null" >
        BUDGET_YN = #{budgetYn,jdbcType=CHAR},
      </if>
      <if test="runId != null" >
        RUN_ID = #{runId,jdbcType=INTEGER},
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        DEL_FLAG = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="buildContent != null" >
        BUILD_CONTENT = #{buildContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkStandard != null" >
        CHECK_STANDARD = #{checkStandard,jdbcType=LONGVARCHAR},
      </if>
      <if test="projType != null" >
        PROJ_TYPE = #{projType,jdbcType=VARCHAR},
      </if>
    </set>
    where PROJ_ID = #{projId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.projectManage.PlbProjWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    set PROJ_NO = #{projNo,jdbcType=VARCHAR},
      SORT_NO = #{sortNo,jdbcType=INTEGER},
      PROJ_PARENT = #{projParent,jdbcType=INTEGER},
      BELONG_PROJ = #{belongProj,jdbcType=INTEGER},
      PROJ_NAME = #{projName,jdbcType=VARCHAR},
      PROJ_ABBREVIATION = #{projAbbreviation,jdbcType=VARCHAR},
      PROJECT_STATUS = #{projectStatus,jdbcType=CHAR},
      BREAK_TIMES = #{breakTimes,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      PROJ_LEVEL = #{projLevel,jdbcType=VARCHAR},
      PLAN_STATRT_TIME = #{planStatrtTime,jdbcType=DATE},
      PLAN_END_TIME = #{planEndTime,jdbcType=DATE},
      REAL_BEGIN_DATE = #{realBeginDate,jdbcType=DATE},
      REAL_END_DATE = #{realEndDate,jdbcType=DATE},
      BUDGET_YN = #{budgetYn,jdbcType=CHAR},
      RUN_ID = #{runId,jdbcType=INTEGER},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR},
      DEL_FLAG = #{delFlag,jdbcType=CHAR},
      BUILD_CONTENT = #{buildContent,jdbcType=LONGVARCHAR},
      CHECK_STANDARD = #{checkStandard,jdbcType=LONGVARCHAR}
    where PROJ_ID = #{projId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.projectManage.PlbProj" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plb_proj
    set PROJ_NO = #{projNo,jdbcType=VARCHAR},
      SORT_NO = #{sortNo,jdbcType=INTEGER},
      PROJ_PARENT = #{projParent,jdbcType=INTEGER},
      BELONG_PROJ = #{belongProj,jdbcType=INTEGER},
      PROJ_NAME = #{projName,jdbcType=VARCHAR},
      PROJ_ABBREVIATION = #{projAbbreviation,jdbcType=VARCHAR},
      PROJECT_STATUS = #{projectStatus,jdbcType=CHAR},
      BREAK_TIMES = #{breakTimes,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      PROJ_LEVEL = #{projLevel,jdbcType=VARCHAR},
      PLAN_STATRT_TIME = #{planStatrtTime,jdbcType=DATE},
      PLAN_END_TIME = #{planEndTime,jdbcType=DATE},
      REAL_BEGIN_DATE = #{realBeginDate,jdbcType=DATE},
      REAL_END_DATE = #{realEndDate,jdbcType=DATE},
      BUDGET_YN = #{budgetYn,jdbcType=CHAR},
      RUN_ID = #{runId,jdbcType=INTEGER},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR},
      DEL_FLAG = #{delFlag,jdbcType=CHAR}
    where PROJ_ID = #{projId,jdbcType=INTEGER}
  </update>
  <select id="selectAllByCondition" resultMap="ResultMapWithBLOBs" parameterType="map">
    SELECT
    *
    FROM
    plb_proj
    <where>
      <if test="dutyDeptId!=null and dutyDeptId!=''">
        AND DEPT_ID = #{dutyDeptId}
      </if>
      <if test="projectName!=null and projectName!=''">
        AND (PROJ_NAME LIKE CONCAT('%',#{projectName},'%')  OR PROJ_ABBREVIATION LIKE CONCAT('%',#{projectName},'%'))
      </if>
      <if test="projNo!=null and projNo!=''">
        AND PROJ_NO LIKE CONCAT('%',#{projNo},'%')
      </if>
      <if test="deptIds!=null">
        AND DEPT_ID IN
        <foreach collection="deptIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </if>

      <if test="dutyDeptIds!=null">
        AND DEPT_ID IN
        <foreach collection="dutyDeptIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </if>
      AND DEL_FLAG = '0'
    </where>
    <if test="orderbyFields!=null and orderbyFields!=''">
      ORDER BY ${orderbyFields}
    </if>
    <if test="orderbyUpdown!=null and orderbyUpdown!=''">
      ${orderbyUpdown}
    </if>
    <if test="page!=null and pageSize!=''">
      limit #{page},#{pageSize}
    </if>
  </select>
  <select id="selectAllByConditionCount" resultType="Integer" parameterType="map">
    select IFNULL(count(*),0)
    FROM
    plb_proj
    <where>
      <if test="dutyDeptId!=null and dutyDeptId!=''">
        AND DEPT_ID = #{dutyDeptId}
      </if>
      <if test="projectName!=null and projectName!=''">
        AND PROJ_NAME LIKE CONCAT('%',#{projectName},'%')
      </if>
      <if test="projNo!=null and projNo!=''">
        AND PROJ_NO LIKE CONCAT('%',#{projNo},'%')
      </if>
      <if test="deptIds!=null">
        AND DEPT_ID IN
        <foreach collection="deptIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </if>

      <if test="dutyDeptIds!=null">
        AND DEPT_ID IN
        <foreach collection="dutyDeptIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </if>
      AND DEL_FLAG = '0'
    </where>
    <if test="orderbyFields!=null and orderbyFields!=''">
      ORDER BY ${orderbyFields}
    </if>
    <if test="orderbyUpdown!=null and orderbyUpdown!=''">
      ${orderbyUpdown}
    </if>
  </select>
  <update id="budgetControl" parameterType="com.xoa.model.projectManage.PlbProjWithBLOBs">
      update plb_proj  set
         CONFIGURATION_TYPE = #{configurationType,jdbcType=VARCHAR},
        CONFIGURATION_UP = #{configurationUp,jdbcType=DECIMAL},
        CONFIGURATION_DOWN = #{configurationDown,jdbcType=DECIMAL}
        where PROJ_ID = #{projId,jdbcType=INTEGER}
    </update>
  <update id="updateDelFlag" parameterType="arraylist">
    UPDATE plb_proj SET DEL_FLAG=1 WHERE
    PROJ_ID in
    <foreach collection="array" open="(" close=")" item="item" separator=",">
      #{item}
    </foreach>
  </update>
  <select id="selectOrgData" resultMap="BaseResultMap" parameterType="map">
    SELECT
    SUBSTRING_INDEX( substring_index( TRIM( ',' FROM porg.DEPT_PARENT_IDS ), ',', '-2' ), ',', 1 ) AS 'dutyDeptId',
    PROJ_ID,
    SORT_NO,
    proj.DEPT_ID,
    PROJ_NO,
    PROJ_NAME,
    PROJ_PARENT,
    APPROVAL_STATUS,
    PROJ_ABBREVIATION,
    BREAK_TIMES,
    PROJ_LEVEL,
    BELONG_PROJ
    FROM
    plb_proj proj
    LEFT JOIN plb_org porg ON proj.DEPT_ID = porg.DEPT_ID
    where
    proj.DEL_FLAG=0
    <if test="deptIds!=null">
      AND proj.DEPT_ID IN
      <foreach collection="deptIds" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
    </if>
    <if test="projId!=null and projId!=''">
      AND proj.PROJ_ID = #{projId}
    </if>
  </select>
  <select id="autoNumber" resultMap="ResultMapWithBLOBs">
    select PROJ_NO from plb_proj
    <where>
      PROJ_NO = CONCAT( 'XM_', #{yearMonthDate} , RIGHT ( PROJ_NO, 4 ))
    </where>
    order by right(PROJ_NO,3) desc LIMIT 1
  </select>
  <!--resultType="Integer"-->
  <select id="getSortNo" resultType="Integer" >
       SELECT max(sort_no+1) FROM plb_proj
    </select>
  <select id="getSomeProjData" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">

        select
     PROJ_ID, SORT_NO, PROJ_NO, PROJ_TYPE, PROJ_NAME, PROJ_ABBREVIATION
        from plb_proj
        where PROJ_ID = #{projId,jdbcType=INTEGER}
    </select>
  <select id="selectByRunId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">

        select
             *
        from plb_proj
        where RUN_ID = #{runId,jdbcType=INTEGER}
    </select>

  <select id="getByDeptId" resultMap="BaseResultMap">
        select
             *
        from plb_proj
        where DEPT_ID = #{deptId}
        and PROJ_PARENT = 0
    </select>
  <select id="getByProjParent" resultMap="BaseResultMap">
        select
             *
        from plb_proj
        where PROJ_PARENT = #{projParent}
    </select>

  <select id="getByBelongProj" resultMap="BaseResultMap">
        select
             *
        from plb_proj
        where BELONG_PROJ = #{belongProj}
    </select>
    <select id="selectByProjId" resultType="string">
      select nullif(PROJ_NAME,'')
      from plb_proj where PROJ_ID=#{projId}
    </select>
  <select id="selectByProjNo" resultType="java.lang.Integer">
        select
            count(*)
        from plb_proj
        where PROJ_NO = #{projectNo}
  </select>
</mapper>