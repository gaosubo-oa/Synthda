<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.sys.SealLogMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LOG_ID" jdbcType="INTEGER" property="logId" />
    <result column="S_ID" jdbcType="VARCHAR" property="sId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="LOG_TIME" jdbcType="TIMESTAMP" property="logTime" />
    <result column="LOG_TYPE" jdbcType="VARCHAR" property="logType" />
    <result column="RESULT" jdbcType="VARCHAR" property="result" />
    <result column="MAC_ADD" jdbcType="VARCHAR" property="macAdd" />
    <result column="IP_ADD" jdbcType="VARCHAR" property="ipAdd" />
    <result column="CLIENT_TYPE" jdbcType="CHAR" property="clientType" />
    <result column="ATTACHMENT_ID" jdbcType="VARCHAR" property="attachmentId" />
    <result column="ATTACHMENT_NAME" jdbcType="VARCHAR" property="attachmentName" />
    <result column="ATTACHMENT_MD5" jdbcType="VARCHAR" property="attachmentMd5" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="INFO_EXT" jdbcType="LONGVARCHAR" property="infoExt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LOG_ID, S_ID, USER_ID, LOG_TIME, LOG_TYPE, RESULT, MAC_ADD, IP_ADD, CLIENT_TYPE, 
    ATTACHMENT_ID, ATTACHMENT_NAME, ATTACHMENT_MD5
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    INFO_EXT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xoa.model.sys.SealLogExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from seal_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xoa.model.sys.SealLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seal_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from seal_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from seal_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.sys.SealLogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from seal_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into seal_log (LOG_ID, S_ID, USER_ID, 
      LOG_TIME, LOG_TYPE, RESULT, 
      MAC_ADD, IP_ADD, CLIENT_TYPE, 
      ATTACHMENT_ID, ATTACHMENT_NAME, ATTACHMENT_MD5, 
      INFO_EXT)
    values (#{logId,jdbcType=INTEGER}, #{sId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=TIMESTAMP}, #{logType,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{macAdd,jdbcType=VARCHAR}, #{ipAdd,jdbcType=VARCHAR}, #{clientType,jdbcType=CHAR}, 
      #{attachmentId,jdbcType=VARCHAR}, #{attachmentName,jdbcType=VARCHAR}, #{attachmentMd5,jdbcType=VARCHAR}, 
      #{infoExt,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into seal_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="sId != null">
        S_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="logTime != null">
        LOG_TIME,
      </if>
      <if test="logType != null">
        LOG_TYPE,
      </if>
      <if test="result != null">
        RESULT,
      </if>
      <if test="macAdd != null">
        MAC_ADD,
      </if>
      <if test="ipAdd != null">
        IP_ADD,
      </if>
      <if test="clientType != null">
        CLIENT_TYPE,
      </if>
      <if test="attachmentId != null">
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null">
        ATTACHMENT_NAME,
      </if>
      <if test="attachmentMd5 != null">
        ATTACHMENT_MD5,
      </if>
      <if test="infoExt != null">
        INFO_EXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="sId != null">
        #{sId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="macAdd != null">
        #{macAdd,jdbcType=VARCHAR},
      </if>
      <if test="ipAdd != null">
        #{ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null">
        #{clientType,jdbcType=CHAR},
      </if>
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null">
        #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="attachmentMd5 != null">
        #{attachmentMd5,jdbcType=VARCHAR},
      </if>
      <if test="infoExt != null">
        #{infoExt,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.sys.SealLogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from seal_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.sId != null">
        S_ID = #{record.sId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.logTime != null">
        LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logType != null">
        LOG_TYPE = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        RESULT = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.macAdd != null">
        MAC_ADD = #{record.macAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.ipAdd != null">
        IP_ADD = #{record.ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.clientType != null">
        CLIENT_TYPE = #{record.clientType,jdbcType=CHAR},
      </if>
      <if test="record.attachmentId != null">
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.attachmentName != null">
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.attachmentMd5 != null">
        ATTACHMENT_MD5 = #{record.attachmentMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.infoExt != null">
        INFO_EXT = #{record.infoExt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    set LOG_ID = #{record.logId,jdbcType=INTEGER},
      S_ID = #{record.sId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP},
      LOG_TYPE = #{record.logType,jdbcType=VARCHAR},
      RESULT = #{record.result,jdbcType=VARCHAR},
      MAC_ADD = #{record.macAdd,jdbcType=VARCHAR},
      IP_ADD = #{record.ipAdd,jdbcType=VARCHAR},
      CLIENT_TYPE = #{record.clientType,jdbcType=CHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      ATTACHMENT_MD5 = #{record.attachmentMd5,jdbcType=VARCHAR},
      INFO_EXT = #{record.infoExt,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    set LOG_ID = #{record.logId,jdbcType=INTEGER},
      S_ID = #{record.sId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP},
      LOG_TYPE = #{record.logType,jdbcType=VARCHAR},
      RESULT = #{record.result,jdbcType=VARCHAR},
      MAC_ADD = #{record.macAdd,jdbcType=VARCHAR},
      IP_ADD = #{record.ipAdd,jdbcType=VARCHAR},
      CLIENT_TYPE = #{record.clientType,jdbcType=CHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      ATTACHMENT_MD5 = #{record.attachmentMd5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    <set>
      <if test="sId != null">
        S_ID = #{sId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        LOG_TIME = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logType != null">
        LOG_TYPE = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        RESULT = #{result,jdbcType=VARCHAR},
      </if>
      <if test="macAdd != null">
        MAC_ADD = #{macAdd,jdbcType=VARCHAR},
      </if>
      <if test="ipAdd != null">
        IP_ADD = #{ipAdd,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null">
        CLIENT_TYPE = #{clientType,jdbcType=CHAR},
      </if>
      <if test="attachmentId != null">
        ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null">
        ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="attachmentMd5 != null">
        ATTACHMENT_MD5 = #{attachmentMd5,jdbcType=VARCHAR},
      </if>
      <if test="infoExt != null">
        INFO_EXT = #{infoExt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    set S_ID = #{sId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      LOG_TIME = #{logTime,jdbcType=TIMESTAMP},
      LOG_TYPE = #{logType,jdbcType=VARCHAR},
      RESULT = #{result,jdbcType=VARCHAR},
      MAC_ADD = #{macAdd,jdbcType=VARCHAR},
      IP_ADD = #{ipAdd,jdbcType=VARCHAR},
      CLIENT_TYPE = #{clientType,jdbcType=CHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      ATTACHMENT_MD5 = #{attachmentMd5,jdbcType=VARCHAR},
      INFO_EXT = #{infoExt,jdbcType=LONGVARCHAR}
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.sys.SealLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal_log
    set S_ID = #{sId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      LOG_TIME = #{logTime,jdbcType=TIMESTAMP},
      LOG_TYPE = #{logType,jdbcType=VARCHAR},
      RESULT = #{result,jdbcType=VARCHAR},
      MAC_ADD = #{macAdd,jdbcType=VARCHAR},
      IP_ADD = #{ipAdd,jdbcType=VARCHAR},
      CLIENT_TYPE = #{clientType,jdbcType=CHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      ATTACHMENT_MD5 = #{attachmentMd5,jdbcType=VARCHAR}
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  
  <select id="getAllSealLogInfo" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT  * FROM  seal_log
    <where>
      <trim prefixOverrides="and">
    <if test="sealLog.sId!=null and sealLog.sId!=''">
     and S_ID in (${sealLog.sId})
    </if>
        <if test="sealLog.logType!=null">
      and  LOG_TYPE = #{sealLog.logType}
        </if>
        <if test="sealLog.userId!=null">
          and USER_ID=#{sealLog.userId}
        </if>
        <if test="startTime!=null">
          and LOG_TIME&gt;=#{startTime}
        </if>
        <if test="endTime!=null">
          and LOG_TIME &lt;=#{endTime}
        </if>
      </trim>
    </where>
    ORDER BY LOG_TIME DESC
  </select>


  <select id="selectAllSealLogInfo" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT sl.* FROM
    seal_log sl
    left JOIN seal s on sl.LOG_TYPE like CONCAT("%",'seal',"%") and sl.S_ID = s.SEAL_ID
    left JOIN xsign xs on sl.LOG_TYPE like CONCAT("%",'sign',"%") and sl.S_ID = xs.SIGN_ID
    <where>
      <trim prefixOverrides="and">
        <if test="sealName!=null and sealName!=''">
            and s.SEAL_NAME like CONCAT("%",#{sealName},"%") or xs.SIGN_NAME like CONCAT("%",#{sealName},"%")
        </if>
        <if test="logType!=null">
            and sl.LOG_TYPE = #{logType}
        </if>
        <if test="userId!=null">
            and sl.USER_ID=#{suserId}
        </if>
        <if test="startTime!=null">
            and sl.LOG_TIME&gt;=#{startTime}
        </if>
        <if test="endTime!=null">
            and sl.LOG_TIME &lt;=#{endTime}
        </if>
      </trim>
    </where>
    ORDER BY LOG_TIME DESC
  </select>

  <select id="selectAllSealLogInfo" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="kingbase">
    SELECT sl.* FROM
    seal_log sl
    left JOIN seal s on sl.LOG_TYPE like CONCAT('%','seal','%') and sl.S_ID = s.SEAL_ID
    left JOIN xsign xs on sl.LOG_TYPE like CONCAT('%','sign','%') and sl.S_ID = xs.SIGN_ID
    <where>
      <trim prefixOverrides="and">
        <if test="sealName!=null and sealName!=''">
            and s.SEAL_NAME like CONCAT('%',#{sealName}::VARCHAR,'%') or xs.SIGN_NAME like CONCAT('%',#{sealName}::VARCHAR,'%')
        </if>
        <if test="logType!=null">
            and sl.LOG_TYPE = #{logType}
        </if>
        <if test="userId!=null">
            and sl.USER_ID=#{userId}
        </if>
        <if test="startTime!=null">
            and sl.LOG_TIME&gt;=#{startTime}
        </if>
        <if test="endTime!=null">
            and sl.LOG_TIME &lt;=#{endTime}
        </if>
      </trim>
    </where>
    ORDER BY LOG_TIME DESC
  </select>

  <delete id="deleteSealLog">
    delete from seal_log where LOG_ID in
    <foreach close=")" collection="array" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>

  <select id="selectNoMd5Log" resultMap="ResultMapWithBLOBs">
    SELECT  * FROM seal_log
    <where>
      (ATTACHMENT_MD5 is null or ATTACHMENT_MD5 = '')
      and ATTACHMENT_ID = #{attachmentId}
      and ATTACHMENT_NAME = #{attachmentName}
    </where>
    ORDER BY LOG_TIME DESC
  </select>

  <select id="selectLastMd5LogOne" resultMap="ResultMapWithBLOBs">
    SELECT  * FROM seal_log
    <where>
      ATTACHMENT_MD5 != ''
      and ATTACHMENT_ID = #{attachmentId}
      and ATTACHMENT_NAME = #{attachmentName}
    </where>
    ORDER BY LOG_TIME DESC limit 0,1
  </select>

  <select id="selectByMd5" resultMap="ResultMapWithBLOBs">
    SELECT  * FROM seal_log
    <where>
      ATTACHMENT_MD5 = #{attachmentMd5}
    </where>
    ORDER BY LOG_TIME DESC
  </select>

</mapper>