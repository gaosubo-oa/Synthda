<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.budget.BudgetLogMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.budget.BudgetLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LOG_ID" jdbcType="INTEGER" property="logId" />
    <result column="Budget_id" jdbcType="INTEGER" property="budgetId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="TIME" jdbcType="TIMESTAMP" property="time" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="budget_item_name" jdbcType="VARCHAR" property="budgetItemName" />
    <result column="budget_input_time" jdbcType="VARCHAR" property="budgetInputTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LOG_ID, Budget_id, USER_ID, TIME, IP, TYPE, REMARK, budget_item_name, budget_input_time
  </sql>
  <select id="selectByExample" parameterType="com.xoa.model.budget.BudgetLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from budget_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from budget_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from budget_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.budget.BudgetLogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from budget_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.budget.BudgetLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into budget_log (LOG_ID, Budget_id, USER_ID, 
      TIME, IP, TYPE, REMARK, 
      budget_item_name, budget_input_time)
    values (#{logId,jdbcType=INTEGER}, #{budgetId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{budgetItemName,jdbcType=VARCHAR}, #{budgetInputTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.budget.BudgetLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into budget_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="budgetId != null">
        Budget_id,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="time != null">
        TIME,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="budgetItemName != null">
        budget_item_name,
      </if>
      <if test="budgetInputTime != null">
        budget_input_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="budgetId != null">
        #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="budgetItemName != null">
        #{budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="budgetInputTime != null">
        #{budgetInputTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.budget.BudgetLogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from budget_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budget_log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.budgetId != null">
        Budget_id = #{record.budgetId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        TIME = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetItemName != null">
        budget_item_name = #{record.budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetInputTime != null">
        budget_input_time = #{record.budgetInputTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budget_log
    set LOG_ID = #{record.logId,jdbcType=INTEGER},
      Budget_id = #{record.budgetId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      TIME = #{record.time,jdbcType=TIMESTAMP},
      IP = #{record.ip,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      budget_item_name = #{record.budgetItemName,jdbcType=VARCHAR},
      budget_input_time = #{record.budgetInputTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.budget.BudgetLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budget_log
    <set>
      <if test="budgetId != null">
        Budget_id = #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        TIME = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="budgetItemName != null">
        budget_item_name = #{budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="budgetInputTime != null">
        budget_input_time = #{budgetInputTime,jdbcType=VARCHAR},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.budget.BudgetLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budget_log
    set Budget_id = #{budgetId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      TIME = #{time,jdbcType=TIMESTAMP},
      IP = #{ip,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      budget_item_name = #{budgetItemName,jdbcType=VARCHAR},
      budget_input_time = #{budgetInputTime,jdbcType=VARCHAR}
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>

  <select id="selBudgetLog" parameterType="map" resultMap="BaseResultMap">
    select * FROM budget_log WHERE Budget_id = #{budgetId,jdbcType=INTEGER} order by LOG_ID desc
  </select>

  <select id="selAllBudgetLog" parameterType="map" resultMap="BaseResultMap">
    select * FROM budget_log
  </select>

</mapper>