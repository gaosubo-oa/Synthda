<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.budget.BudgetingProcessMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.budget.BudgetingProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="budget_process_id" property="budgetProcessId" jdbcType="INTEGER" />
    <result column="run_id" property="runId" jdbcType="INTEGER" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="application_date" property="applicationDate" jdbcType="TIMESTAMP" />
    <result column="per_pay" property="perPay" jdbcType="VARCHAR" />
    <result column="is_per" property="isPer" jdbcType="VARCHAR" />
    <result column="fixed_assets" property="fixedAssets" jdbcType="VARCHAR" />
    <result column="budget_item_name" property="budgetItemName" jdbcType="VARCHAR" />
    <result column="budget_id" property="budgetId" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="is_payment" property="isPayment" jdbcType="DECIMAL" />
    <result column="line_no" property="lineNo" jdbcType="VARCHAR" />
    <result column="instructions" property="instructions" jdbcType="VARCHAR" />
    <result column="schedule_of" property="scheduleOf" jdbcType="VARCHAR" />
    <result column="department_head" property="departmentHead" jdbcType="VARCHAR" />
    <result column="school_supervisor_opinion" property="schoolSupervisorOpinion" jdbcType="VARCHAR" />
    <result column="is_opinion" property="isOpinion" jdbcType="VARCHAR" />
    <result column="accounting_advice" property="accountingAdvice" jdbcType="VARCHAR" />
    <result column="is_break_up" property="isBreakUp" jdbcType="VARCHAR" />
    <result column="treasurer_signature" property="treasurerSignature" jdbcType="VARCHAR" />
    <result column="treasurer_opinion" property="treasurerOpinion" jdbcType="VARCHAR" />
    <result column="break_up_plan" property="breakUpPlan" jdbcType="VARCHAR" />
    <result column="headmaster_signature" property="headmasterSignature" jdbcType="VARCHAR" />
    <result column="headmaster_opinion" property="headmasterOpinion" jdbcType="VARCHAR" />
    <result column="actual_expenditure" property="actualExpenditure" jdbcType="DECIMAL" />
    <result column="amount_words" property="amountWords" jdbcType="VARCHAR" />
    <result column="cashier_opinion" property="cashierOpinion" jdbcType="VARCHAR" />
    <result column="allow" property="allow" jdbcType="CHAR" />
    <result column="register_ip" property="registerIp" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="zip_attachment_id" property="zipAttachmentId" jdbcType="VARCHAR" />
    <result column="zip_attachment_name" property="zipAttachmentName" jdbcType="VARCHAR" />
    <result column="advance" property="advance" jdbcType="DECIMAL" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" javaType="string" />
    <result column="budget_item_begindate" property="budgetItemBegindate" javaType="date" />
    <result column="budget_item_enddate" property="budgetItemEnddate" javaType="date" />
    <result column="Item_money" property="itemMoney" jdbcType="VARCHAR" />
    <result column="Item_manager" property="itemManager" jdbcType="VARCHAR" />
    <result column="Item_executer" property="itemExecuter" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    budget_process_id, run_id, applicant, dept_id, application_date, per_pay, is_per, 
    fixed_assets, budget_item_name, budget_id, payment, is_payment, line_no, instructions, 
    schedule_of, department_head, school_supervisor_opinion, is_opinion, accounting_advice, 
    is_break_up, treasurer_signature, treasurer_opinion, break_up_plan, headmaster_signature, 
    headmaster_opinion, actual_expenditure, amount_words, cashier_opinion, allow, register_ip, 
    del_flag, zip_attachment_id, zip_attachment_name, advance
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.budget.BudgetingProcessExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from budgeting_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from budgeting_process
    where budget_process_id = #{budgetProcessId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from budgeting_process
    where budget_process_id = #{budgetProcessId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.budget.BudgetingProcessExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from budgeting_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.budget.BudgetingProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into budgeting_process (budget_process_id, run_id, applicant, 
      dept_id, application_date, per_pay, 
      is_per, fixed_assets, budget_item_name, 
      budget_id, payment, is_payment, 
      line_no, instructions, schedule_of, 
      department_head, school_supervisor_opinion, 
      is_opinion, accounting_advice, is_break_up, 
      treasurer_signature, treasurer_opinion, break_up_plan, 
      headmaster_signature, headmaster_opinion, 
      actual_expenditure, amount_words, cashier_opinion, 
      allow, register_ip, del_flag, 
      zip_attachment_id, zip_attachment_name, advance
      )
    values (#{budgetProcessId,jdbcType=INTEGER}, #{runId,jdbcType=INTEGER}, #{applicant,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{applicationDate,jdbcType=TIMESTAMP}, #{perPay,jdbcType=VARCHAR}, 
      #{isPer,jdbcType=VARCHAR}, #{fixedAssets,jdbcType=VARCHAR}, #{budgetItemName,jdbcType=VARCHAR}, 
      #{budgetId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{isPayment,jdbcType=DECIMAL}, 
      #{lineNo,jdbcType=VARCHAR}, #{instructions,jdbcType=VARCHAR}, #{scheduleOf,jdbcType=VARCHAR}, 
      #{departmentHead,jdbcType=VARCHAR}, #{schoolSupervisorOpinion,jdbcType=VARCHAR}, 
      #{isOpinion,jdbcType=VARCHAR}, #{accountingAdvice,jdbcType=VARCHAR}, #{isBreakUp,jdbcType=VARCHAR}, 
      #{treasurerSignature,jdbcType=VARCHAR}, #{treasurerOpinion,jdbcType=VARCHAR}, #{breakUpPlan,jdbcType=VARCHAR}, 
      #{headmasterSignature,jdbcType=VARCHAR}, #{headmasterOpinion,jdbcType=VARCHAR}, 
      #{actualExpenditure,jdbcType=DECIMAL}, #{amountWords,jdbcType=VARCHAR}, #{cashierOpinion,jdbcType=VARCHAR}, 
      #{allow,jdbcType=CHAR}, #{registerIp,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, 
      #{zipAttachmentId,jdbcType=VARCHAR}, #{zipAttachmentName,jdbcType=VARCHAR}, #{advance,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.budget.BudgetingProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into budgeting_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="budgetProcessId != null" >
        budget_process_id,
      </if>
      <if test="runId != null" >
        run_id,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="applicationDate != null" >
        application_date,
      </if>
      <if test="perPay != null" >
        per_pay,
      </if>
      <if test="isPer != null" >
        is_per,
      </if>
      <if test="fixedAssets != null" >
        fixed_assets,
      </if>
      <if test="budgetItemName != null" >
        budget_item_name,
      </if>
      <if test="budgetId != null" >
        budget_id,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="isPayment != null" >
        is_payment,
      </if>
      <if test="lineNo != null" >
        line_no,
      </if>
      <if test="instructions != null" >
        instructions,
      </if>
      <if test="scheduleOf != null" >
        schedule_of,
      </if>
      <if test="departmentHead != null" >
        department_head,
      </if>
      <if test="schoolSupervisorOpinion != null" >
        school_supervisor_opinion,
      </if>
      <if test="isOpinion != null" >
        is_opinion,
      </if>
      <if test="accountingAdvice != null" >
        accounting_advice,
      </if>
      <if test="isBreakUp != null" >
        is_break_up,
      </if>
      <if test="treasurerSignature != null" >
        treasurer_signature,
      </if>
      <if test="treasurerOpinion != null" >
        treasurer_opinion,
      </if>
      <if test="breakUpPlan != null" >
        break_up_plan,
      </if>
      <if test="headmasterSignature != null" >
        headmaster_signature,
      </if>
      <if test="headmasterOpinion != null" >
        headmaster_opinion,
      </if>
      <if test="actualExpenditure != null" >
        actual_expenditure,
      </if>
      <if test="amountWords != null" >
        amount_words,
      </if>
      <if test="cashierOpinion != null" >
        cashier_opinion,
      </if>
      <if test="allow != null" >
        allow,
      </if>
      <if test="registerIp != null" >
        register_ip,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="zipAttachmentId != null" >
        zip_attachment_id,
      </if>
      <if test="zipAttachmentName != null" >
        zip_attachment_name,
      </if>
      <if test="advance != null" >
        advance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="budgetProcessId != null" >
        #{budgetProcessId,jdbcType=INTEGER},
      </if>
      <if test="runId != null" >
        #{runId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="applicationDate != null" >
        #{applicationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="perPay != null" >
        #{perPay,jdbcType=VARCHAR},
      </if>
      <if test="isPer != null" >
        #{isPer,jdbcType=VARCHAR},
      </if>
      <if test="fixedAssets != null" >
        #{fixedAssets,jdbcType=VARCHAR},
      </if>
      <if test="budgetItemName != null" >
        #{budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="budgetId != null" >
        #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="isPayment != null" >
        #{isPayment,jdbcType=DECIMAL},
      </if>
      <if test="lineNo != null" >
        #{lineNo,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null" >
        #{instructions,jdbcType=VARCHAR},
      </if>
      <if test="scheduleOf != null" >
        #{scheduleOf,jdbcType=VARCHAR},
      </if>
      <if test="departmentHead != null" >
        #{departmentHead,jdbcType=VARCHAR},
      </if>
      <if test="schoolSupervisorOpinion != null" >
        #{schoolSupervisorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="isOpinion != null" >
        #{isOpinion,jdbcType=VARCHAR},
      </if>
      <if test="accountingAdvice != null" >
        #{accountingAdvice,jdbcType=VARCHAR},
      </if>
      <if test="isBreakUp != null" >
        #{isBreakUp,jdbcType=VARCHAR},
      </if>
      <if test="treasurerSignature != null" >
        #{treasurerSignature,jdbcType=VARCHAR},
      </if>
      <if test="treasurerOpinion != null" >
        #{treasurerOpinion,jdbcType=VARCHAR},
      </if>
      <if test="breakUpPlan != null" >
        #{breakUpPlan,jdbcType=VARCHAR},
      </if>
      <if test="headmasterSignature != null" >
        #{headmasterSignature,jdbcType=VARCHAR},
      </if>
      <if test="headmasterOpinion != null" >
        #{headmasterOpinion,jdbcType=VARCHAR},
      </if>
      <if test="actualExpenditure != null" >
        #{actualExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="amountWords != null" >
        #{amountWords,jdbcType=VARCHAR},
      </if>
      <if test="cashierOpinion != null" >
        #{cashierOpinion,jdbcType=VARCHAR},
      </if>
      <if test="allow != null" >
        #{allow,jdbcType=CHAR},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="zipAttachmentId != null" >
        #{zipAttachmentId,jdbcType=VARCHAR},
      </if>
      <if test="zipAttachmentName != null" >
        #{zipAttachmentName,jdbcType=VARCHAR},
      </if>
      <if test="advance != null" >
        #{advance,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.budget.BudgetingProcessExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from budgeting_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budgeting_process
    <set >
      <if test="record.budgetProcessId != null" >
        budget_process_id = #{record.budgetProcessId,jdbcType=INTEGER},
      </if>
      <if test="record.runId != null" >
        run_id = #{record.runId,jdbcType=INTEGER},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.applicationDate != null" >
        application_date = #{record.applicationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.perPay != null" >
        per_pay = #{record.perPay,jdbcType=VARCHAR},
      </if>
      <if test="record.isPer != null" >
        is_per = #{record.isPer,jdbcType=VARCHAR},
      </if>
      <if test="record.fixedAssets != null" >
        fixed_assets = #{record.fixedAssets,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetItemName != null" >
        budget_item_name = #{record.budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetId != null" >
        budget_id = #{record.budgetId,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.isPayment != null" >
        is_payment = #{record.isPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.lineNo != null" >
        line_no = #{record.lineNo,jdbcType=VARCHAR},
      </if>
      <if test="record.instructions != null" >
        instructions = #{record.instructions,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleOf != null" >
        schedule_of = #{record.scheduleOf,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentHead != null" >
        department_head = #{record.departmentHead,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolSupervisorOpinion != null" >
        school_supervisor_opinion = #{record.schoolSupervisorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.isOpinion != null" >
        is_opinion = #{record.isOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.accountingAdvice != null" >
        accounting_advice = #{record.accountingAdvice,jdbcType=VARCHAR},
      </if>
      <if test="record.isBreakUp != null" >
        is_break_up = #{record.isBreakUp,jdbcType=VARCHAR},
      </if>
      <if test="record.treasurerSignature != null" >
        treasurer_signature = #{record.treasurerSignature,jdbcType=VARCHAR},
      </if>
      <if test="record.treasurerOpinion != null" >
        treasurer_opinion = #{record.treasurerOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.breakUpPlan != null" >
        break_up_plan = #{record.breakUpPlan,jdbcType=VARCHAR},
      </if>
      <if test="record.headmasterSignature != null" >
        headmaster_signature = #{record.headmasterSignature,jdbcType=VARCHAR},
      </if>
      <if test="record.headmasterOpinion != null" >
        headmaster_opinion = #{record.headmasterOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.actualExpenditure != null" >
        actual_expenditure = #{record.actualExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="record.amountWords != null" >
        amount_words = #{record.amountWords,jdbcType=VARCHAR},
      </if>
      <if test="record.cashierOpinion != null" >
        cashier_opinion = #{record.cashierOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.allow != null" >
        allow = #{record.allow,jdbcType=CHAR},
      </if>
      <if test="record.registerIp != null" >
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.zipAttachmentId != null" >
        zip_attachment_id = #{record.zipAttachmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.zipAttachmentName != null" >
        zip_attachment_name = #{record.zipAttachmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.advance != null" >
        advance = #{record.advance,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budgeting_process
    set budget_process_id = #{record.budgetProcessId,jdbcType=INTEGER},
      run_id = #{record.runId,jdbcType=INTEGER},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      application_date = #{record.applicationDate,jdbcType=TIMESTAMP},
      per_pay = #{record.perPay,jdbcType=VARCHAR},
      is_per = #{record.isPer,jdbcType=VARCHAR},
      fixed_assets = #{record.fixedAssets,jdbcType=VARCHAR},
      budget_item_name = #{record.budgetItemName,jdbcType=VARCHAR},
      budget_id = #{record.budgetId,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=DECIMAL},
      is_payment = #{record.isPayment,jdbcType=DECIMAL},
      line_no = #{record.lineNo,jdbcType=VARCHAR},
      instructions = #{record.instructions,jdbcType=VARCHAR},
      schedule_of = #{record.scheduleOf,jdbcType=VARCHAR},
      department_head = #{record.departmentHead,jdbcType=VARCHAR},
      school_supervisor_opinion = #{record.schoolSupervisorOpinion,jdbcType=VARCHAR},
      is_opinion = #{record.isOpinion,jdbcType=VARCHAR},
      accounting_advice = #{record.accountingAdvice,jdbcType=VARCHAR},
      is_break_up = #{record.isBreakUp,jdbcType=VARCHAR},
      treasurer_signature = #{record.treasurerSignature,jdbcType=VARCHAR},
      treasurer_opinion = #{record.treasurerOpinion,jdbcType=VARCHAR},
      break_up_plan = #{record.breakUpPlan,jdbcType=VARCHAR},
      headmaster_signature = #{record.headmasterSignature,jdbcType=VARCHAR},
      headmaster_opinion = #{record.headmasterOpinion,jdbcType=VARCHAR},
      actual_expenditure = #{record.actualExpenditure,jdbcType=DECIMAL},
      amount_words = #{record.amountWords,jdbcType=VARCHAR},
      cashier_opinion = #{record.cashierOpinion,jdbcType=VARCHAR},
      allow = #{record.allow,jdbcType=CHAR},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      zip_attachment_id = #{record.zipAttachmentId,jdbcType=VARCHAR},
      zip_attachment_name = #{record.zipAttachmentName,jdbcType=VARCHAR},
      advance = #{record.advance,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.budget.BudgetingProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budgeting_process
    <set >
      <if test="runId != null" >
        run_id = #{runId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="applicationDate != null" >
        application_date = #{applicationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="perPay != null" >
        per_pay = #{perPay,jdbcType=VARCHAR},
      </if>
      <if test="isPer != null" >
        is_per = #{isPer,jdbcType=VARCHAR},
      </if>
      <if test="fixedAssets != null" >
        fixed_assets = #{fixedAssets,jdbcType=VARCHAR},
      </if>
      <if test="budgetItemName != null" >
        budget_item_name = #{budgetItemName,jdbcType=VARCHAR},
      </if>
      <if test="budgetId != null" >
        budget_id = #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="isPayment != null" >
        is_payment = #{isPayment,jdbcType=DECIMAL},
      </if>
      <if test="lineNo != null" >
        line_no = #{lineNo,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null" >
        instructions = #{instructions,jdbcType=VARCHAR},
      </if>
      <if test="scheduleOf != null" >
        schedule_of = #{scheduleOf,jdbcType=VARCHAR},
      </if>
      <if test="departmentHead != null" >
        department_head = #{departmentHead,jdbcType=VARCHAR},
      </if>
      <if test="schoolSupervisorOpinion != null" >
        school_supervisor_opinion = #{schoolSupervisorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="isOpinion != null" >
        is_opinion = #{isOpinion,jdbcType=VARCHAR},
      </if>
      <if test="accountingAdvice != null" >
        accounting_advice = #{accountingAdvice,jdbcType=VARCHAR},
      </if>
      <if test="isBreakUp != null" >
        is_break_up = #{isBreakUp,jdbcType=VARCHAR},
      </if>
      <if test="treasurerSignature != null" >
        treasurer_signature = #{treasurerSignature,jdbcType=VARCHAR},
      </if>
      <if test="treasurerOpinion != null" >
        treasurer_opinion = #{treasurerOpinion,jdbcType=VARCHAR},
      </if>
      <if test="breakUpPlan != null" >
        break_up_plan = #{breakUpPlan,jdbcType=VARCHAR},
      </if>
      <if test="headmasterSignature != null" >
        headmaster_signature = #{headmasterSignature,jdbcType=VARCHAR},
      </if>
      <if test="headmasterOpinion != null" >
        headmaster_opinion = #{headmasterOpinion,jdbcType=VARCHAR},
      </if>
      <if test="actualExpenditure != null" >
        actual_expenditure = #{actualExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="amountWords != null" >
        amount_words = #{amountWords,jdbcType=VARCHAR},
      </if>
      <if test="cashierOpinion != null" >
        cashier_opinion = #{cashierOpinion,jdbcType=VARCHAR},
      </if>
      <if test="allow != null" >
        allow = #{allow,jdbcType=CHAR},
      </if>
      <if test="registerIp != null" >
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="zipAttachmentId != null" >
        zip_attachment_id = #{zipAttachmentId,jdbcType=VARCHAR},
      </if>
      <if test="zipAttachmentName != null" >
        zip_attachment_name = #{zipAttachmentName,jdbcType=VARCHAR},
      </if>
      <if test="advance != null" >
        advance = #{advance,jdbcType=DECIMAL},
      </if>
    </set>
    where budget_process_id = #{budgetProcessId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.budget.BudgetingProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update budgeting_process
    set run_id = #{runId,jdbcType=INTEGER},
      applicant = #{applicant,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      application_date = #{applicationDate,jdbcType=TIMESTAMP},
      per_pay = #{perPay,jdbcType=VARCHAR},
      is_per = #{isPer,jdbcType=VARCHAR},
      fixed_assets = #{fixedAssets,jdbcType=VARCHAR},
      budget_item_name = #{budgetItemName,jdbcType=VARCHAR},
      budget_id = #{budgetId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      is_payment = #{isPayment,jdbcType=DECIMAL},
      line_no = #{lineNo,jdbcType=VARCHAR},
      instructions = #{instructions,jdbcType=VARCHAR},
      schedule_of = #{scheduleOf,jdbcType=VARCHAR},
      department_head = #{departmentHead,jdbcType=VARCHAR},
      school_supervisor_opinion = #{schoolSupervisorOpinion,jdbcType=VARCHAR},
      is_opinion = #{isOpinion,jdbcType=VARCHAR},
      accounting_advice = #{accountingAdvice,jdbcType=VARCHAR},
      is_break_up = #{isBreakUp,jdbcType=VARCHAR},
      treasurer_signature = #{treasurerSignature,jdbcType=VARCHAR},
      treasurer_opinion = #{treasurerOpinion,jdbcType=VARCHAR},
      break_up_plan = #{breakUpPlan,jdbcType=VARCHAR},
      headmaster_signature = #{headmasterSignature,jdbcType=VARCHAR},
      headmaster_opinion = #{headmasterOpinion,jdbcType=VARCHAR},
      actual_expenditure = #{actualExpenditure,jdbcType=DECIMAL},
      amount_words = #{amountWords,jdbcType=VARCHAR},
      cashier_opinion = #{cashierOpinion,jdbcType=VARCHAR},
      allow = #{allow,jdbcType=CHAR},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      zip_attachment_id = #{zipAttachmentId,jdbcType=VARCHAR},
      zip_attachment_name = #{zipAttachmentName,jdbcType=VARCHAR},
      advance = #{advance,jdbcType=DECIMAL}
    where budget_process_id = #{budgetProcessId,jdbcType=INTEGER}
  </update>

  <resultMap id="budgetingProcessFlowRunPrcs" type="com.xoa.model.budget.BudgetingProcessFlowRunPrcs" extends="BaseResultMap" >
    <result column="id" property="id" javaType="int" />
    <result column="flowId" property="flowId" javaType="string" />
    <result column="createrName" property="createrName" javaType="string" />
    <result column="prFlag" property="prFlag" javaType="int" />
    <result column="PRCS_NAME" property="prcsName" javaType="string" />
    <result column="RUN_NAME" property="runName" javaType="string" />
    <result column="endTime" property="endTime" javaType="date" />
    <result column="realPrcsId" property="realPrcsId" javaType="int" />
    <result column="step" property="step" javaType="int"/>
    <result column="codeName" property="codeName" javaType="string"/>
    <result column="frpId" property="frpId" javaType="string"/>
    <result column="ATTACHMENT_ID" property="attachmentId" javaType="string" />
    <result column="ATTACHMENT_NAME" property="attachmentName" javaType="string" />
    <result column="year" property="year" javaType="string" />
    <result column="advance" property="allAdvance" javaType="java.math.BigDecimal" />
    <result column="FrEndtime" property="FrEndtime" javaType="date" />
  </resultMap>

  <select id="queryAllBudgetingProcess"  resultMap="budgetingProcessFlowRunPrcs" parameterType="Map" >

    SELECT
    bp.*, u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    fr.RUN_NAME,
    frp.PRCS_FLAG prFlag,
    fp.PRCS_NAME,
    frp.ID frpId,
    frp.FLOW_PRCS realPrcsId,
    frp.PRCS_ID step,
    frp.DELIVER_TIME endTime
    FROM
    budgeting_process bp
    INNER JOIN flow_run_prcs frp ON frp.RUN_ID = bp.run_id
    AND frp.ID = (
    SELECT
    MAX(frp.ID)
    FROM
    flow_run_prcs frp
    WHERE
    frp.RUN_ID = bp.run_id  )
    INNER JOIN flow_run fr ON fr.RUN_ID = bp.run_id
    INNER JOIN flow_process fp ON fp.FLOW_ID = fr.FLOW_ID
    AND frp.FLOW_PRCS = fp.PRCS_ID
    LEFT JOIN `user` u ON u.USER_ID = bp.applicant
    WHERE bp.applicant= #{userId}
    <!--    <if test="flowAllow != null and flowAllow != '' and flowAllow==0" >
          AND  (select MAX(PRCS_ID) from flow_run_prcs where RUN_ID=bp.run_id)=1
        </if>-->
    <if test="flowAllow != null and flowAllow != '' and flowAllow==1" >
      AND  (select MAX(PRCS_ID) from flow_run_prcs where RUN_ID=bp.run_id)!=1
    </if>
    GROUP BY frp.id ORDER BY  frp.CREATE_TIME DESC
  </select>


  <select id="queryAllBudgetingProcess1"  resultMap="budgetingProcessFlowRunPrcs" parameterType="Map" >

    SELECT
    bp.*, u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    fr.RUN_NAME,
    frp.PRCS_FLAG prFlag,
    fp.PRCS_NAME,
    frp.FLOW_PRCS realPrcsId,
    frp.PRCS_ID step,
    frp.DELIVER_TIME endTime,
    fr.END_TIME frEndTime
    FROM
    budgeting_process bp
    INNER JOIN flow_run_prcs frp ON frp.RUN_ID = bp.run_id
    AND frp.ID = (
    SELECT
    MAX(frp.ID)
    FROM
    flow_run_prcs frp
    WHERE
    frp.RUN_ID = bp.run_id  )
    INNER JOIN flow_run fr ON fr.RUN_ID = bp.run_id
    INNER JOIN flow_process fp ON fp.FLOW_ID = fr.FLOW_ID
    AND frp.FLOW_PRCS = fp.PRCS_ID
    LEFT JOIN `user` u ON u.USER_ID = bp.applicant

    WHERE
    <trim prefixOverrides="and">
      <if test="flowAllow != null and flowAllow != '' and flowAllow==0" >
        AND  (select MAX(PRCS_ID) from flow_run_prcs where RUN_ID=bp.run_id)=1
      </if>
      <if test="flowAllow != null and flowAllow != '' and flowAllow==1" >
        AND  (select MAX(PRCS_ID) from flow_run_prcs where RUN_ID=bp.run_id)!=1
      </if>
      <if test="runid != null and runid != ''" >
        AND  bp.run_id=#{runid}
      </if>
    </trim>

    GROUP BY frp.id ORDER BY  frp.CREATE_TIME DESC
  </select>




  <select id="approvalProcess"  resultMap="budgetingProcessFlowRunPrcs" parameterType="Map">
    SELECT
    bp.*, u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    frp.PRCS_FLAG prFlag,
    fp.PRCS_NAME,
    fr.RUN_NAME,
    frp.FLOW_PRCS realPrcsId,
    frp.PRCS_ID step,
    frp.DELIVER_TIME endTime
    FROM
    budgeting_process bp
    INNER JOIN flow_run_prcs frp ON frp.RUN_ID = bp.run_id AND frp.USER_ID=#{userId}
    AND
    frp.PRCS_FLAG IN ('1', '2')
    INNER JOIN flow_run fr ON fr.RUN_ID = bp.run_id
    INNER JOIN flow_process fp ON fp.FLOW_ID = fr.FLOW_ID
    AND frp.FLOW_PRCS = fp.PRCS_ID
    LEFT JOIN `user` u ON u.USER_ID = bp.applicant
    GROUP BY frp.id ORDER BY  frp.CREATE_TIME DESC

  </select>
  <select id="haveApprovalProcess"   resultMap="budgetingProcessFlowRunPrcs" parameterType="Map">
    SELECT
    bp.*, u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    frp.PRCS_FLAG prFlag,
    fp.PRCS_NAME,
    fr.RUN_NAME,
    frp.FLOW_PRCS realPrcsId,
    frp.PRCS_ID step,
    frp.DELIVER_TIME endTime
    FROM
    budgeting_process bp
    INNER JOIN flow_run_prcs frp ON frp.RUN_ID = bp.run_id AND frp.USER_ID=#{userId}
    AND
    frp.PRCS_FLAG IN ('3', '4')
    INNER JOIN flow_run fr ON fr.RUN_ID = bp.run_id
    INNER JOIN flow_process fp ON fp.FLOW_ID = fr.FLOW_ID
    AND frp.FLOW_PRCS = fp.PRCS_ID
    LEFT JOIN `user` u ON u.USER_ID = bp.applicant
    GROUP BY frp.id ORDER BY  frp.CREATE_TIME DESC

  </select>

  <select id="selBudgetAttach"   resultMap="budgetingProcessFlowRunPrcs" parameterType="Map">
    SELECT
    bp.*, u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    fr.RUN_NAME,
    dept.dept_name,
    bi.year
    FROM  budgeting_process bp ,flow_run fr ,`user` u ,budget_item bi,department dept
    WHERE zip_attachment_id != '' AND zip_attachment_id is not NULL  AND zip_attachment_name!='' AND zip_attachment_name is NOT  NULL
    AND fr.RUN_ID = bp.run_id AND u.USER_ID = bp.applicant AND bi.budget_id = bp.budget_id AND dept.dept_id = bp.dept_id
    <if test="budgetItemNames!=null ">
      and bi.Budget_id in
      <foreach item="name" collection="budgetItemNames" open="(" separator="," close=")">
        <if test="name!=null and name != '' ">
          #{name}
        </if>
      </foreach>
    </if>
    <if test="applicants!=null ">
      and bp.applicant in
      <foreach item="userId" collection="applicants"  open="(" separator="," close=")">
        <if test="userId!=null and userId != '' ">
          #{userId}
        </if>
      </foreach>
    </if>
    <if test="deptId!=null and deptId!=''">
      AND bp.dept_id = #{deptId}
    </if>
    <if test="startDate!=null and endDate==null">
      AND bp.application_date &gt;= #{startDate}
    </if>
    <if test="startDate==null and endDate!=null">
      AND bp.application_date &lt;= #{endDate}
    </if>
    <if test="startDate!=null and endDate!=null">
      AND bp.application_date &gt;= #{startDate} AND bp.application_date &lt;= #{endDate}
    </if>
    GROUP BY bp.run_id
    ORDER BY bp.run_id DESC
  </select>

  <select id="selBudgetAttachCount"   resultType="int" parameterType="Map">
    SELECT count(*)
    FROM  budgeting_process bp ,flow_run fr ,`user` u ,budget_item bi,department dept
    WHERE zip_attachment_id != '' AND zip_attachment_id is not NULL  AND zip_attachment_name!='' AND zip_attachment_name is NOT  NULL
    AND fr.RUN_ID = bp.run_id AND u.USER_ID = bp.applicant AND bi.budget_id = bp.budget_id AND dept.dept_id = bp.dept_id
    <if test="budgetItemNames!=null ">
      and bi.budget_item_name in
      <foreach item="name" collection="budgetItemNames" open="(" separator="," close=")">
        <if test="name!=null and name != '' ">
          #{name}
        </if>
      </foreach>
    </if>
    <if test="applicants!=null ">
      and bp.applicant in
      <foreach item="userId" collection="applicants"  open="(" separator="," close=")">
        <if test="userId!=null and userId != '' ">
          #{userId}
        </if>
      </foreach>
    </if>
    <if test="deptId!=null and deptId!=''">
      AND bp.dept_id = #{deptId}
    </if>
    <if test="startDate!=null and endDate==null">
      AND bp.application_date &gt;= #{startDate}
    </if>
    <if test="startDate==null and endDate!=null">
      AND bp.application_date &lt;= #{endDate}
    </if>
    <if test="startDate!=null and endDate!=null">
      AND bp.application_date &gt;= #{startDate} AND bp.application_date &lt;= #{endDate}
    </if>

  </select>

  <update id="updateAttachmentByRunId" parameterType="com.xoa.model.budget.BudgetingProcess" >
    update budgeting_process
    <set >
      <if test="zipAttachmentId!=null and zipAttachmentName!=''">
        zip_Attachment_Id = #{zipAttachmentId},
      </if>
      <if test="zipAttachmentName!=null and zipAttachmentName!=''">
        zip_Attachment_Name = #{zipAttachmentName},
      </if>
    </set>
    where run_id = #{runId}
  </update>

  <select id="selBudgetProcessByRunId" parameterType="int" resultMap="budgetingProcessFlowRunPrcs">
    SELECT <include refid="Base_Column_List" /> FROM budgeting_process
    WHERE run_id = #{runId}
  </select>

  <select id="selBudgetingProcessByItem"  resultMap="budgetingProcessFlowRunPrcs" parameterType="integer" >
    SELECT
    bp.is_payment,
    bp.*,
    bi.item_money,
    bi.budget_item_begindate,
    bi.budget_item_enddate,
    bi.item_manager,
    bi.item_executer,
    u.USER_NAME createrName,
    fr.FLOW_ID flowId,
    fr.RUN_NAME,
    frp.PRCS_FLAG prFlag,
    fp.PRCS_NAME,
    frp.ID frpId,
    frp.FLOW_PRCS realPrcsId,
    frp.PRCS_ID step,
    frp.DELIVER_TIME endTime,
    fr.END_TIME frEndTime,
    dept.dept_name,
    bp.advance
    FROM
    department dept,
    budget_item bi,
    budgeting_process bp
    INNER JOIN flow_run_prcs frp ON frp.RUN_ID = bp.run_id
    AND frp.ID = (
    SELECT
    MAX(frp.ID)
    FROM
    flow_run_prcs frp
    WHERE
    frp.RUN_ID = bp.run_id  )
    INNER JOIN flow_run fr ON fr.RUN_ID = bp.run_id
    INNER JOIN flow_process fp ON fp.FLOW_ID = fr.FLOW_ID
    AND frp.FLOW_PRCS = fp.PRCS_ID
    LEFT JOIN `user` u ON u.USER_ID = bp.applicant
    WHERE
    dept.dept_id = bp.dept_id
    AND bp.budget_id = bi.budget_id
    AND (select MAX(PRCS_ID) from flow_run_prcs where RUN_ID=bp.run_id)!=1
    <if test="budgetId!=null and budgetId != '' ">
      AND bp.budget_id  =  #{budgetId}
    </if>
    GROUP BY frp.id ORDER BY  frp.CREATE_TIME DESC
  </select>

  <select id="selAllAdvanceByBudgetId" resultType="java.math.BigDecimal" parameterType="int" >
    SELECT IFNULL(round(SUM(advance),2),0) FROM budgeting_process WHERE budget_id = #{budgetId}
  </select>

  <select id="selAllAdvanceByBudgetIdAndRunId" resultType="java.math.BigDecimal" parameterType="map" >
    SELECT IFNULL(SUM(advance),0) FROM budgeting_process WHERE budget_id = #{budgetId} AND run_id != #{runId}
  </select>

  <select id="selBudgetFlowPrcs" resultType="int" parameterType="int" >
    SELECT FLOW_PRCS FROM flow_run_prcs WHERE RUN_ID = #{runId} GROUP BY ID DESC LIMIT 0,1
  </select>
</mapper>