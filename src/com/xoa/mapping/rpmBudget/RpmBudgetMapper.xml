<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.rpmBudget.RpmBudgetMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.rpmBudget.RpmBudget" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="BUDGET_ID" property="budgetId" jdbcType="INTEGER" />
    <result column="TOPIC_ID" property="topicId" jdbcType="INTEGER" />
    <result column="RESEARCH_CONTENTS" property="researchContents" jdbcType="VARCHAR" />
    <result column="EXPENDITURE_CATEGORY" property="expenditureCategory" jdbcType="VARCHAR" />
    <result column="MONOVALENT" property="monovalent" jdbcType="DECIMAL" />
    <result column="NUMBER" property="number" jdbcType="INTEGER" />
    <result column="TOTAL_FUNDING" property="totalFunding" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BUDGET_ID, TOPIC_ID, RESEARCH_CONTENTS, EXPENDITURE_CATEGORY, MONOVALENT, NUMBER, 
    TOTAL_FUNDING
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.rpmBudget.RpmBudgetExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rpm_budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from rpm_budget
    where BUDGET_ID = #{budgetId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rpm_budget
    where BUDGET_ID = #{budgetId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.rpmBudget.RpmBudgetExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rpm_budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.rpmBudget.RpmBudget" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into rpm_budget (BUDGET_ID, TOPIC_ID, RESEARCH_CONTENTS, 
      EXPENDITURE_CATEGORY, MONOVALENT, NUMBER, 
      TOTAL_FUNDING)
    values (#{budgetId,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{researchContents,jdbcType=VARCHAR}, 
      #{expenditureCategory,jdbcType=VARCHAR}, #{monovalent,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER}, 
      #{totalFunding,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.rpmBudget.RpmBudget" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into rpm_budget
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="budgetId != null" >
        BUDGET_ID,
      </if>
      <if test="topicId != null" >
        TOPIC_ID,
      </if>
      <if test="researchContents != null" >
        RESEARCH_CONTENTS,
      </if>
      <if test="expenditureCategory != null" >
        EXPENDITURE_CATEGORY,
      </if>
      <if test="monovalent != null" >
        MONOVALENT,
      </if>
      <if test="number != null" >
        NUMBER,
      </if>
      <if test="totalFunding != null" >
        TOTAL_FUNDING,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="budgetId != null" >
        #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="topicId != null" >
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="researchContents != null" >
        #{researchContents,jdbcType=VARCHAR},
      </if>
      <if test="expenditureCategory != null" >
        #{expenditureCategory,jdbcType=VARCHAR},
      </if>
      <if test="monovalent != null" >
        #{monovalent,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="totalFunding != null" >
        #{totalFunding,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.rpmBudget.RpmBudgetExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from rpm_budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rpm_budget
    <set >
      <if test="record.budgetId != null" >
        BUDGET_ID = #{record.budgetId,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null" >
        TOPIC_ID = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.researchContents != null" >
        RESEARCH_CONTENTS = #{record.researchContents,jdbcType=VARCHAR},
      </if>
      <if test="record.expenditureCategory != null" >
        EXPENDITURE_CATEGORY = #{record.expenditureCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.monovalent != null" >
        MONOVALENT = #{record.monovalent,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null" >
        NUMBER = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.totalFunding != null" >
        TOTAL_FUNDING = #{record.totalFunding,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rpm_budget
    set BUDGET_ID = #{record.budgetId,jdbcType=INTEGER},
      TOPIC_ID = #{record.topicId,jdbcType=INTEGER},
      RESEARCH_CONTENTS = #{record.researchContents,jdbcType=VARCHAR},
      EXPENDITURE_CATEGORY = #{record.expenditureCategory,jdbcType=VARCHAR},
      MONOVALENT = #{record.monovalent,jdbcType=DECIMAL},
      NUMBER = #{record.number,jdbcType=INTEGER},
      TOTAL_FUNDING = #{record.totalFunding,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.rpmBudget.RpmBudget" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rpm_budget
    <set >
      <if test="topicId != null" >
        TOPIC_ID = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="researchContents != null" >
        RESEARCH_CONTENTS = #{researchContents,jdbcType=VARCHAR},
      </if>
      <if test="expenditureCategory != null" >
        EXPENDITURE_CATEGORY = #{expenditureCategory,jdbcType=VARCHAR},
      </if>
      <if test="monovalent != null" >
        MONOVALENT = #{monovalent,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        NUMBER = #{number,jdbcType=INTEGER},
      </if>
      <if test="totalFunding != null" >
        TOTAL_FUNDING = #{totalFunding,jdbcType=DECIMAL},
      </if>
    </set>
    where BUDGET_ID = #{budgetId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.rpmBudget.RpmBudget" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rpm_budget
    set TOPIC_ID = #{topicId,jdbcType=INTEGER},
      RESEARCH_CONTENTS = #{researchContents,jdbcType=VARCHAR},
      EXPENDITURE_CATEGORY = #{expenditureCategory,jdbcType=VARCHAR},
      MONOVALENT = #{monovalent,jdbcType=DECIMAL},
      NUMBER = #{number,jdbcType=INTEGER},
      TOTAL_FUNDING = #{totalFunding,jdbcType=DECIMAL}
    where BUDGET_ID = #{budgetId,jdbcType=INTEGER}
  </update>

  <delete id="deleBudget">
    delete from rpm_budget
    where TOPIC_ID = #{topicId}
  </delete>

  <select id="selectById" resultMap="BaseResultMap">
    SELECT rpm_budget.* FROM rpm_budget WHERE TOPIC_ID=#{topicId}
  </select>
</mapper>