<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.equipment.LimsCommonCodeMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.common.SysCode">
    <id column="CODE_ID" property="codeId" javaType="int"/>
    <result column="CODE_NO" property="codeNo" javaType="string"/>
    <result column="CODE_NAME" property="codeName" javaType="string"/>
    <result column="CODE_ORDER" property="codeOrder" javaType="string"/>
    <result column="PARENT_NO" property="parentNo" javaType="string"/>
    <result column="CODE_FLAG" property="codeFlag" javaType="string"/>
    <result column="CODE_EXT" property="codeExt" javaType="string"/>
    <result column="IS_CAN" property="isCan" javaType="string"/>
    <result column="IS_REMIND" property="isRemind" javaType="string"/>
    <result column="IS_IPHONE" property="isIphone" javaType="string"/>
  </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.equipment.LimsCommonCode" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CODE_TYEP_DECS" property="codeTyepDecs" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CODE_TYEP_ID, CODE_TYEP_NO, CODE_TYEP_NAME, PARENT_TYEP_NO, CODE_SORT, DELETE_FLAG, 
    ADD_USERNAME, UPDATE_TIME,DATA_SOURCE
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CODE_TYEP_DECS
  </sql>

  <select id="searchList" parameterType="map" resultMap="BaseResultMap">
    select
    sys_code.*
    from sys_code
    where 1=1
      <if test="type != null and ''!=type">
        AND CODE_NAME LIKE CONCAT('%',#{type},'%')
      </if>
      <if test="parent != null and ''!=parent">
        AND PARENT_NO ='0'
      </if>
      <if test="name != null and ''!=name">
        AND CODE_NAME LIKE CONCAT('%',#{name},'%')
      </if>
    order by CODE_ORDER asc
  </select>

  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.equipment.LimsCommonCodeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lims_common_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.equipment.LimsCommonCodeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_common_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lims_common_code
    where CODE_TYEP_ID = #{codeTyepId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_common_code
    where CODE_TYEP_ID = #{codeTyepId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsCommonCodeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_common_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsCommonCode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_common_code (CODE_TYEP_ID, CODE_TYEP_NO, CODE_TYEP_NAME, 
      PARENT_TYEP_NO, CODE_SORT, DELETE_FLAG, 
      ADD_USERNAME, UPDATE_TIME, CODE_TYEP_DECS
      )
    values (#{codeTyepId,jdbcType=INTEGER}, #{codeTyepNo,jdbcType=VARCHAR}, #{codeTyepName,jdbcType=VARCHAR}, 
      #{parentTyepNo,jdbcType=VARCHAR}, #{codeSort,jdbcType=INTEGER}, #{deleteFlag,jdbcType=CHAR},
      #{addUsername,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{codeTyepDecs,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsCommonCode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_common_code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="codeTyepId != null" >
        CODE_TYEP_ID,
      </if>
      <if test="codeTyepNo != null" >
        CODE_TYEP_NO,
      </if>
      <if test="codeTyepName != null" >
        CODE_TYEP_NAME,
      </if>
      <if test="parentTyepNo != null" >
        PARENT_TYEP_NO,
      </if>
      <if test="codeSort != null" >
        CODE_SORT,
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG,
      </if>
      <if test="addUsername != null" >
        ADD_USERNAME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="codeTyepDecs != null" >
        CODE_TYEP_DECS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="codeTyepId != null" >
        #{codeTyepId,jdbcType=INTEGER},
      </if>
      <if test="codeTyepNo != null" >
        #{codeTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="codeTyepName != null" >
        #{codeTyepName,jdbcType=VARCHAR},
      </if>
      <if test="parentTyepNo != null" >
        #{parentTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="codeSort != null" >
        #{codeSort,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="addUsername != null" >
        #{addUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeTyepDecs != null" >
        #{codeTyepDecs,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsCommonCodeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_common_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    <set >
      <if test="record.codeTyepId != null" >
        CODE_TYEP_ID = #{record.codeTyepId,jdbcType=INTEGER},
      </if>
      <if test="record.codeTyepNo != null" >
        CODE_TYEP_NO = #{record.codeTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="record.codeTyepName != null" >
        CODE_TYEP_NAME = #{record.codeTyepName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTyepNo != null" >
        PARENT_TYEP_NO = #{record.parentTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="record.codeSort != null" >
        CODE_SORT = #{record.codeSort,jdbcType=INTEGER},
      </if>
      <if test="record.deleteFlag != null" >
        DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.addUsername != null" >
        ADD_USERNAME = #{record.addUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.codeTyepDecs != null" >
        CODE_TYEP_DECS = #{record.codeTyepDecs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    set CODE_TYEP_ID = #{record.codeTyepId,jdbcType=INTEGER},
      CODE_TYEP_NO = #{record.codeTyepNo,jdbcType=VARCHAR},
      CODE_TYEP_NAME = #{record.codeTyepName,jdbcType=VARCHAR},
      PARENT_TYEP_NO = #{record.parentTyepNo,jdbcType=VARCHAR},
      CODE_SORT = #{record.codeSort,jdbcType=INTEGER},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      ADD_USERNAME = #{record.addUsername,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CODE_TYEP_DECS = #{record.codeTyepDecs,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    set CODE_TYEP_ID = #{record.codeTyepId,jdbcType=INTEGER},
      CODE_TYEP_NO = #{record.codeTyepNo,jdbcType=VARCHAR},
      CODE_TYEP_NAME = #{record.codeTyepName,jdbcType=VARCHAR},
      PARENT_TYEP_NO = #{record.parentTyepNo,jdbcType=VARCHAR},
      CODE_SORT = #{record.codeSort,jdbcType=INTEGER},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      ADD_USERNAME = #{record.addUsername,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsCommonCode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    <set >
      <if test="codeTyepNo != null" >
        CODE_TYEP_NO = #{codeTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="codeTyepName != null" >
        CODE_TYEP_NAME = #{codeTyepName,jdbcType=VARCHAR},
      </if>
      <if test="parentTyepNo != null" >
        PARENT_TYEP_NO = #{parentTyepNo,jdbcType=VARCHAR},
      </if>
      <if test="codeSort != null" >
        CODE_SORT = #{codeSort,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="addUsername != null" >
        ADD_USERNAME = #{addUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeTyepDecs != null" >
        CODE_TYEP_DECS = #{codeTyepDecs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where CODE_TYEP_ID = #{codeTyepId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.equipment.LimsCommonCode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    set CODE_TYEP_NO = #{codeTyepNo,jdbcType=VARCHAR},
      CODE_TYEP_NAME = #{codeTyepName,jdbcType=VARCHAR},
      PARENT_TYEP_NO = #{parentTyepNo,jdbcType=VARCHAR},
      CODE_SORT = #{codeSort,jdbcType=INTEGER},
      DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      ADD_USERNAME = #{addUsername,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CODE_TYEP_DECS = #{codeTyepDecs,jdbcType=LONGVARCHAR}
    where CODE_TYEP_ID = #{codeTyepId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.LimsCommonCode" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_common_code
    set CODE_TYEP_NO = #{codeTyepNo,jdbcType=VARCHAR},
      CODE_TYEP_NAME = #{codeTyepName,jdbcType=VARCHAR},
      PARENT_TYEP_NO = #{parentTyepNo,jdbcType=VARCHAR},
      CODE_SORT = #{codeSort,jdbcType=INTEGER},
      DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      ADD_USERNAME = #{addUsername,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where CODE_TYEP_ID = #{codeTyepId,jdbcType=INTEGER}
  </update>


  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.xoa.model.equipment.LimsCommonCode">
    SELECT  *
     FROM lims_common_code
     <where>
       <if test="codeTypeNos!=null">
         CODE_TYEP_NO in
         <foreach collection="codeTypeNos" separator="," index="index" item="codeTypeNo" close=")" open="(">
           #{codeTypeNo}
         </foreach>
       </if>
     </where>
  </select>


  <delete id="deleteByIds" parameterType="map">
    DELETE from lims_common_code
    WHERE CODE_TYEP_ID IN
    <foreach collection="codeTyepIds" separator="," open="(" close=")" item="codeTyepIds" index="index">
      #{codeTyepIds}
    </foreach>
  </delete>


  <select id="findParentType" parameterType="map" resultMap="BaseResultMap">
    select CODE_TYEP_NAME,CODE_TYEP_ID,PARENT_TYEP_NO from lims_common_code
     where PARENT_TYEP_NO=''
  </select>


  <select id="findByParTyepNo" resultMap="BaseResultMap" parameterType="map">
    SELECT
    *
    from lims_common_code
    where  PARENT_TYEP_NO = #{parentTyepNo}
  </select>


  <!--上移-->
  <select id="moveUp" parameterType="map" resultType="com.xoa.model.equipment.LimsCommonCode">
    select * from lims_common_code lcc where lcc.CODE_SORT &lt; #{codeSort} order by lcc.CODE_SORT desc limit 0,1
  </select>

  <!--下移-->
  <select id="moveDown" parameterType="map" resultType="com.xoa.model.equipment.LimsCommonCode">
    select * from lims_common_code lcc where lcc.CODE_SORT &gt; #{codeSort} order by lcc.CODE_SORT desc limit 0,1
  </select>

  <!--查找-->
  <select id="findCodeSort" parameterType="map" resultType="com.xoa.model.equipment.LimsCommonCode">
    select * from lims_common_code lcc where lcc.CODE_SORT = #{codeSort}
  </select>

  <!--修改排序-->
  <update id="updCodeSort" parameterType="map">
    UPDATE  lims_common_code SET CODE_SORT = #{codeSort} where CODE_TYEP_ID = #{codeTyepId}
  </update>

  <select id="finCodeTypeName" resultMap="BaseResultMap" parameterType="string">
    select lc.CODE_TYEP_NAME
    from lims_common_code lc
    WHERE lc.CODE_TYEP_NO IN
    <foreach collection="suppliTypeIds" item="suppliTypeIds" open="(" close=")" separator=",">
      #{suppliTypeIds}
    </foreach>

  </select>

  <!--//查看此编码是否存在
  Integer codeTypeNo(String codeTypeNo);-->
  <select id="codeTypeNo" resultType="Integer" parameterType="String">
    select CODE_TYEP_ID from lims_common_code where CODE_TYEP_NO=#{codeTypeNo}
  </select>
<select id="selectCodeTypeNameByCodeTypeNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lims_common_code
    where lims_common_code.CODE_TYEP_NO in
    <foreach collection="array" item="codeNo" index="index"
             open="(" close=")" separator=",">
        #{codeNo}
    </foreach>
</select>

  <select id="selectCodeTypeName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    sys_code.*
    from
    sys_code
    where
    CODE_NO = #{codeNo}
  </select>

  <select id="selectAllCommonCode" resultMap="BaseResultMap"> /*已修改*/
    SELECT CODE_NAME,CODE_NO FROM sys_code WHERE CODE_NO= #{parentTyepNo,jdbcType=VARCHAR}
  </select>

  <select id="selectByCommonCode" resultMap="BaseResultMap">
    SELECT CODE_NAME,CODE_NO FROM sys_code WHERE PARENT_NO= #{parentNo,jdbcType=VARCHAR}
  </select>

 <!-- 根据业务类型编码删除父类以及子类信息-->

<delete id="deleteByCode" parameterType="java.util.HashMap">
     	 DELETE FROM lims_common_code WHERE CODE_TYEP_NO= #{codeTyepNo,jdbcType=VARCHAR} OR PARENT_TYEP_NO= #{codeTyepNo,jdbcType=VARCHAR}
  </delete>
  <!--模糊查询 -->
  <select id="searchLike" resultMap="BaseResultMap" >
    select CODE_ID,CODE_NO,CODE_NAME,PARENT_NO
    from sys_code
    where CODE_NAME LIKE concat('%',#{codeName},'%')
  </select>

  <select id="selectCodeTypeNames" resultMap="BaseResultMap" parameterType="java.util.List">
    select
    <include refid="Base_Column_List"/>
    from
    lims_common_code
    where
    CODE_TYEP_NO in
    <foreach collection="list" item="codeTyepNo" index="index" open="(" separator="," close=")" >
      #{codeTyepNo}
    </foreach>
  </select>
</mapper>