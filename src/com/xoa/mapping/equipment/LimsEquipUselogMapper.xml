<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.equipment.LimsEquipUselogMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.LimsEquipUselog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="USE_LOG_ID" jdbcType="INTEGER" property="useLogId" />
    <result column="EQUIP_ID" jdbcType="INTEGER" property="equipId" />
    <result column="EQUIP_NO" jdbcType="VARCHAR" property="equipNo" />
    <result column="EQUIP_NAME" jdbcType="VARCHAR" property="equipName" />
    <result column="MODEL_NO" jdbcType="VARCHAR" property="modelNo" />
    <result column="SPEC" jdbcType="VARCHAR" property="spec" />
    <result column="OUTBOUND_TYPE" jdbcType="VARCHAR" property="outboundType" />
    <result column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
    <result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName" />
    <result column="BORROW_TIME" jdbcType="TIMESTAMP" property="borrowTime" />
    <result column="RETURN_TIME" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="BORROW_USER" jdbcType="VARCHAR" property="borrowUser" />
    <result column="BORROW_USER_ID" jdbcType="VARCHAR" property="borrowUserId" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="STEPS_EXE_CODE" property="stepsExeCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    USE_LOG_ID, EQUIP_ID, EQUIP_NO, EQUIP_NAME, MODEL_NO, SPEC, OUTBOUND_TYPE, PROJECT_ID, 
    PROJECT_NAME, BORROW_TIME, RETURN_TIME, BORROW_USER, BORROW_USER_ID, MEMO
  </sql>
  <select id="selectByExample" parameterType="com.xoa.model.equipment.LimsEquipUselogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_equip_uselog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lims_equip_uselog
    where USE_LOG_ID = #{useLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_uselog
    where USE_LOG_ID = #{useLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsEquipUselogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_uselog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsEquipUselog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_uselog (USE_LOG_ID, EQUIP_ID, EQUIP_NO, 
      EQUIP_NAME, MODEL_NO, SPEC, 
      OUTBOUND_TYPE, PROJECT_ID, PROJECT_NAME, 
      BORROW_TIME, RETURN_TIME, BORROW_USER, 
      BORROW_USER_ID, MEMO)
    values (#{useLogId,jdbcType=INTEGER}, #{equipId,jdbcType=INTEGER}, #{equipNo,jdbcType=VARCHAR}, 
      #{equipName,jdbcType=VARCHAR}, #{modelNo,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, 
      #{outboundType,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{borrowTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, #{borrowUser,jdbcType=VARCHAR}, 
      #{borrowUserId,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsEquipUselog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_uselog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stepsExeCode != null" >
        STEPS_EXE_CODE,
      </if>
      <if test="equipId != null">
        EQUIP_ID,
      </if>
      <if test="equipNo != null">
        EQUIP_NO,
      </if>
      <if test="equipName != null">
        EQUIP_NAME,
      </if>
      <if test="modelNo != null">
        MODEL_NO,
      </if>
      <if test="spec != null">
        SPEC,
      </if>
      <if test="outboundType != null">
        OUTBOUND_TYPE,
      </if>
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="projectName != null">
        PROJECT_NAME,
      </if>
      <if test="borrowTime != null">
        BORROW_TIME,
      </if>
      <if test="returnTime != null">
        RETURN_TIME,
      </if>
      <if test="borrowUser != null">
        BORROW_USER,
      </if>
      <if test="borrowUserId != null">
        BORROW_USER_ID,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stepsExeCode != null" >
        #{stepsExeCode,jdbcType=VARCHAR},
      </if>
      <if test="equipId != null">
        #{equipId,jdbcType=INTEGER},
      </if>
      <if test="equipNo != null">
        #{equipNo,jdbcType=VARCHAR},
      </if>
      <if test="equipName != null">
        #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="modelNo != null">
        #{modelNo,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="outboundType != null">
        #{outboundType,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null">
        #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowUser != null">
        #{borrowUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null">
        #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsEquipUselogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_equip_uselog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_uselog
    <set>
      <if test="record.useLogId != null">
        USE_LOG_ID = #{record.useLogId,jdbcType=INTEGER},
      </if>
      <if test="record.equipId != null">
        EQUIP_ID = #{record.equipId,jdbcType=INTEGER},
      </if>
      <if test="record.equipNo != null">
        EQUIP_NO = #{record.equipNo,jdbcType=VARCHAR},
      </if>
      <if test="record.equipName != null">
        EQUIP_NAME = #{record.equipName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelNo != null">
        MODEL_NO = #{record.modelNo,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null">
        SPEC = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.outboundType != null">
        OUTBOUND_TYPE = #{record.outboundType,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        PROJECT_NAME = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowTime != null">
        BORROW_TIME = #{record.borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null">
        RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.borrowUser != null">
        BORROW_USER = #{record.borrowUser,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowUserId != null">
        BORROW_USER_ID = #{record.borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_uselog
    set USE_LOG_ID = #{record.useLogId,jdbcType=INTEGER},
      EQUIP_ID = #{record.equipId,jdbcType=INTEGER},
      EQUIP_NO = #{record.equipNo,jdbcType=VARCHAR},
      EQUIP_NAME = #{record.equipName,jdbcType=VARCHAR},
      MODEL_NO = #{record.modelNo,jdbcType=VARCHAR},
      SPEC = #{record.spec,jdbcType=VARCHAR},
      OUTBOUND_TYPE = #{record.outboundType,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      PROJECT_NAME = #{record.projectName,jdbcType=VARCHAR},
      BORROW_TIME = #{record.borrowTime,jdbcType=TIMESTAMP},
      RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      BORROW_USER = #{record.borrowUser,jdbcType=VARCHAR},
      BORROW_USER_ID = #{record.borrowUserId,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsEquipUselog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_uselog
    <set>
      <if test="equipId != null">
        EQUIP_ID = #{equipId,jdbcType=INTEGER},
      </if>
      <if test="equipNo != null">
        EQUIP_NO = #{equipNo,jdbcType=VARCHAR},
      </if>
      <if test="equipName != null">
        EQUIP_NAME = #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="modelNo != null">
        MODEL_NO = #{modelNo,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        SPEC = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="outboundType != null">
        OUTBOUND_TYPE = #{outboundType,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null">
        BORROW_TIME = #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowUser != null">
        BORROW_USER = #{borrowUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null">
        BORROW_USER_ID = #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where USE_LOG_ID = #{useLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.LimsEquipUselog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_uselog
    set EQUIP_ID = #{equipId,jdbcType=INTEGER},
      EQUIP_NO = #{equipNo,jdbcType=VARCHAR},
      EQUIP_NAME = #{equipName,jdbcType=VARCHAR},
      MODEL_NO = #{modelNo,jdbcType=VARCHAR},
      SPEC = #{spec,jdbcType=VARCHAR},
      OUTBOUND_TYPE = #{outboundType,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      BORROW_TIME = #{borrowTime,jdbcType=TIMESTAMP},
      RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      BORROW_USER = #{borrowUser,jdbcType=VARCHAR},
      BORROW_USER_ID = #{borrowUserId,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR}
    where USE_LOG_ID = #{useLogId,jdbcType=INTEGER}
  </update>

  <select id="findInstrumentNot" resultMap="BaseResultMap" parameterType="integer">
    SELECT
    <include refid = "Base_Column_List" />
    FROM
    lims_equip_uselog
    WHERE
    PROJECT_ID = #{projectId} and
    RETURN_TIME IS NULL
    OR RETURN_TIME = ''
    GROUP BY EQUIP_ID
  </select>

  <delete id="del" parameterType="map">
    DELETE  from lims_equip_uselog
    WHERE
    PROJECT_ID = #{projectId}
    AND
    STEPS_EXE_CODE=#{sTepsExeCode}
    AND
    EQUIP_ID = #{equipId}
  </delete>


  <select id="equipUseLogData" parameterType="map" resultType="map">
      SELECT
	/*PROJECT_NO,*/
	/*lims_project.PROJECT_NAME,*/
	BORROW_TIME,
	RETURN_TIME,
	BORROW_USER,
	CLOUD_SN,
	lims_equipment.MEMO,
	lims_equipment.PROPERTY_NO
  FROM
      lims_equip_uselog
      LEFT JOIN lims_equipment ON lims_equip_uselog.EQUIP_ID = lims_equipment.EQUIP_ID
      /*LEFT JOIN lims_project ON lims_project.PROJECT_ID = lims_equip_uselog.PROJECT_ID*/
  WHERE
      lims_equip_uselog.EQUIP_ID = #{equipId}
    <if test="borrowerUser!=null and borrowerUser!=''">
      and  lims_equip_uselog.BORROW_USER in (SELECT USER_ID  FROM `user` WHERE USER_NAME LIKE CONCAT('%',#{borrowerUser},'%'))
    </if>
    <if test="borrowTime!=null and borrowTime!=''">
      and  lims_equip_uselog.BORROW_TIME &gt;= (#{borrowTime})
    </if>
    <if test="returnTime!=null and returnTime!=''">
      and  lims_equip_uselog.RETURN_TIME &lt;=#{returnTime}
    </if>
    <if test="projectNo!=null and projectNo!=''">
      and  lims_project.PROJECT_NO LIKE CONCAT('%',#{projectNo},'%')
    </if>
    <if test="projectName!=null and projectName!=''">
      and  lims_project.PROJECT_NAME LIKE CONCAT('%',#{projectName},'%')
    </if>
  </select>


  <select id="equipUseLogCount" parameterType="map" resultType="integer">
      SELECT
      COUNT(*)
      FROM
      lims_equip_uselog
      LEFT JOIN lims_equipment ON lims_equip_uselog.EQUIP_ID = lims_equipment.EQUIP_ID
      /*LEFT JOIN lims_project ON lims_project.PROJECT_ID = lims_equip_uselog.PROJECT_ID*/
      WHERE
      lims_equip_uselog.EQUIP_ID = #{equipId}
      <if test="borrowerUser!=null and borrowerUser!=''">
        and  lims_equip_uselog.BORROW_USER in (SELECT USER_ID  FROM `user` WHERE USER_NAME LIKE CONCAT('%',#{borrowerUser},'%'))
      </if>
      <if test="borrowTime!=null and borrowTime!=''">
        and  lims_equip_uselog.BORROW_TIME &gt;= (#{borrowTime})
      </if>
      <if test="returnTime!=null and returnTime!=''">
        and  lims_equip_uselog.RETURN_TIME &lt;=#{returnTime}
      </if>
    <!--  <if test="projectNo!=null and projectNo!=''">
        and  lims_project.PROJECT_NO LIKE CONACT('%',#{projectNo},'%')
      </if>
      <if test="projectName!=null and projectName!=''">
        and  lims_project.PROJECT_NAME LIKE CONACT('%',#{projectName},'%')
      </if>-->
  </select>

  <select id="getEquipUsed" parameterType="map" resultMap="BaseResultMap">
     select u.USER_NAME as BORROW_USER , leu.EQUIP_NO,leu.EQUIP_NAME,lel.BORROW_TIME
     FROM user u,lims_equip_lend lel,lims_equip_lendlist lell,lims_equip_uselog leu
     where
     DEPT_ID = #{deptId}
     and lel.LEND_ID = lell.LEND_ID
     and lel.BORROWER_USER = u.USER_ID
     and lell.RETURN_STATUS = 0
     and leu.EQUIP_ID = lell.EQUIP_ID
     and leu.PROJECT_ID = #{projectId}
  </select>
  <update id="updateReturnTime" parameterType="map">
    UPDATE lims_equip_uselog
    SET RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP}
    where PROJECT_ID = #{projectId}
  </update>
</mapper>