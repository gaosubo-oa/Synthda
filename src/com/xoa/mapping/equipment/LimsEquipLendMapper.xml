<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.equipment.LimsEquipLendMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.LimsEquipLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LEND_ID" property="lendId" jdbcType="INTEGER" />
    <result column="BORROWER_USER" property="borrowerUser" jdbcType="VARCHAR" />
    <result column="BORROWER_DETP_ID" property="borrowerDetpId" jdbcType="INTEGER" />
    <result column="BORROW_TIME" property="borrowTime" jdbcType="TIMESTAMP" />
    <result column="LEND_DEPT_ID" property="lendDeptId" jdbcType="INTEGER" />
    <result column="RETURN_STATUS" property="returnStatus" jdbcType="VARCHAR" />
    <result column="EXPECT_RETURN_DATE" property="expectReturnDate" jdbcType="TIMESTAMP" />
    <result column="REMINDER_TIME" property="reminderTime" jdbcType="VARCHAR" />
    <result column="BORROWER_OPERATION_USER" property="borrowerOperationUser" jdbcType="VARCHAR" />
    <result column="BORROW_OPERATION_TIME" property="borrowOperationTime" jdbcType="DATE" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="APPROVER" property="approver" jdbcType="VARCHAR" />
    <result column="APPROVER_TIME" property="approverTime" jdbcType="TIMESTAMP" />
    <result column="APPROVAL_STATUS" property="approverStatus" jdbcType="VARCHAR" />
    <result column="WORKFLOW_NO" property="workflowNo" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LEND_ID, BORROWER_USER, BORROWER_DETP_ID, BORROW_TIME, LEND_DEPT_ID, RETURN_STATUS, EXPECT_RETURN_DATE, 
    REMINDER_TIME, BORROWER_OPERATION_USER, BORROW_OPERATION_TIME, MEMO,WORKFLOW_NO,APPROVER,APPROVER_TIME,APPROVAL_STATUS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.equipment.LimsEquipLendExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_equip_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lims_equip_lend
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_lend
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsEquipLendExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsEquipLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_lend (LEND_ID, BORROWER_USER, BORROWER_DETP_ID, 
      BORROW_TIME, LEND_DEPT_ID, RETURN_STATUS, 
      EXPECT_RETURN_DATE, REMINDER_TIME, BORROWER_OPERATION_USER, 
      BORROW_OPERATION_TIME, MEMO, WORKFLOW_NO,APPROVER,APPROVER_TIME,APPROVAL_STATUS
      )
    values (#{lendId,jdbcType=INTEGER}, #{borrowerUser,jdbcType=VARCHAR}, #{borrowerDetpId,jdbcType=INTEGER}, 
      #{borrowTime,jdbcType=TIMESTAMP}, #{lendDeptId,jdbcType=INTEGER}, #{returnStatus,jdbcType=VARCHAR},
      #{expectReturnDate,jdbcType=TIMESTAMP}, #{reminderTime,jdbcType=VARCHAR}, #{borrowerOperationUser,jdbcType=VARCHAR},
      #{borrowOperationTime,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{workflowNo,jdbcType=VARCHAR}, #{approver,jdbcType=VARCHAR}
    , #{approverTime}, #{approverStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsEquipLend"  useGeneratedKeys="true" keyProperty="lendId" keyColumn="LEND_ID">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_lend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lendId != null" >
        LEND_ID,
      </if>
      <if test="borrowerUser != null" >
        BORROWER_USER,
      </if>
      <if test="borrowerDetpId != null" >
        BORROWER_DETP_ID,
      </if>
      <if test="borrowTime != null" >
        BORROW_TIME,
      </if>
      <if test="lendDeptId != null" >
        LEND_DEPT_ID,
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS,
      </if>
      <if test="expectReturnDate != null" >
        EXPECT_RETURN_DATE,
      </if>
      <if test="reminderTime != null" >
        REMINDER_TIME,
      </if>
      <if test="borrowerOperationUser != null" >
        BORROWER_OPERATION_USER,
      </if>
      <if test="borrowOperationTime != null" >
        BORROW_OPERATION_TIME,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="workflowNo != null" >
        WORKFLOW_NO,
      </if>
      <if test="approver != null" >
        APPROVER,
      </if>
      <if test="approverTime != null" >
        APPROVER_TIME,
      </if>
      <if test="approverStatus != null" >
        APPROVAL_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lendId != null" >
        #{lendId,jdbcType=INTEGER},
      </if>
      <if test="borrowerUser != null" >
        #{borrowerUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowerDetpId != null" >
        #{borrowerDetpId,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lendDeptId != null" >
        #{lendDeptId,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        #{returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="expectReturnDate != null" >
        #{expectReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reminderTime != null" >
        #{reminderTime,jdbcType=VARCHAR},
      </if>
      <if test="borrowerOperationUser != null" >
        #{borrowerOperationUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowOperationTime != null" >
        #{borrowOperationTime,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null" >
        #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="approver != null" >
        #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approverTime != null" >
        #{approverTime}
      </if>
      <if test="approverStatus != null" >
        #{approverStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsEquipLendExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_equip_lend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_lend
    <set >
      <if test="record.lendId != null" >
        LEND_ID = #{record.lendId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowerUser != null" >
        BORROWER_USER = #{record.borrowerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowerDetpId != null" >
        BORROWER_DETP_ID = #{record.borrowerDetpId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowTime != null" >
        BORROW_TIME = #{record.borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lendDeptId != null" >
        LEND_DEPT_ID = #{record.lendDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.returnStatus != null" >
        RETURN_STATUS = #{record.returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.expectReturnDate != null" >
        EXPECT_RETURN_DATE = #{record.expectReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reminderTime != null" >
        REMINDER_TIME = #{record.reminderTime,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowerOperationUser != null" >
        BORROWER_OPERATION_USER = #{record.borrowerOperationUser,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowOperationTime != null" >
        BORROW_OPERATION_TIME = #{record.borrowOperationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowNo != null" >
      WORKFLOW_NO = #{record.workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="record.approver != null" >
        APPROVER = #{record.approver,jdbcType=VARCHAR},
      </if>
      <if test="record.approverTime != null" >
        APPROVER_TIME = #{record.approverTime},
      </if>
      <if test="record.approverStatus != null" >
        APPROVAL_STATUS = #{record.approverStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsEquipLend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_lend
    <set >
      <if test="borrowerUser != null" >
        BORROWER_USER = #{borrowerUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowerDetpId != null" >
        BORROWER_DETP_ID = #{borrowerDetpId,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        BORROW_TIME = #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lendDeptId != null" >
        LEND_DEPT_ID = #{lendDeptId,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS = #{returnStatus,jdbcType=VARCHAR},
      </if>
      <if test="expectReturnDate != null" >
        EXPECT_RETURN_DATE = #{expectReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reminderTime != null" >
        REMINDER_TIME = #{reminderTime,jdbcType=VARCHAR},
      </if>
      <if test="borrowerOperationUser != null" >
        BORROWER_OPERATION_USER = #{borrowerOperationUser,jdbcType=VARCHAR},
      </if>
      <if test="borrowOperationTime != null" >
        BORROW_OPERATION_TIME = #{borrowOperationTime},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null" >
        WORKFLOW_NO = #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="approver != null" >
        APPROVER = #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approverTime != null" >
        APPROVER_TIME = #{approverTime},
      </if>
      <if test="approverStatus != null" >
        APPROVAL_STATUS = #{approverStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where LEND_ID = #{lendId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM lims_equip_lend WHERE  BORROWER_OPERATION_USER = #{borrowerOperationUser}
    <if test="approverStatus!=null">
      AND APPROVAL_STATUS=#{approverStatus}
    </if>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
    order by
    LEND_ID desc
  </select>

  <select id="getAdministration" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    FROM lims_equip_lend WHERE  APPROVAL_STATUS=#{approverStatus}
    AND BORROWER_OPERATION_USER IN
    <foreach item="userId" collection="userIds" open="(" separator="," close=")">
        #{userId}
    </foreach>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>

  <select id="count" parameterType="map" resultType="integer">
    select
    count(LEND_ID)
    FROM lims_equip_lend WHERE  APPROVAL_STATUS=#{approverStatus}
    AND BORROWER_OPERATION_USER IN
    <foreach item="userId" collection="userIds" open="(" separator="," close=")">
      #{userId}
    </foreach>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>

  <select id="equipBorrowData" resultMap="BaseResultMap" parameterType="map">
     SELECT
        BORROWER_USER,
        BORROWER_DETP_ID,
        EXPECT_RETURN_DATE,
        BORROW_TIME,
        APPROVAL_STATUS,
        lel.RETURN_STATUS AS RETURN_STATUS
    FROM
        lims_equip_lendlist lel
        LEFT JOIN lims_equip_lend le ON lel.LEND_ID = le.LEND_ID
    WHERE lel.EQUIP_ID = #{equipId}
      <if test="approverStatus!=null and approverStatus!=''">
          and  le.APPROVAL_STATUS=#{approverStatus}
      </if>
      <if test="returnStatus!=null and returnStatus!=''">
        and  lel.RETURN_STATUS=#{returnStatus}
      </if>
      <if test="borrowerDetpId!=null and borrowerDetpId!=''">
        and  le.BORROWER_DETP_ID=#{borrowerDetpId}
      </if>
      <if test="borrowerUser!=null and borrowerUser!=''">
        and  le.BORROWER_USER in (SELECT USER_ID  FROM `user` WHERE USER_NAME LIKE CONCAT('%',#{borrowerUser},'%'))
      </if>
      <if test="borrowTime!=null and borrowTime!=''">
        and  le.BORROW_TIME &gt;= (#{borrowTime})
      </if>
      <if test="returnTime!=null and returnTime!=''">
        and  lel.RETURN_TIME &lt;=#{returnTime}
      </if>
  </select>

  <select id="equipBorrowCount" resultType="integer" parameterType="map">
    SELECT
    COUNT(*)
    FROM
    lims_equip_lendlist lel
    LEFT JOIN lims_equip_lend le ON lel.LEND_ID = le.LEND_ID
    WHERE lel.EQUIP_ID = #{equipId}
    <if test="approverStatus!=null and approverStatus!=''">
      and  le.APPROVAL_STATUS=#{approverStatus}
    </if>
    <if test="returnStatus!=null and returnStatus!=''">
      and  lel.RETURN_STATUS=#{returnStatus}
    </if>
    <if test="borrowerDetpId!=null and borrowerDetpId!=''">
      and  le.BORROWER_DETP_ID=#{borrowerDetpId}
    </if>
    <if test="borrowerUser!=null and borrowerUser!=''">
      and  le.BORROWER_USER in (SELECT USER_ID  FROM `user` WHERE USER_NAME LIKE CONCAT('%',#{borrowerUser},'%'))
    </if>
    <if test="borrowTime!=null and borrowTime!=''">
      and  le.BORROW_TIME &gt;= (#{borrowTime})
    </if>
    <if test="returnTime!=null and returnTime!=''">
      and  lel.RETURN_TIME &lt;=#{returnTime}
    </if>
  </select>
</mapper>