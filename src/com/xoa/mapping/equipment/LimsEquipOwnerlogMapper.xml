<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.equipment.LimsEquipOwnerlogMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.LimsEquipOwnerlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="OWNERLOG_ID" jdbcType="INTEGER" property="ownerlogId" />
    <result column="TRANSFER_DATE" jdbcType="VARCHAR" property="transferDate" />
    <result column="ORIGINAL_DEPT_ID" jdbcType="VARCHAR" property="originalDeptId" />
    <result column="ORIGINAL_CUSTODIAN" jdbcType="VARCHAR" property="originalCustodian" />
    <result column="NEW_DEPT_ID" jdbcType="VARCHAR" property="newDeptId" />
    <result column="NEW_CUSTODIAN" jdbcType="VARCHAR" property="newCustodian" />
    <result column="APPLICATION" jdbcType="VARCHAR" property="application" />
    <result column="APPLICATION_TIME" jdbcType="VARCHAR" property="applicationTime" />
    <result column="APPROVAL_STATUS" jdbcType="VARCHAR" property="approvalStatus" />
    <result column="APPROVER" jdbcType="VARCHAR" property="approver" />
    <result column="APPROVER_TIME" jdbcType="TIMESTAMP" property="approverTime" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="WORKFLOW_NO" jdbcType="VARCHAR" property="workflowNo" />
    <result column="RECEIVE_STATUS" jdbcType="VARCHAR" property="receiveStatus" />
    <result column="RECEIVE_USER" jdbcType="VARCHAR" property="receiveUser" />


    <result column="EQUIP_ID" jdbcType="INTEGER" property="equipId" />
    <result column="EQUIP_NAME" property="equipName" jdbcType="VARCHAR" />


  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    OWNERLOG_ID, TRANSFER_DATE, ORIGINAL_DEPT_ID, ORIGINAL_CUSTODIAN, NEW_DEPT_ID, NEW_CUSTODIAN, 
    APPLICATION, APPLICATION_TIME, APPROVAL_STATUS, APPROVER, APPROVER_TIME, MEMO, WORKFLOW_NO, 
    RECEIVE_STATUS,RECEIVE_USER
  </sql>


  <select id="selectRceInfo" resultMap="BaseResultMap" parameterType="map">
    SELECT      <include refid="Base_Column_List" />
     from  lims_equip_ownerlog
    where APPROVAL_STATUS="2"
    and RECEIVE_USER=#{userId}
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>
  <select id="transferData" resultMap="BaseResultMap" parameterType="map">
    SELECT
    log.TRANSFER_DATE, log.ORIGINAL_DEPT_ID, log.ORIGINAL_CUSTODIAN, log.NEW_DEPT_ID, log.NEW_CUSTODIAN,
    log.APPLICATION, log.APPLICATION_TIME, log.APPROVAL_STATUS, log.APPROVER, log.APPROVER_TIME, log.WORKFLOW_NO,
    list.EQUIP_ID,
    list.RECEIVE_STATUS
    from lims_equip_ownerlog as log
    LEFT JOIN lims_equip_ownerlist as list ON log.OWNERLOG_ID=list.OWNERLOG_ID
    WHERE list.EQUIP_ID=#{equipId}
    <if test="transferDate != null and transferDate!=''">
     AND log.TRANSFER_DATE = #{transferDate}
    </if>
    <if test="originalDeptId != null and originalDeptId!=''">
      AND log.ORIGINAL_DEPT_ID = #{originalDeptId}
    </if>
    <if test="newDeptId != null and newDeptId!=''">
      AND log.NEW_DEPT_ID = #{newDeptId}
    </if>
    <if test="approvalStatus != null and approvalStatus!=''">
      AND  log.APPROVAL_STATUS = #{approvalStatus}
    </if>
    <if test="workflowNo != null and workflowNo!=''">
      AND  log.WORKFLOW_NO like CONCA ('%',#{workflowNo},'%')
    </if>
    <if test="receiveStatus != null and receiveStatus!=''">
      AND list.RECEIVE_STATUS =#{receiveStatus}
    </if>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>
  <select id="transferDataCount" resultType="integer" parameterType="map">
    SELECT count(*)
    from lims_equip_ownerlog as log
    LEFT JOIN lims_equip_ownerlist as list ON log.OWNERLOG_ID=list.OWNERLOG_ID
    WHERE list.EQUIP_ID=#{equipId}
    <if test="transferDate != null">
      AND log.TRANSFER_DATE = #{transferDate}
    </if>
    <if test="originalDeptId != null">
      AND log.ORIGINAL_DEPT_ID = #{originalDeptId}
    </if>
    <if test="newDeptId != null">
      AND log.NEW_DEPT_ID = #{newDeptId}
    </if>
    <if test="approvalStatus != null">
      AND  log.APPROVAL_STATUS = #{approvalStatus}
    </if>
    <if test="workflowNo != null">
      AND  log.WORKFLOW_NO = #{workflowNo}
    </if>
    <if test="receiveStatus != null">
      AND log.RECEIVE_STATUS = #{receiveStatus}
    </if>
  </select>

  <select id="checkChooseEquip" parameterType="map" resultMap="BaseResultMap">
    SELECT
    lg.*,
    lt.RECEIVE_STATUS,
    lt.EQUIP_NAME,
    lt.EQUIP_ID
    FROM lims_equip_ownerlog lg
    LEFT JOIN lims_equip_ownerlist lt  ON  lg.OWNERLOG_ID = lt.OWNERLOG_ID
    LEFT JOIN  lims_equipment eq  ON lt.EQUIP_ID=eq.EQUIP_ID
    WHERE 1=1
    <if test="approvalStatus!=null and approvalStatus!=''">
      AND lg.APPROVAL_STATUS=#{approvalStatus}
    </if>
    <if test="equipIds != null and equipIds!=''">
      AND lt.EQUIP_ID IN
      <foreach collection="equipIds" item="equipId" index="index" separator="," open="(" close=")">
        #{equipId}
      </foreach>
    </if>
  </select>
  <select id="selectOwnerLog" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from lims_equip_ownerlog
    WHERE 1=1
    <if test="application!=null and application!=''">
      and APPLICATION=#{application}
    </if>
    <if test="approvalStatus!=null and approvalStatus!=''">
      and APPROVAL_STATUS=#{approvalStatus}
    </if>
    <if test="receiveStatus!=null and receiveStatus!=''">
      and RECEIVE_STATUS=#{receiveStatus}
    </if>
    <if test="logIds!=null and logIds!=''">
      AND OWNERLOG_ID IN
      <foreach collection="logIds" item="ownerlogId" separator="," open="(" close=")" index="index">
        #{ownerlogId}
      </foreach>
    </if>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums != ''">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
    order by
    OWNERLOG_ID desc
  </select>
  <select id="contInfo" parameterType="map" resultType="integer">
    SELECT  count(0)
    FROM   lims_equip_ownerlog
    WHERE 1=1
    <if test="application!=null and application!=''">
      and APPLICATION=#{application}
    </if>
    <if test="approvalStatus!=null and approvalStatus!=''">
      and APPROVAL_STATUS=#{approvalStatus}
    </if>
    <if test="receiveStatus!=null and receiveStatus!=''">
      and RECEIVE_STATUS=#{receiveStatus}
    </if>
    <if test="logIds!=null and logIds.size>0">
      AND OWNERLOG_ID IN
      <foreach collection="logIds" item="ownerlogId" separator="," open="(" close=")" index="index">
        #{ownerlogId}
      </foreach>
    </if>
    <if test="userIds!=null and userIds.size>0">
      AND  APPLICATION IN
      <foreach collection="userIds" separator="," item="application" open="(" close=")" index="index">
        #{application}
      </foreach>
    </if>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums.size>0">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>
  <delete id="delBylogId" parameterType="map">
    DELETE  FROM lims_equip_ownerlog
    WHERE  OWNERLOG_ID IN
    <foreach collection="logIds" item="ownerlogId" separator="," open="(" close=")" index="index">
      #{ownerlogId}
    </foreach>
  </delete>
  <update id="updStatus" parameterType="map">
    update lims_equip_ownerlog
    <set>
    <if test="receiveStatus != null">
      RECEIVE_STATUS = #{receiveStatus,jdbcType=VARCHAR},
    </if>
    <if test="receiveUser !=null">
      RECEIVE_USER = #{receiveUser,jdbcType=VARCHAR},
    </if>
    <if test="approverTime != null">
      APPROVER_TIME = #{approverTime,jdbcType=TIMESTAMP},
     </if><if test="approver != null">
     APPROVER = #{approver,jdbcType=VARCHAR},
     </if>
    <if test="approvalStatus != null">
      APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
    </if>
    </set>
    where 1=1
    <if test="logIds!=null">
     and  OWNERLOG_ID IN
      <foreach collection="logIds" item="ownerlogId" separator="," open="(" close=")" index="index">
        #{ownerlogId}
      </foreach>
    </if>
    <if test="ownerlogId != null">
      and OWNERLOG_ID=#{ownerlogId}
    </if>

  </update>
  <select id="AdminastorList" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from lims_equip_ownerlog
    WHERE
     APPROVAL_STATUS=#{approvalStatus}
    <!--<if test="deptIds!=null and deptIds!=''">-->
      <!--AND  ORIGINAL_DEPT_ID IN-->
      <!--<foreach collection="deptIds" separator="," item="originalDeptId" open="(" close=")" index="index">-->
        <!--#{originalDeptId}-->
      <!--</foreach>-->
    <!--</if>-->
    <if test="userIds!=null and userIds.size>0">
      AND  APPLICATION IN
      <foreach collection="userIds" separator="," item="application" open="(" close=")" index="index">
        #{application}
      </foreach>
    </if>
    <if test="inptext != null and inptext!=''">
      AND  ${column} like CONCAT('%',#{inptext},'%')
    </if>
    <if test="smcolums != null and smcolums.size>0">
      AND ${column} IN
      <foreach collection="columsValue" item="smcolums" open="(" close=")" separator="," index="index">
        #{smcolums}
      </foreach>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xoa.model.equipment.LimsEquipOwnerlogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_equip_ownerlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lims_equip_ownerlog
    where OWNERLOG_ID = #{ownerlogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_ownerlog
    where OWNERLOG_ID = #{ownerlogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsEquipOwnerlogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_ownerlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsEquipOwnerlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_ownerlog (OWNERLOG_ID, TRANSFER_DATE, ORIGINAL_DEPT_ID, 
      ORIGINAL_CUSTODIAN, NEW_DEPT_ID, NEW_CUSTODIAN, 
      APPLICATION, APPLICATION_TIME, APPROVAL_STATUS, 
      APPROVER, APPROVER_TIME, MEMO, 
      WORKFLOW_NO, RECEIVE_STATUS,RECEIVE_USER)
    values (#{ownerlogId,jdbcType=INTEGER}, #{transferDate,jdbcType=VARCHAR}, #{originalDeptId,jdbcType=VARCHAR}, 
      #{originalCustodian,jdbcType=VARCHAR}, #{newDeptId,jdbcType=VARCHAR}, #{newCustodian,jdbcType=VARCHAR}, 
      #{application,jdbcType=VARCHAR}, #{applicationTime,jdbcType=VARCHAR}, #{approvalStatus,jdbcType=VARCHAR}, 
      #{approver,jdbcType=VARCHAR}, #{approverTime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, 
      #{workflowNo,jdbcType=VARCHAR}, #{receiveStatus,jdbcType=VARCHAR},#{receiveUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsEquipOwnerlog" keyColumn="OWNERLOG_ID" keyProperty="ownerlogId" useGeneratedKeys="true" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_ownerlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ownerlogId != null">
        OWNERLOG_ID,
      </if>
      <if test="transferDate != null">
        TRANSFER_DATE,
      </if>
      <if test="originalDeptId != null">
        ORIGINAL_DEPT_ID,
      </if>
      <if test="originalCustodian != null">
        ORIGINAL_CUSTODIAN,
      </if>
      <if test="newDeptId != null">
        NEW_DEPT_ID,
      </if>
      <if test="newCustodian != null">
        NEW_CUSTODIAN,
      </if>
      <if test="application != null">
        APPLICATION,
      </if>
      <if test="applicationTime != null">
        APPLICATION_TIME,
      </if>
      <if test="approvalStatus != null">
        APPROVAL_STATUS,
      </if>
      <if test="approver != null">
        APPROVER,
      </if>
      <if test="approverTime != null">
        APPROVER_TIME,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
      <if test="workflowNo != null">
        WORKFLOW_NO,
      </if>
      <if test="receiveStatus != null">
        RECEIVE_STATUS,
      </if>
      <if test="receiveUser !=null">
        RECEIVE_USER
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ownerlogId != null">
        #{ownerlogId,jdbcType=INTEGER},
      </if>
      <if test="transferDate != null">
        #{transferDate,jdbcType=VARCHAR},
      </if>
      <if test="originalDeptId != null">
        #{originalDeptId,jdbcType=VARCHAR},
      </if>
      <if test="originalCustodian != null">
        #{originalCustodian,jdbcType=VARCHAR},
      </if>
      <if test="newDeptId != null">
        #{newDeptId,jdbcType=VARCHAR},
      </if>
      <if test="newCustodian != null">
        #{newCustodian,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        #{applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="approvalStatus != null">
        #{approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="approver != null">
        #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approverTime != null">
        #{approverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null">
        #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="receiveStatus != null">
        #{receiveStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser !=null">
        #{receiveUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsEquipOwnerlogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_equip_ownerlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_ownerlog
    <set>
      <if test="record.ownerlogId != null">
        OWNERLOG_ID = #{record.ownerlogId,jdbcType=INTEGER},
      </if>
      <if test="record.transferDate != null">
        TRANSFER_DATE = #{record.transferDate,jdbcType=VARCHAR},
      </if>
      <if test="record.originalDeptId != null">
        ORIGINAL_DEPT_ID = #{record.originalDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.originalCustodian != null">
        ORIGINAL_CUSTODIAN = #{record.originalCustodian,jdbcType=VARCHAR},
      </if>
      <if test="record.newDeptId != null">
        NEW_DEPT_ID = #{record.newDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.newCustodian != null">
        NEW_CUSTODIAN = #{record.newCustodian,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null">
        APPLICATION = #{record.application,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationTime != null">
        APPLICATION_TIME = #{record.applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalStatus != null">
        APPROVAL_STATUS = #{record.approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.approver != null">
        APPROVER = #{record.approver,jdbcType=VARCHAR},
      </if>
      <if test="record.approverTime != null">
        APPROVER_TIME = #{record.approverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowNo != null">
        WORKFLOW_NO = #{record.workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveStatus != null">
        RECEIVE_STATUS = #{record.receiveStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUser !=null">
        RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_ownerlog
    set OWNERLOG_ID = #{record.ownerlogId,jdbcType=INTEGER},
      TRANSFER_DATE = #{record.transferDate,jdbcType=VARCHAR},
      ORIGINAL_DEPT_ID = #{record.originalDeptId,jdbcType=VARCHAR},
      ORIGINAL_CUSTODIAN = #{record.originalCustodian,jdbcType=VARCHAR},
      NEW_DEPT_ID = #{record.newDeptId,jdbcType=VARCHAR},
      NEW_CUSTODIAN = #{record.newCustodian,jdbcType=VARCHAR},
      APPLICATION = #{record.application,jdbcType=VARCHAR},
      APPLICATION_TIME = #{record.applicationTime,jdbcType=VARCHAR},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=VARCHAR},
      APPROVER = #{record.approver,jdbcType=VARCHAR},
      APPROVER_TIME = #{record.approverTime,jdbcType=TIMESTAMP},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      WORKFLOW_NO = #{record.workflowNo,jdbcType=VARCHAR},
      RECEIVE_STATUS = #{record.receiveStatus,jdbcType=VARCHAR},
    RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsEquipOwnerlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_ownerlog
    <set>
      <if test="transferDate != null">
        TRANSFER_DATE = #{transferDate,jdbcType=VARCHAR},
      </if>
      <if test="originalDeptId != null">
        ORIGINAL_DEPT_ID = #{originalDeptId,jdbcType=VARCHAR},
      </if>
      <if test="originalCustodian != null">
        ORIGINAL_CUSTODIAN = #{originalCustodian,jdbcType=VARCHAR},
      </if>
      <if test="newDeptId != null">
        NEW_DEPT_ID = #{newDeptId,jdbcType=VARCHAR},
      </if>
      <if test="newCustodian != null">
        NEW_CUSTODIAN = #{newCustodian,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        APPLICATION = #{application,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        APPLICATION_TIME = #{applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="approvalStatus != null">
        APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
      </if>
      <if test="approver != null">
        APPROVER = #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approverTime != null">
        APPROVER_TIME = #{approverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null">
        WORKFLOW_NO = #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="receiveStatus != null">
        RECEIVE_STATUS = #{receiveStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser !=null">
        RECEIVE_USER = #{receiveUser,jdbcType=VARCHAR},
      </if>
    </set>
    where OWNERLOG_ID = #{ownerlogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.LimsEquipOwnerlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_ownerlog
    set TRANSFER_DATE = #{transferDate,jdbcType=VARCHAR},
      ORIGINAL_DEPT_ID = #{originalDeptId,jdbcType=VARCHAR},
      ORIGINAL_CUSTODIAN = #{originalCustodian,jdbcType=VARCHAR},
      NEW_DEPT_ID = #{newDeptId,jdbcType=VARCHAR},
      NEW_CUSTODIAN = #{newCustodian,jdbcType=VARCHAR},
      APPLICATION = #{application,jdbcType=VARCHAR},
      APPLICATION_TIME = #{applicationTime,jdbcType=VARCHAR},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=VARCHAR},
      APPROVER = #{approver,jdbcType=VARCHAR},
      APPROVER_TIME = #{approverTime,jdbcType=TIMESTAMP},
      MEMO = #{memo,jdbcType=VARCHAR},
      WORKFLOW_NO = #{workflowNo,jdbcType=VARCHAR},
      RECEIVE_STATUS = #{receiveStatus,jdbcType=VARCHAR},
    RECEIVE_USER = #{receiveUser,jdbcType=VARCHAR}
    where OWNERLOG_ID = #{ownerlogId,jdbcType=INTEGER}
  </update>
</mapper>