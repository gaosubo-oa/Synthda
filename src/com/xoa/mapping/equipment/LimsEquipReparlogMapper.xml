<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.equipment.LimsEquipReparlogMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.LimsEquipReparlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="REPALOG_ID" jdbcType="INTEGER" property="repalogId" />
    <result column="EQUIP_ID" jdbcType="INTEGER" property="equipId" />
    <result column="EQUIP_NO" jdbcType="VARCHAR" property="equipNo" />
    <result column="EQUIP_NAME" jdbcType="VARCHAR" property="equipName" />
    <result column="EQUIP_STATUAS_CODE" jdbcType="VARCHAR" property="equipStatuasCode" />
    <result column="MODEL_NO" jdbcType="VARCHAR" property="modelNo" />
    <result column="SPEC" jdbcType="VARCHAR" property="spec" />
    <result column="FACTORY_NO" jdbcType="VARCHAR" property="factoryNo" />
    <result column="EQUIP_TYPE_ID" jdbcType="INTEGER" property="equipTypeId" />
    <result column="EQUIP_TYPE_NAME" jdbcType="VARCHAR" property="equipTypeName" />
    <result column="FAULT_TYPE" jdbcType="VARCHAR" property="faultType" />
    <result column="FAULT_POSITION" jdbcType="VARCHAR" property="faultPosition" />
    <result column="FAULT_DESC" jdbcType="VARCHAR" property="faultDesc" />
    <result column="ATMOSPHERE_TEMP" jdbcType="VARCHAR" property="atmosphereTemp" />
    <result column="ATMOSPHERE_HUMI" jdbcType="VARCHAR" property="atmosphereHumi" />
    <result column="ATMOSPHERE_PRESS" jdbcType="VARCHAR" property="atmospherePress" />
    <result column="VOLTAGE" jdbcType="VARCHAR" property="voltage" />
    <result column="RESISTANCE" jdbcType="VARCHAR" property="resistance" />
    <result column="WATER_PRESSURE" jdbcType="VARCHAR" property="waterPressure" />
    <result column="WATER TEMP" jdbcType="VARCHAR" property="waterTemp" />
    <result column="PRESSURE" jdbcType="VARCHAR" property="pressure" />
    <result column="APPLICATION_TIME" jdbcType="VARCHAR" property="applicationTime" />
    <result column="IN_RESULT" jdbcType="VARCHAR" property="inResult" />
    <result column="IN_FAULT_POSITION" jdbcType="VARCHAR" property="inFaultPosition" />
    <result column="IN_REASON" jdbcType="VARCHAR" property="inReason" />
    <result column="IN_REPAIR_MEASURE" jdbcType="VARCHAR" property="inRepairMeasure" />
    <result column="IN_REPAIR_MODE" jdbcType="VARCHAR" property="inRepairMode" />
    <result column="IN_REPAIR_RANK" jdbcType="VARCHAR" property="inRepairRank" />
    <result column="IN_PLAN_TIME" jdbcType="VARCHAR" property="inPlanTime" />
    <result column="IN_PRICE" jdbcType="VARCHAR" property="inPrice" />
    <result column="IN_PERSON" jdbcType="VARCHAR" property="inPerson" />
    <result column="IN_REPAIR_TIME" jdbcType="VARCHAR" property="inRepairTime" />
    <result column="OUT_RESULT" jdbcType="VARCHAR" property="outResult" />
    <result column="OUT_FAULT_POSITION" jdbcType="VARCHAR" property="outFaultPosition" />
    <result column="OUT_REASON" jdbcType="VARCHAR" property="outReason" />
    <result column="OUT_REPAIR_MEASURE" jdbcType="VARCHAR" property="outRepairMeasure" />
    <result column="OUT_REPAIR_MODE" jdbcType="VARCHAR" property="outRepairMode" />
    <result column="OUT_REPAIR_RANK" jdbcType="VARCHAR" property="outRepairRank" />
    <result column="OUT_PLAN_TIME" jdbcType="VARCHAR" property="outPlanTime" />
    <result column="OUT_PRICE" jdbcType="VARCHAR" property="outPrice" />
    <result column="OUT_PERSON" jdbcType="VARCHAR" property="outPerson" />
    <result column="OUT_REPAIR_TIME" jdbcType="VARCHAR" property="outRepairTime" />
    <result column="VERIFY_MEASURE" jdbcType="VARCHAR" property="verifyMeasure" />
    <result column="EQUIP_VERIFY_MODE" jdbcType="VARCHAR" property="equipVerifyMode" />
    <result column="EQUIP_REPAIR_RESULT" jdbcType="VARCHAR" property="equipRepairResult" />
    <result column="REPORT_DONE_TIME" jdbcType="VARCHAR" property="reportDoneTime" />
    <result column="VERIFY_USER" jdbcType="VARCHAR" property="verifyUser" />
    <result column="VERIFY_TIME" jdbcType="VARCHAR" property="verifyTime" />
    <result column="APPLICANT" jdbcType="VARCHAR" property="applicant" />
    <result column="APPLICANT_TIME" jdbcType="TIMESTAMP" property="applicantTime" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="WORKFLOW_NO" jdbcType="VARCHAR" property="workflowNo" />
    <result column="REPAIR_STATUS" jdbcType="VARCHAR" property="repairStatus" />
    <result column="PROPERTY_NO" property="propertyNo" jdbcType="VARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="WATER_TEMP" property="waterTemp" jdbcType="VARCHAR" />
    <result column="CODE_TYEP_NAME" property="codeTyepName" jdbcType="VARCHAR" />
    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
    <result column="CODE_NAME" property="codeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    REPALOG_ID, EQUIP_ID, EQUIP_NO, EQUIP_NAME, EQUIP_STATUAS_CODE, MODEL_NO, SPEC, FACTORY_NO,
    EQUIP_TYPE_ID, EQUIP_TYPE_NAME, FAULT_TYPE, FAULT_POSITION, FAULT_DESC, ATMOSPHERE_TEMP,
    ATMOSPHERE_HUMI, ATMOSPHERE_PRESS, VOLTAGE, RESISTANCE, WATER_PRESSURE, WATER_TEMP,
    PRESSURE, APPLICATION_TIME, IN_RESULT, IN_FAULT_POSITION, IN_REASON, IN_REPAIR_MEASURE,
    IN_REPAIR_MODE, IN_REPAIR_RANK, IN_PLAN_TIME, IN_PRICE, IN_PERSON, IN_REPAIR_TIME,
    OUT_RESULT, OUT_FAULT_POSITION, OUT_REASON, OUT_REPAIR_MEASURE, OUT_REPAIR_MODE,
    OUT_REPAIR_RANK, OUT_PLAN_TIME, OUT_PRICE, OUT_PERSON, OUT_REPAIR_TIME, VERIFY_MEASURE,
    EQUIP_VERIFY_MODE, EQUIP_REPAIR_RESULT, REPORT_DONE_TIME, VERIFY_USER, VERIFY_TIME,
    APPLICANT, APPLICANT_TIME, MEMO, WORKFLOW_NO, REPAIR_STATUS
  </sql>
  <select id="selectByExample" parameterType="com.xoa.model.equipment.LimsEquipReparlogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_equip_reparlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from lims_equip_reparlog
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
    order by REPALOG_ID DESC
  </select>

  <select id="selectByPrimary" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select le.*,b.PROPERTY_NO,d.DEPT_NAME FROM lims_equip_reparlog le
    LEFT JOIN lims_equip_types let
    on le.EQUIP_TYPE_ID=let.EQUIP_TYPE_ID
    left join
    lims_equipment b
    ON
    le.DEPT_ID = b.equip_id
    left join
    department d
    ON
    le.DEPT_ID = d.DEPT_ID
    where le.REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </select>

  <!--查询全部   已完成-->
  <select id="selectEquipReparlogByAll" resultMap="BaseResultMap">
    SELECT ler.* , le.PROPERTY_NO,cod.code_tyep_name FROM lims_equip_reparlog ler LEFT JOIN lims_equipment le ON ler.EQUIP_ID=le.EQUIP_ID
	left join lims_common_code cod on ler.fault_type = cod.code_tyep_no
    order by REPALOG_ID DESC
  </select>

  <!--根据设备状态查询数据-->
  <select id="selectEquipReparlogs" resultMap="BaseResultMap">
    SELECT ler.* , le.PROPERTY_NO,cod.code_tyep_name FROM lims_equip_reparlog ler LEFT JOIN lims_equipment le ON ler.EQUIP_ID=le.EQUIP_ID
	left join lims_common_code cod on ler.fault_type = cod.code_tyep_no
    where REPAIR_STATUS = #{repairStatus,jdbcType=VARCHAR}
    order by REPALOG_ID DESC
  </select>



  <!-- 根据下拉框条件以及输入参数模糊查询 字段 值   已完成-->
  <select id="selectEquipExperienceByName" resultMap="BaseResultMap" parameterType="map">
    select
    a.*,b.PROPERTY_NO,s.CODE_NAME
    from
    lims_equip_reparlog a
    left join
    lims_equipment b
    ON
    a.equip_id = b.equip_id
    left join
    sys_code s
    ON
    a.FAULT_TYPE=s.CODE_NO
    where
    <if test="fieldName !=null">
      a.${fieldName}
    </if>
    <!--<if test="propertyNo !=null">
      b.${fieldName}
    </if>-->
    like "%"#{fieldValue}"%"
    <if test="repairStatus !=null">
      and  a.REPAIR_STATUS = #{repairStatus,jdbcType=VARCHAR}
    </if>

    order by a.REPALOG_ID DESC
  </select>

  <!-- 查询所有经验库count总条数 分页  已完成-->
  <select id="countAllExperience" resultType="java.lang.Integer">
    select count(REPALOG_ID) as total from lims_equip_reparlog
  </select>

  <!-- 通过选择的字段名模糊查询字段值  查询count总条数-->
  <select id="getCountByField" resultType="java.lang.Integer" parameterType="java.util.Map">
    select count(a.REPALOG_ID) as total
    from lims_equip_reparlog a
    left join
    lims_equipment b
    ON
    a.equip_id = b.equip_id
    where
    <if test="propertyNo== null">
      a.${fieldName}
    </if>
    <if test="propertyNo!= null">
      b.${fieldName}
    </if>
    like "%"#{fieldValue}"%"
  </select>

  <!--修改 根据id 修改页面的基本数据信息   -->
  <update id="updateEquipReparlog" parameterType="com.xoa.model.equipment.LimsEquipReparlog">
    update lims_equip_reparlog
    <set>
      <if test="repalogId != null">
        REPALOG_ID = #{repalogId,jdbcType=INTEGER},
      </if>
      <if test="repairStatus != null">
        REPAIR_STATUS  = #{repairStatus,jdbcType=VARCHAR},
      </if>

      <if test="equipName != null">
        EQUIP_NAME = #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="equipTypeId != null">
        EQUIP_TYPE_ID = #{equipTypeId,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        SPEC = #{spec,jdbcType=VARCHAR},
      </if>

      <if test="modelNo != null">
        MODEL_NO = #{modelNo,jdbcType=VARCHAR},
      </if>

      <if test="factoryNo != null">
        FACTORY_NO = #{factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="faultType != null">
        FAULT_TYPE = #{faultType,jdbcType=VARCHAR},
      </if>
      <if test="faultPosition != null">
        FAULT_POSITION = #{faultPosition,jdbcType=VARCHAR},
      </if>
      <if test="faultDesc != null">
        FAULT_DESC = #{faultDesc,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null">
        APPLICANT = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        APPLICATION_TIME = #{applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null">
        WORKFLOW_NO #{workflowNo,jdbcType=VARCHAR}
      </if>
    </set>
    where EQUIP_ID = #{equipId,jdbcType=INTEGER}
  </update>


  <!--修改 根据设备id修改设备状态提交按钮  完成-->
  <update id="updateByExampleSelectives" parameterType="map">
    update lims_equip_reparlog
    <set>
      <if test="repairStatus != null">
        REPAIR_STATUS = #{repairStatus,jdbcType=VARCHAR},
      </if>
      <if test="equipStatuasCode != null">
        EQUIP_STATUAS_CODE = #{equipStatuasCode,jdbcType=VARCHAR},
      </if>
    </set>
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </update>

  <!--新增设备的故障信息-->
  <insert id="insertSelectives" parameterType="com.xoa.model.equipment.LimsEquipReparlog">
    insert into lims_equip_reparlog
    <if test="faultType !=null">
      FAULT_TYPE,
    </if>
    <if test="faultPosition != null">
      FAULT_POSITION,
    </if>
    <if test="faultDesc != null">
      FAULT_DESC,
    </if>
    <if test="atmosphereTemp != null">
      ATMOSPHERE_TEMP,
    </if>
    <if test="atmosphereHumi != null">
      ATMOSPHERE_HUMI,
    </if>
    <if test="atmospherePress != null">
      ATMOSPHERE_PRESS,
    </if>
    <if test="voltage != null">
      VOLTAGE,
    </if>
    <if test="resistance != null">
      RESISTANCE,
    </if>
    <if test="waterPressure != null">
      WATER_PRESSURE,
    </if>
    <if test="pressure != null">
      PRESSURE,
    </if>
    <if test="applicationTime != null">
      APPLICATION_TIME,
    </if>
  </insert>

  <!--删除全部信息 已完成-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lims_equip_reparlog
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </delete>

  <!--修改维修措施页面的显示信息-->
  <update id="updateEquipReparlogKey" parameterType="map">
    update lims_equip_reparlog
    <set>
      <if test="faultPosition != null">
        FAULT_POSITION = #{faultPosition,jdbcType=VARCHAR},
      </if>
      <if test="inResult != null">
        IN_RESULT = #{inResult,jdbcType=VARCHAR},
      </if>
      <if test="inReason != null">
        IN_REASON = #{inReason,jdbcType=VARCHAR},
      </if>
      <if test="inRepairMeasure != null">
        IN_REPAIR_MEASURE = #{inRepairMeasure,jsdbcType=VARCHAR},
      </if>
      <if test="inRepairMode != null">
        IN_REPAIR_MODE = #{inRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="inRepairRank != null">
        IN_REPAIR_RANK = #{inRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="inPlanTime != null">
        IN_PLAN_TIME = #{inPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        IN_PRICE = #{inPrice,jdbcType=VARCHAR},
      </if>
      <if test="inPerson != null">
        IN_PERSON = #{inPerson,jdbcType=VARCHAR}
      </if>
    </set>
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </update>

  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsEquipReparlogExample">
    delete from lims_equip_reparlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsEquipReparlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_reparlog (REPALOG_ID, EQUIP_ID, EQUIP_NO,
    EQUIP_NAME, EQUIP_STATUAS_CODE, MODEL_NO,
    SPEC, FACTORY_NO, EQUIP_TYPE_ID,
    EQUIP_TYPE_NAME, FAULT_TYPE, FAULT_POSITION,
    FAULT_DESC, ATMOSPHERE_TEMP, ATMOSPHERE_HUMI,
    ATMOSPHERE_PRESS, VOLTAGE, RESISTANCE,
    WATER_PRESSURE, WATER_TEMP, PRESSURE,
    APPLICATION_TIME, IN_RESULT, IN_FAULT_POSITION,
    IN_REASON, IN_REPAIR_MEASURE, IN_REPAIR_MODE,
    IN_REPAIR_RANK, IN_PLAN_TIME, IN_PRICE,
    IN_PERSON, IN_REPAIR_TIME, OUT_RESULT,
    OUT_FAULT_POSITION, OUT_REASON, OUT_REPAIR_MEASURE,
    OUT_REPAIR_MODE, OUT_REPAIR_RANK, OUT_PLAN_TIME,
    OUT_PRICE, OUT_PERSON, OUT_REPAIR_TIME,
    VERIFY_MEASURE, EQUIP_VERIFY_MODE, EQUIP_REPAIR_RESULT,
    REPORT_DONE_TIME, VERIFY_USER, VERIFY_TIME,
    APPLICANT, APPLICANT_TIME, MEMO,
    WORKFLOW_NO, REPAIR_STATUS)
    values (#{repalogId,jdbcType=INTEGER}, #{equipId,jdbcType=INTEGER}, #{equipNo,jdbcType=VARCHAR},
    #{equipName,jdbcType=VARCHAR}, #{equipStatuasCode,jdbcType=VARCHAR}, #{modelNo,jdbcType=VARCHAR},
    #{spec,jdbcType=VARCHAR}, #{factoryNo,jdbcType=VARCHAR}, #{equipTypeId,jdbcType=INTEGER},
    #{equipTypeName,jdbcType=VARCHAR}, #{faultType,jdbcType=VARCHAR}, #{faultPosition,jdbcType=VARCHAR},
    #{faultDesc,jdbcType=VARCHAR}, #{atmosphereTemp,jdbcType=VARCHAR}, #{atmosphereHumi,jdbcType=VARCHAR},
    #{atmospherePress,jdbcType=VARCHAR}, #{voltage,jdbcType=VARCHAR}, #{resistance,jdbcType=VARCHAR},
    #{waterPressure,jdbcType=VARCHAR}, #{waterTemp,jdbcType=VARCHAR}, #{pressure,jdbcType=VARCHAR},
    #{applicationTime,jdbcType=VARCHAR}, #{inResult,jdbcType=VARCHAR}, #{inFaultPosition,jdbcType=VARCHAR},
    #{inReason,jdbcType=VARCHAR}, #{inRepairMeasure,jdbcType=VARCHAR}, #{inRepairMode,jdbcType=VARCHAR},
    #{inRepairRank,jdbcType=VARCHAR}, #{inPlanTime,jdbcType=VARCHAR}, #{inPrice,jdbcType=VARCHAR},
    #{inPerson,jdbcType=VARCHAR}, #{inRepairTime,jdbcType=VARCHAR}, #{outResult,jdbcType=VARCHAR},
    #{outFaultPosition,jdbcType=VARCHAR}, #{outReason,jdbcType=VARCHAR}, #{outRepairMeasure,jdbcType=VARCHAR},
    #{outRepairMode,jdbcType=VARCHAR}, #{outRepairRank,jdbcType=VARCHAR}, #{outPlanTime,jdbcType=VARCHAR},
    #{outPrice,jdbcType=VARCHAR}, #{outPerson,jdbcType=VARCHAR}, #{outRepairTime,jdbcType=VARCHAR},
    #{verifyMeasure,jdbcType=VARCHAR}, #{equipVerifyMode,jdbcType=VARCHAR}, #{equipRepairResult,jdbcType=VARCHAR},
    #{reportDoneTime,jdbcType=VARCHAR}, #{verifyUser,jdbcType=VARCHAR}, #{verifyTime,jdbcType=VARCHAR},
    #{applicant,jdbcType=VARCHAR}, #{applicantTime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR},
    #{workflowNo,jdbcType=VARCHAR}, #{repairStatus,jdbcType=VARCHAR})
  </insert>



  <!-- 新增设备明细详情信息  已完成-->
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsEquipReparlog" useGeneratedKeys="true" keyColumn="REPALOG_ID" keyProperty="repalogId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_reparlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="repalogId != null">
        REPALOG_ID,
      </if>
      <if test="equipId != null">
        EQUIP_ID,
      </if>
      <if test="equipNo != null">
        EQUIP_NO,
      </if>
      <if test="equipName != null">
        EQUIP_NAME,
      </if>
      <if test="equipStatuasCode != null">
        EQUIP_STATUAS_CODE,
      </if>
      <if test="modelNo != null">
        MODEL_NO,
      </if>
      <if test="spec != null">
        SPEC,
      </if>
      <if test="factoryNo != null">
        FACTORY_NO,
      </if>
      <if test="equipTypeId != null">
        EQUIP_TYPE_ID,
      </if>
      <if test="equipTypeName != null">
        EQUIP_TYPE_NAME,
      </if>
      <if test="faultType != null">
        FAULT_TYPE,
      </if>
      <if test="faultPosition != null">
        FAULT_POSITION,
      </if>
      <if test="faultDesc != null">
        FAULT_DESC,
      </if>
      <if test="atmosphereTemp != null">
        ATMOSPHERE_TEMP,
      </if>
      <if test="atmosphereHumi != null">
        ATMOSPHERE_HUMI,
      </if>
      <if test="atmospherePress != null">
        ATMOSPHERE_PRESS,
      </if>
      <if test="voltage != null">
        VOLTAGE,
      </if>
      <if test="resistance != null">
        RESISTANCE,
      </if>
      <if test="waterPressure != null">
        WATER_PRESSURE,
      </if>
      <if test="waterTemp != null">
        WATER_TEMP,
      </if>
      <if test="pressure != null">
        PRESSURE,
      </if>
      <if test="applicationTime != null">
        APPLICATION_TIME,
      </if>
      <if test="inResult != null">
        IN_RESULT,
      </if>
      <if test="inFaultPosition != null">
        IN_FAULT_POSITION,
      </if>
      <if test="inReason != null">
        IN_REASON,
      </if>
      <if test="inRepairMeasure != null">
        IN_REPAIR_MEASURE,
      </if>
      <if test="inRepairMode != null">
        IN_REPAIR_MODE,
      </if>
      <if test="inRepairRank != null">
        IN_REPAIR_RANK,
      </if>
      <if test="inPlanTime != null">
        IN_PLAN_TIME,
      </if>
      <if test="inPrice != null">
        IN_PRICE,
      </if>
      <if test="inPerson != null">
        IN_PERSON,
      </if>
      <if test="inRepairTime != null">
        IN_REPAIR_TIME,
      </if>
      <if test="outResult != null">
        OUT_RESULT,
      </if>
      <if test="outFaultPosition != null">
        OUT_FAULT_POSITION,
      </if>
      <if test="outReason != null">
        OUT_REASON,
      </if>
      <if test="outRepairMeasure != null">
        OUT_REPAIR_MEASURE,
      </if>
      <if test="outRepairMode != null">
        OUT_REPAIR_MODE,
      </if>
      <if test="outRepairRank != null">
        OUT_REPAIR_RANK,
      </if>
      <if test="outPlanTime != null">
        OUT_PLAN_TIME,
      </if>
      <if test="outPrice != null">
        OUT_PRICE,
      </if>
      <if test="outPerson != null">
        OUT_PERSON,
      </if>
      <if test="outRepairTime != null">
        OUT_REPAIR_TIME,
      </if>
      <if test="verifyMeasure != null">
        VERIFY_MEASURE,
      </if>
      <if test="equipVerifyMode != null">
        EQUIP_VERIFY_MODE,
      </if>
      <if test="equipRepairResult != null">
        EQUIP_REPAIR_RESULT,
      </if>
      <if test="reportDoneTime != null">
        REPORT_DONE_TIME,
      </if>
      <if test="verifyUser != null">
        VERIFY_USER,
      </if>
      <if test="verifyTime != null">
        VERIFY_TIME,
      </if>
      <if test="applicant != null">
        APPLICANT,
      </if>
      <if test="applicantTime != null">
        APPLICANT_TIME,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
      <if test="workflowNo != null">
        WORKFLOW_NO,
      </if>
      <if test="repairStatus != null">
        REPAIR_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="repalogId != null">
        #{repalogId,jdbcType=INTEGER},
      </if>
      <if test="equipId != null">
        #{equipId,jdbcType=INTEGER},
      </if>
      <if test="equipNo != null">
        #{equipNo,jdbcType=VARCHAR},
      </if>
      <if test="equipName != null">
        #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="equipStatuasCode != null">
        #{equipStatuasCode,jdbcType=VARCHAR},
      </if>
      <if test="modelNo != null">
        #{modelNo,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="factoryNo != null">
        #{factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="equipTypeId != null">
        #{equipTypeId,jdbcType=INTEGER},
      </if>
      <if test="equipTypeName != null">
        #{equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="faultType != null">
        #{faultType,jdbcType=VARCHAR},
      </if>
      <if test="faultPosition != null">
        #{faultPosition,jdbcType=VARCHAR},
      </if>
      <if test="faultDesc != null">
        #{faultDesc,jdbcType=VARCHAR},
      </if>
      <if test="atmosphereTemp != null">
        #{atmosphereTemp,jdbcType=VARCHAR},
      </if>
      <if test="atmosphereHumi != null">
        #{atmosphereHumi,jdbcType=VARCHAR},
      </if>
      <if test="atmospherePress != null">
        #{atmospherePress,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="resistance != null">
        #{resistance,jdbcType=VARCHAR},
      </if>
      <if test="waterPressure != null">
        #{waterPressure,jdbcType=VARCHAR},
      </if>
      <if test="waterTemp != null">
        #{waterTemp,jdbcType=VARCHAR},
      </if>
      <if test="pressure != null">
        #{pressure,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        #{applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="inResult != null">
        #{inResult,jdbcType=VARCHAR},
      </if>
      <if test="inFaultPosition != null">
        #{inFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="inReason != null">
        #{inReason,jdbcType=VARCHAR},
      </if>
      <if test="inRepairMeasure != null">
        #{inRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="inRepairMode != null">
        #{inRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="inRepairRank != null">
        #{inRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="inPlanTime != null">
        #{inPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        #{inPrice,jdbcType=VARCHAR},
      </if>
      <if test="inPerson != null">
        #{inPerson,jdbcType=VARCHAR},
      </if>
      <if test="inRepairTime != null">
        #{inRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="outResult != null">
        #{outResult,jdbcType=VARCHAR},
      </if>
      <if test="outFaultPosition != null">
        #{outFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="outReason != null">
        #{outReason,jdbcType=VARCHAR},
      </if>
      <if test="outRepairMeasure != null">
        #{outRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="outRepairMode != null">
        #{outRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="outRepairRank != null">
        #{outRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="outPlanTime != null">
        #{outPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="outPrice != null">
        #{outPrice,jdbcType=VARCHAR},
      </if>
      <if test="outPerson != null">
        #{outPerson,jdbcType=VARCHAR},
      </if>
      <if test="outRepairTime != null">
        #{outRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="verifyMeasure != null">
        #{verifyMeasure,jdbcType=VARCHAR},
      </if>
      <if test="equipVerifyMode != null">
        #{equipVerifyMode,jdbcType=VARCHAR},
      </if>
      <if test="equipRepairResult != null">
        #{equipRepairResult,jdbcType=VARCHAR},
      </if>
      <if test="reportDoneTime != null">
        #{reportDoneTime,jdbcType=VARCHAR},
      </if>
      <if test="verifyUser != null">
        #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        #{verifyTime,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null">
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantTime != null">
        #{applicantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null">
        #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="repairStatus != null">
        #{repairStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsEquipReparlogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_equip_reparlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_reparlog
    <set>
      <if test="record.repalogId != null">
        REPALOG_ID = #{record.repalogId,jdbcType=INTEGER},
      </if>
      <if test="record.equipId != null">
        EQUIP_ID = #{record.equipId,jdbcType=INTEGER},
      </if>
      <if test="record.equipNo != null">
        EQUIP_NO = #{record.equipNo,jdbcType=VARCHAR},
      </if>
      <if test="record.equipName != null">
        EQUIP_NAME = #{record.equipName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipStatuasCode != null">
        EQUIP_STATUAS_CODE = #{record.equipStatuasCode,jdbcType=VARCHAR},
      </if>
      <if test="record.modelNo != null">
        MODEL_NO = #{record.modelNo,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null">
        SPEC = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryNo != null">
        FACTORY_NO = #{record.factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="record.equipTypeId != null">
        EQUIP_TYPE_ID = #{record.equipTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.equipTypeName != null">
        EQUIP_TYPE_NAME = #{record.equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.faultType != null">
        FAULT_TYPE = #{record.faultType,jdbcType=VARCHAR},
      </if>
      <if test="record.faultPosition != null">
        FAULT_POSITION = #{record.faultPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.faultDesc != null">
        FAULT_DESC = #{record.faultDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.atmosphereTemp != null">
        ATMOSPHERE_TEMP = #{record.atmosphereTemp,jdbcType=VARCHAR},
      </if>
      <if test="record.atmosphereHumi != null">
        ATMOSPHERE_HUMI = #{record.atmosphereHumi,jdbcType=VARCHAR},
      </if>
      <if test="record.atmospherePress != null">
        ATMOSPHERE_PRESS = #{record.atmospherePress,jdbcType=VARCHAR},
      </if>
      <if test="record.voltage != null">
        VOLTAGE = #{record.voltage,jdbcType=VARCHAR},
      </if>
      <if test="record.resistance != null">
        RESISTANCE = #{record.resistance,jdbcType=VARCHAR},
      </if>
      <if test="record.waterPressure != null">
        WATER_PRESSURE = #{record.waterPressure,jdbcType=VARCHAR},
      </if>
      <if test="record.waterTemp != null">
        WATER_TEMP = #{record.waterTemp,jdbcType=VARCHAR},
      </if>
      <if test="record.pressure != null">
        PRESSURE = #{record.pressure,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationTime != null">
        APPLICATION_TIME = #{record.applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.inResult != null">
        IN_RESULT = #{record.inResult,jdbcType=VARCHAR},
      </if>
      <if test="record.inFaultPosition != null">
        IN_FAULT_POSITION = #{record.inFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.inReason != null">
        IN_REASON = #{record.inReason,jdbcType=VARCHAR},
      </if>
      <if test="record.inRepairMeasure != null">
        IN_REPAIR_MEASURE = #{record.inRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="record.inRepairMode != null">
        IN_REPAIR_MODE = #{record.inRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="record.inRepairRank != null">
        IN_REPAIR_RANK = #{record.inRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="record.inPlanTime != null">
        IN_PLAN_TIME = #{record.inPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="record.inPrice != null">
        IN_PRICE = #{record.inPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.inPerson != null">
        IN_PERSON = #{record.inPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.inRepairTime != null">
        IN_REPAIR_TIME = #{record.inRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="record.outResult != null">
        OUT_RESULT = #{record.outResult,jdbcType=VARCHAR},
      </if>
      <if test="record.outFaultPosition != null">
        OUT_FAULT_POSITION = #{record.outFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.outReason != null">
        OUT_REASON = #{record.outReason,jdbcType=VARCHAR},
      </if>
      <if test="record.outRepairMeasure != null">
        OUT_REPAIR_MEASURE = #{record.outRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="record.outRepairMode != null">
        OUT_REPAIR_MODE = #{record.outRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="record.outRepairRank != null">
        OUT_REPAIR_RANK = #{record.outRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="record.outPlanTime != null">
        OUT_PLAN_TIME = #{record.outPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="record.outPrice != null">
        OUT_PRICE = #{record.outPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.outPerson != null">
        OUT_PERSON = #{record.outPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.outRepairTime != null">
        OUT_REPAIR_TIME = #{record.outRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyMeasure != null">
        VERIFY_MEASURE = #{record.verifyMeasure,jdbcType=VARCHAR},
      </if>
      <if test="record.equipVerifyMode != null">
        EQUIP_VERIFY_MODE = #{record.equipVerifyMode,jdbcType=VARCHAR},
      </if>
      <if test="record.equipRepairResult != null">
        EQUIP_REPAIR_RESULT = #{record.equipRepairResult,jdbcType=VARCHAR},
      </if>
      <if test="record.reportDoneTime != null">
        REPORT_DONE_TIME = #{record.reportDoneTime,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyUser != null">
        VERIFY_USER = #{record.verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyTime != null">
        VERIFY_TIME = #{record.verifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null">
        APPLICANT = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantTime != null">
        APPLICANT_TIME = #{record.applicantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowNo != null">
        WORKFLOW_NO = #{record.workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="record.repairStatus != null">
        REPAIR_STATUS = #{record.repairStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_reparlog
    set REPALOG_ID = #{record.repalogId,jdbcType=INTEGER},
    EQUIP_ID = #{record.equipId,jdbcType=INTEGER},
    EQUIP_NO = #{record.equipNo,jdbcType=VARCHAR},
    EQUIP_NAME = #{record.equipName,jdbcType=VARCHAR},
    EQUIP_STATUAS_CODE = #{record.equipStatuasCode,jdbcType=VARCHAR},
    MODEL_NO = #{record.modelNo,jdbcType=VARCHAR},
    SPEC = #{record.spec,jdbcType=VARCHAR},
    FACTORY_NO = #{record.factoryNo,jdbcType=VARCHAR},
    EQUIP_TYPE_ID = #{record.equipTypeId,jdbcType=INTEGER},
    EQUIP_TYPE_NAME = #{record.equipTypeName,jdbcType=VARCHAR},
    FAULT_TYPE = #{record.faultType,jdbcType=VARCHAR},
    FAULT_POSITION = #{record.faultPosition,jdbcType=VARCHAR},
    FAULT_DESC = #{record.faultDesc,jdbcType=VARCHAR},
    ATMOSPHERE_TEMP = #{record.atmosphereTemp,jdbcType=VARCHAR},
    ATMOSPHERE_HUMI = #{record.atmosphereHumi,jdbcType=VARCHAR},
    ATMOSPHERE_PRESS = #{record.atmospherePress,jdbcType=VARCHAR},
    VOLTAGE = #{record.voltage,jdbcType=VARCHAR},
    RESISTANCE = #{record.resistance,jdbcType=VARCHAR},
    WATER_PRESSURE = #{record.waterPressure,jdbcType=VARCHAR},
    WATER_TEMP = #{record.waterTemp,jdbcType=VARCHAR},
    PRESSURE = #{record.pressure,jdbcType=VARCHAR},
    APPLICATION_TIME = #{record.applicationTime,jdbcType=VARCHAR},
    IN_RESULT = #{record.inResult,jdbcType=VARCHAR},
    IN_FAULT_POSITION = #{record.inFaultPosition,jdbcType=VARCHAR},
    IN_REASON = #{record.inReason,jdbcType=VARCHAR},
    IN_REPAIR_MEASURE = #{record.inRepairMeasure,jdbcType=VARCHAR},
    IN_REPAIR_MODE = #{record.inRepairMode,jdbcType=VARCHAR},
    IN_REPAIR_RANK = #{record.inRepairRank,jdbcType=VARCHAR},
    IN_PLAN_TIME = #{record.inPlanTime,jdbcType=VARCHAR},
    IN_PRICE = #{record.inPrice,jdbcType=VARCHAR},
    IN_PERSON = #{record.inPerson,jdbcType=VARCHAR},
    IN_REPAIR_TIME = #{record.inRepairTime,jdbcType=VARCHAR},
    OUT_RESULT = #{record.outResult,jdbcType=VARCHAR},
    OUT_FAULT_POSITION = #{record.outFaultPosition,jdbcType=VARCHAR},
    OUT_REASON = #{record.outReason,jdbcType=VARCHAR},
    OUT_REPAIR_MEASURE = #{record.outRepairMeasure,jdbcType=VARCHAR},
    OUT_REPAIR_MODE = #{record.outRepairMode,jdbcType=VARCHAR},
    OUT_REPAIR_RANK = #{record.outRepairRank,jdbcType=VARCHAR},
    OUT_PLAN_TIME = #{record.outPlanTime,jdbcType=VARCHAR},
    OUT_PRICE = #{record.outPrice,jdbcType=VARCHAR},
    OUT_PERSON = #{record.outPerson,jdbcType=VARCHAR},
    OUT_REPAIR_TIME = #{record.outRepairTime,jdbcType=VARCHAR},
    VERIFY_MEASURE = #{record.verifyMeasure,jdbcType=VARCHAR},
    EQUIP_VERIFY_MODE = #{record.equipVerifyMode,jdbcType=VARCHAR},
    EQUIP_REPAIR_RESULT = #{record.equipRepairResult,jdbcType=VARCHAR},
    REPORT_DONE_TIME = #{record.reportDoneTime,jdbcType=VARCHAR},
    VERIFY_USER = #{record.verifyUser,jdbcType=VARCHAR},
    VERIFY_TIME = #{record.verifyTime,jdbcType=VARCHAR},
    APPLICANT = #{record.applicant,jdbcType=VARCHAR},
    APPLICANT_TIME = #{record.applicantTime,jdbcType=TIMESTAMP},
    MEMO = #{record.memo,jdbcType=VARCHAR},
    WORKFLOW_NO = #{record.workflowNo,jdbcType=VARCHAR},
    REPAIR_STATUS = #{record.repairStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsEquipReparlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_reparlog
    <set>

      <if test="equipNo != null">
        EQUIP_NO = #{equipNo,jdbcType=VARCHAR},
      </if>
      <if test="equipName != null">
        EQUIP_NAME = #{equipName,jdbcType=VARCHAR},
      </if>
      <if test="equipStatuasCode != null">
        EQUIP_STATUAS_CODE = #{equipStatuasCode,jdbcType=VARCHAR},
      </if>
      <if test="modelNo != null">
        MODEL_NO = #{modelNo,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        SPEC = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="factoryNo != null">
        FACTORY_NO = #{factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="equipTypeId != null">
        EQUIP_TYPE_ID = #{equipTypeId,jdbcType=INTEGER},
      </if>
      <if test="equipTypeName != null">
        EQUIP_TYPE_NAME = #{equipTypeName,jdbcType=VARCHAR},
      </if>
      <if test="faultType != null">
        FAULT_TYPE = #{faultType,jdbcType=VARCHAR},
      </if>
      <if test="faultPosition != null">
        FAULT_POSITION = #{faultPosition,jdbcType=VARCHAR},
      </if>
      <if test="faultDesc != null">
        FAULT_DESC = #{faultDesc,jdbcType=VARCHAR},
      </if>
      <if test="atmosphereTemp != null">
        ATMOSPHERE_TEMP = #{atmosphereTemp,jdbcType=VARCHAR},
      </if>
      <if test="atmosphereHumi != null">
        ATMOSPHERE_HUMI = #{atmosphereHumi,jdbcType=VARCHAR},
      </if>
      <if test="atmospherePress != null">
        ATMOSPHERE_PRESS = #{atmospherePress,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        VOLTAGE = #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="resistance != null">
        RESISTANCE = #{resistance,jdbcType=VARCHAR},
      </if>
      <if test="waterPressure != null">
        WATER_PRESSURE = #{waterPressure,jdbcType=VARCHAR},
      </if>
      <if test="waterTemp != null">
        WATER_TEMP = #{waterTemp,jdbcType=VARCHAR},
      </if>
      <if test="pressure != null">
        PRESSURE = #{pressure,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        APPLICATION_TIME = #{applicationTime,jdbcType=VARCHAR},
      </if>
      <if test="inResult != null">
        IN_RESULT = #{inResult,jdbcType=VARCHAR},
      </if>
      <if test="inFaultPosition != null">
        IN_FAULT_POSITION = #{inFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="inReason != null">
        IN_REASON = #{inReason,jdbcType=VARCHAR},
      </if>
      <if test="inRepairMeasure != null">
        IN_REPAIR_MEASURE = #{inRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="inRepairMode != null">
        IN_REPAIR_MODE = #{inRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="inRepairRank != null">
        IN_REPAIR_RANK = #{inRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="inPlanTime != null">
        IN_PLAN_TIME = #{inPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        IN_PRICE = #{inPrice,jdbcType=VARCHAR},
      </if>
      <if test="inPerson != null">
        IN_PERSON = #{inPerson,jdbcType=VARCHAR},
      </if>
      <if test="inRepairTime != null">
        IN_REPAIR_TIME = #{inRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="outResult != null">
        OUT_RESULT = #{outResult,jdbcType=VARCHAR},
      </if>
      <if test="outFaultPosition != null">
        OUT_FAULT_POSITION = #{outFaultPosition,jdbcType=VARCHAR},
      </if>
      <if test="outReason != null">
        OUT_REASON = #{outReason,jdbcType=VARCHAR},
      </if>
      <if test="outRepairMeasure != null">
        OUT_REPAIR_MEASURE = #{outRepairMeasure,jdbcType=VARCHAR},
      </if>
      <if test="outRepairMode != null">
        OUT_REPAIR_MODE = #{outRepairMode,jdbcType=VARCHAR},
      </if>
      <if test="outRepairRank != null">
        OUT_REPAIR_RANK = #{outRepairRank,jdbcType=VARCHAR},
      </if>
      <if test="outPlanTime != null">
        OUT_PLAN_TIME = #{outPlanTime,jdbcType=VARCHAR},
      </if>
      <if test="outPrice != null">
        OUT_PRICE = #{outPrice,jdbcType=VARCHAR},
      </if>
      <if test="outPerson != null">
        OUT_PERSON = #{outPerson,jdbcType=VARCHAR},
      </if>
      <if test="outRepairTime != null">
        OUT_REPAIR_TIME = #{outRepairTime,jdbcType=VARCHAR},
      </if>
      <if test="verifyMeasure != null">
        VERIFY_MEASURE = #{verifyMeasure,jdbcType=VARCHAR},
      </if>
      <if test="equipVerifyMode != null">
        EQUIP_VERIFY_MODE = #{equipVerifyMode,jdbcType=VARCHAR},
      </if>
      <if test="equipRepairResult != null">
        EQUIP_REPAIR_RESULT = #{equipRepairResult,jdbcType=VARCHAR},
      </if>
      <if test="reportDoneTime != null">
        REPORT_DONE_TIME = #{reportDoneTime,jdbcType=VARCHAR},
      </if>
      <if test="verifyUser != null">
        VERIFY_USER = #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        VERIFY_TIME = #{verifyTime,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null">
        APPLICANT = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantTime != null">
        APPLICANT_TIME = #{applicantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="workflowNo != null">
        WORKFLOW_NO = #{workflowNo,jdbcType=VARCHAR},
      </if>
      <if test="repairStatus != null">
        REPAIR_STATUS = #{repairStatus,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.LimsEquipReparlog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_reparlog
    set EQUIP_ID = #{equipId,jdbcType=INTEGER},
    EQUIP_NO = #{equipNo,jdbcType=VARCHAR},
    EQUIP_NAME = #{equipName,jdbcType=VARCHAR},
    EQUIP_STATUAS_CODE = #{equipStatuasCode,jdbcType=VARCHAR},
    MODEL_NO = #{modelNo,jdbcType=VARCHAR},
    SPEC = #{spec,jdbcType=VARCHAR},
    FACTORY_NO = #{factoryNo,jdbcType=VARCHAR},
    EQUIP_TYPE_ID = #{equipTypeId,jdbcType=INTEGER},
    EQUIP_TYPE_NAME = #{equipTypeName,jdbcType=VARCHAR},
    FAULT_TYPE = #{faultType,jdbcType=VARCHAR},
    FAULT_POSITION = #{faultPosition,jdbcType=VARCHAR},
    FAULT_DESC = #{faultDesc,jdbcType=VARCHAR},
    ATMOSPHERE_TEMP = #{atmosphereTemp,jdbcType=VARCHAR},
    ATMOSPHERE_HUMI = #{atmosphereHumi,jdbcType=VARCHAR},
    ATMOSPHERE_PRESS = #{atmospherePress,jdbcType=VARCHAR},
    VOLTAGE = #{voltage,jdbcType=VARCHAR},
    RESISTANCE = #{resistance,jdbcType=VARCHAR},
    WATER_PRESSURE = #{waterPressure,jdbcType=VARCHAR},
    WATER_TEMP = #{waterTemp,jdbcType=VARCHAR},
    PRESSURE = #{pressure,jdbcType=VARCHAR},
    APPLICATION_TIME = #{applicationTime,jdbcType=VARCHAR},
    IN_RESULT = #{inResult,jdbcType=VARCHAR},
    IN_FAULT_POSITION = #{inFaultPosition,jdbcType=VARCHAR},
    IN_REASON = #{inReason,jdbcType=VARCHAR},
    IN_REPAIR_MEASURE = #{inRepairMeasure,jdbcType=VARCHAR},
    IN_REPAIR_MODE = #{inRepairMode,jdbcType=VARCHAR},
    IN_REPAIR_RANK = #{inRepairRank,jdbcType=VARCHAR},
    IN_PLAN_TIME = #{inPlanTime,jdbcType=VARCHAR},
    IN_PRICE = #{inPrice,jdbcType=VARCHAR},
    IN_PERSON = #{inPerson,jdbcType=VARCHAR},
    IN_REPAIR_TIME = #{inRepairTime,jdbcType=VARCHAR},
    OUT_RESULT = #{outResult,jdbcType=VARCHAR},
    OUT_FAULT_POSITION = #{outFaultPosition,jdbcType=VARCHAR},
    OUT_REASON = #{outReason,jdbcType=VARCHAR},
    OUT_REPAIR_MEASURE = #{outRepairMeasure,jdbcType=VARCHAR},
    OUT_REPAIR_MODE = #{outRepairMode,jdbcType=VARCHAR},
    OUT_REPAIR_RANK = #{outRepairRank,jdbcType=VARCHAR},
    OUT_PLAN_TIME = #{outPlanTime,jdbcType=VARCHAR},
    OUT_PRICE = #{outPrice,jdbcType=VARCHAR},
    OUT_PERSON = #{outPerson,jdbcType=VARCHAR},
    OUT_REPAIR_TIME = #{outRepairTime,jdbcType=VARCHAR},
    VERIFY_MEASURE = #{verifyMeasure,jdbcType=VARCHAR},
    EQUIP_VERIFY_MODE = #{equipVerifyMode,jdbcType=VARCHAR},
    EQUIP_REPAIR_RESULT = #{equipRepairResult,jdbcType=VARCHAR},
    REPORT_DONE_TIME = #{reportDoneTime,jdbcType=VARCHAR},
    VERIFY_USER = #{verifyUser,jdbcType=VARCHAR},
    VERIFY_TIME = #{verifyTime,jdbcType=VARCHAR},
    APPLICANT = #{applicant,jdbcType=VARCHAR},
    APPLICANT_TIME = #{applicantTime,jdbcType=TIMESTAMP},
    MEMO = #{memo,jdbcType=VARCHAR},
    WORKFLOW_NO = #{workflowNo,jdbcType=VARCHAR},
    REPAIR_STATUS = #{repairStatus,jdbcType=VARCHAR}
    where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
  </update>

  <!--根据设备类型查询不同类型数据-->
  <select id="selectAllReparlog" resultMap="BaseResultMap">
    select le.*,b.PROPERTY_NO FROM lims_equip_reparlog le
    LEFT JOIN lims_equip_types let
    on le.EQUIP_TYPE_ID=let.EQUIP_TYPE_ID
    left join
    lims_equipment b
    ON
    le.equip_id = b.equip_id
    WHERE
    #{equipTypeId,jdbcType=INTEGER} in(let.equip_type_id,let.equip_type_pid)
    <if test="repairStatus!=null and repairStatus!='' ">
      and le.REPAIR_STATUS = #{repairStatus}
    </if>
    order by REPALOG_ID DESC
  </select>


  <select id="selectReparlog" resultMap="BaseResultMap">
        select * from lims_equip_reparlog
        where REPALOG_ID = #{repalogId,jdbcType=INTEGER}
    </select>

  <select id="selectByequipId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select le.*,b.PROPERTY_NO,d.DEPT_NAME FROM lims_equip_reparlog le
    LEFT JOIN lims_equip_types let
    on le.EQUIP_TYPE_ID=let.EQUIP_TYPE_ID
    left join
    lims_equipment b
    ON
    le.DEPT_ID = b.equip_id
    left join
    department d
    ON
    le.DEPT_ID = d.DEPT_ID
    <where>
      <if test="repair.equipId!=null and repair.equipId!='' ">
        and le.EQUIP_ID  = #{repair.equipId,jdbcType=INTEGER}
      </if>
      <if test="repair.faultType!=null and repair.faultType!='' ">
        and le.FAULT_TYPE like CONCAT('%',#{repair.faultType,jdbcType=VARCHAR},'%')
      </if>
      <if test="repair.faultPosition!=null and repair.faultPosition!='' ">
        and le.FAULT_POSITION like CONCAT('%',#{repair.faultPosition,jdbcType=VARCHAR},'%')
      </if>
      <if test="repair.applicant!=null and repair.applicant!='' ">
        and le.APPLICANT like CONCAT('%',#{repair.applicant,jdbcType=VARCHAR},'%')
      </if>
      <if test="beginTime!=null and beginTime!='' ">
        and le.APPLICATION_TIME  &gt;= #{beginTime}
      </if>
      <if test="endTime!=null and endTime!='' ">
        and le.APPLICATION_TIME  &lt;= #{endTime}
      </if>
    </where>
     order by REPALOG_ID DESC
  </select>

</mapper>