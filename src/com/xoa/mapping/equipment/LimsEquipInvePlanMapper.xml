<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.equipment.LimsEquipInvePlanMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.LimsEquipInvePlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="INVE_ID" property="inveId" jdbcType="INTEGER" />
    <result column="INVE_NAME" property="inveName" jdbcType="VARCHAR" />
    <result column="INVE_STATUS" property="inveStatus" jdbcType="VARCHAR" />
    <result column="EQUIP_IDS" property="equipIds" jdbcType="VARCHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="CHECK_TIME_PLAN" property="checkTimePlan" jdbcType="TIMESTAMP" />
    <result column="CHECK_USER" property="checkUser" jdbcType="VARCHAR" />
    <result column="LAVE_CHECK" property="laveCheck" jdbcType="INTEGER" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    INVE_ID, INVE_NAME, INVE_STATUS, EQUIP_IDS, DEPT_ID, CHECK_TIME_PLAN, CHECK_USER, 
    LAVE_CHECK, MEMO
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.equipment.LimsEquipInvePlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lims_equip_inve_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lims_equip_inve_plan
    where INVE_ID = #{inveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_inve_plan
    where INVE_ID = #{inveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.equipment.LimsEquipInvePlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lims_equip_inve_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.equipment.LimsEquipInvePlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_inve_plan (INVE_ID, INVE_NAME, INVE_STATUS,
      EQUIP_IDS, DEPT_ID, CHECK_TIME_PLAN, 
      CHECK_USER, LAVE_CHECK, MEMO
      )
    values (#{inveId,jdbcType=INTEGER}, #{inveName,jdbcType=VARCHAR}, #{inveStatus,jdbcType=VARCHAR}, 
      #{equipIds,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{checkTimePlan,jdbcType=TIMESTAMP}, 
      #{checkUser,jdbcType=VARCHAR}, #{laveCheck,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.equipment.LimsEquipInvePlan" keyColumn="INVE_ID" keyProperty="inveId" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lims_equip_inve_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inveId != null" >
        INVE_ID,
      </if>
      <if test="inveName != null" >
        INVE_NAME,
      </if>
      <if test="inveStatus != null" >
        INVE_STATUS,
      </if>
      <if test="equipIds != null" >
        EQUIP_IDS,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="checkTimePlan != null" >
        CHECK_TIME_PLAN,
      </if>
      <if test="checkUser != null" >
        CHECK_USER,
      </if>
      <if test="laveCheck != null" >
        LAVE_CHECK,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inveId != null" >
        #{inveId,jdbcType=INTEGER},
      </if>
      <if test="inveName != null" >
        #{inveName,jdbcType=VARCHAR},
      </if>
      <if test="inveStatus != null" >
        #{inveStatus,jdbcType=VARCHAR},
      </if>
      <if test="equipIds != null" >
        #{equipIds,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="checkTimePlan != null" >
        #{checkTimePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="laveCheck != null" >
        #{laveCheck,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.equipment.LimsEquipInvePlanExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lims_equip_inve_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_inve_plan
    <set >
      <if test="record.inveId != null" >
        INVE_ID = #{record.inveId,jdbcType=INTEGER},
      </if>
      <if test="record.inveName != null" >
        INVE_NAME = #{record.inveName,jdbcType=VARCHAR},
      </if>
      <if test="record.inveStatus != null" >
        INVE_STATUS = #{record.inveStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.equipIds != null" >
        EQUIP_IDS = #{record.equipIds,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.checkTimePlan != null" >
        CHECK_TIME_PLAN = #{record.checkTimePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUser != null" >
        CHECK_USER = #{record.checkUser,jdbcType=VARCHAR},
      </if>
      <if test="record.laveCheck != null" >
        LAVE_CHECK = #{record.laveCheck,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null" >
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_inve_plan
    set INVE_ID = #{record.inveId,jdbcType=INTEGER},
      INVE_NAME = #{record.inveName,jdbcType=VARCHAR},
      INVE_STATUS = #{record.inveStatus,jdbcType=VARCHAR},
      EQUIP_IDS = #{record.equipIds,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CHECK_TIME_PLAN = #{record.checkTimePlan,jdbcType=TIMESTAMP},
      CHECK_USER = #{record.checkUser,jdbcType=VARCHAR},
      LAVE_CHECK = #{record.laveCheck,jdbcType=INTEGER},
      MEMO = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.LimsEquipInvePlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_inve_plan
    <set >
      <if test="inveName != null" >
        INVE_NAME = #{inveName,jdbcType=VARCHAR},
      </if>
      <if test="inveStatus != null" >
        INVE_STATUS = #{inveStatus,jdbcType=VARCHAR},
      </if>
      <if test="equipIds != null" >
        EQUIP_IDS = #{equipIds,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="checkTimePlan != null" >
        CHECK_TIME_PLAN = #{checkTimePlan,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="laveCheck != null" >
        LAVE_CHECK = #{laveCheck,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where INVE_ID = #{inveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.LimsEquipInvePlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_inve_plan
    set INVE_NAME = #{inveName,jdbcType=VARCHAR},
      INVE_STATUS = #{inveStatus,jdbcType=VARCHAR},
      EQUIP_IDS = #{equipIds,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CHECK_TIME_PLAN = #{checkTimePlan,jdbcType=TIMESTAMP},
      CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      LAVE_CHECK = #{laveCheck,jdbcType=INTEGER},
      MEMO = #{memo,jdbcType=VARCHAR}
    where INVE_ID = #{inveId,jdbcType=INTEGER}
  </update>

  <select id="findInvenPlanList" parameterType="map" resultMap="BaseResultMap">
    select a.*,
      b.DEPT_NAME
    FROM  lims_equip_inve_plan a
    LEFT JOIN department b ON a.DEPT_ID = b.DEPT_ID
    where a.CHECK_USER=#{userId}
    order by
    <!--CHECK_TIME_PLAN desc-->
    INVE_ID desc
  </select>

  <delete id="delInveInfo" parameterType="map">
     delete from lims_equip_inve_plan
    where  INVE_ID IN
    <foreach collection="ids" index="index" item="inveId" separator="," open="(" close=")">
      #{inveId}
    </foreach>
  </delete>
  <update id="upbcheckStatus" parameterType="map">
    UPDATE lims_equip_inve_plan
    SET
          INVE_STATUS = #{inveStatus}
    where
    INVE_ID = #{inveId}
  </update>


</mapper>