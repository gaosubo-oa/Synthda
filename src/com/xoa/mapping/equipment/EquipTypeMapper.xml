<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.equipment.EquipTypeMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.equipment.EquipType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="EQUIP_TYPE_ID" property="id" jdbcType="INTEGER" />
    <result column="EQUIP_TYPE_NAME" property="label" jdbcType="VARCHAR" />
    <result column="EQUIP_TYPE_PID" property="equipTypePid" jdbcType="INTEGER" />
    <result column="CAPY_IDS" property="capyIds" jdbcType="VARCHAR" />
    <result column="EQUIP_SORT" property="equipSort" jdbcType="INTEGER" />
    <result column="EQUIP_TYPE_CODE" property="equipTypeCode" jdbcType="VARCHAR"/>
    <result column="REPORT_CODE" property="reportCode" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    EQUIP_TYPE_ID, EQUIP_TYPE_NAME, EQUIP_TYPE_PID, CAPY_IDS,EQUIP_SORT,EQUIP_TYPE_CODE,REPORT_CODE
  </sql>
  <select id="MaxSort"  resultType="java.lang.Integer">
    select
     EQUIP_SORT
    FROM
    lims_equip_types
    WHERE EQUIP_TYPE_PID=#{equipTypePid}
    order by
    EQUIP_SORT
    desc
    limit 1
  </select>
  <update id="changeSort" parameterType="com.xoa.model.equipment.EquipType">
    UPDATE
    lims_equip_types
    SET
    EQUIP_TYPE_PID=#{equipTypePid},
    EQUIP_SORT=#{equipSort}
    where
    EQUIP_TYPE_ID=#{id}
  </update>
  <select id="selAllSortByPid" parameterType="integer" resultMap="BaseResultMap">
    SELECT
    EQUIP_TYPE_ID,EQUIP_SORT
    FROM lims_equip_types
    WHERE EQUIP_TYPE_PID=#{equipTypePid}
    ORDER BY
    EQUIP_SORT
    ASC
  </select>
  <update id="editSortById" parameterType="com.xoa.model.equipment.EquipType">
    UPDATE
    lims_equip_types
    SET
    EQUIP_SORT=#{equipSort}
    where
    EQUIP_TYPE_ID=#{id}
  </update>
  <select id="selList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from lims_equip_types
    WHERE
    EQUIP_TYPE_PID=#{equipTypePid}
    order by
    EQUIP_SORT
    asc
  </select>
  <!-- 查询所有信息，没有假删除， -->
  <select id="selectAllEquipType" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from lims_equip_types
    ORDER BY
        EQUIP_SORT ASC
  </select>

  <select id="selectNameAndId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List"/>
    from lims_equip_types

  </select>
  <!--查询所有父类菜单 -->
  <select id="selectParentEquipType" resultMap="BaseResultMap" >
    select
        <include refid="Base_Column_List"/>
    from lims_equip_types
    where EQUIP_TYPE_PID = 0
    ORDER BY
        EQUIP_SORT ASC
  </select>
  <!--查询是否有儿子 -->
  <select id="contChild" resultType="java.lang.Integer" >
    select count(EQUIP_TYPE_ID) total from lims_equip_types where EQUIP_TYPE_PID = #{id,jdbcType=INTEGER}
  </select>

  <!-- 查询某个父类下所有的子类 -->
  <select id="selectChildEquipType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from lims_equip_types
    where EQUIP_TYPE_PID = #{id,jdbcType=INTEGER}
    ORDER BY
     EQUIP_SORT ASC
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from lims_equip_types
    where EQUIP_TYPE_ID = #{id,jdbcType=INTEGER}
  </select>
  <!-- 根据sort查询某个sort之后的东西-->
  <select id="selectBySort" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lims_equip_types
    where  EQUIP_SORT &gt;=#{equipSort}
  </select>
  <select id="maxEquipTypeSort" resultType="integer">
    select EQUIP_SORT from lims_equip_types ORDER BY EQUIP_SORT desc limit 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lims_equip_types
    where EQUIP_TYPE_ID = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.xoa.model.equipment.EquipType" useGeneratedKeys="true" keyProperty="id">
    insert into lims_equip_types (EQUIP_TYPE_ID, EQUIP_TYPE_NAME, EQUIP_TYPE_PID,
      CAPY_IDS,EQUIP_SORT,EQUIP_TYPE_CODE)
    values (#{id,jdbcType=INTEGER}, #{label,jdbcType=VARCHAR}, #{equipTypePid,jdbcType=INTEGER},
      #{capyIds,jdbcType=VARCHAR},#{equipSort,jdbcType=INTEGER},#{equipTypeCode,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.equipment.EquipType" useGeneratedKeys="true" keyProperty="id" keyColumn="EQUIP_TYPE_ID">

    insert into lims_equip_types
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        EQUIP_TYPE_ID,
      </if>
      <if test="label != null" >
        EQUIP_TYPE_NAME,
      </if>
      <if test="equipTypePid != null" >
        EQUIP_TYPE_PID,
      </if>
      <if test="capyIds != null" >
        CAPY_IDS,
      </if>
      <if test="equipSort != null" >
        EQUIP_SORT,
      </if>
      <if test="equipTypeCode !=null">
        EQUIP_TYPE_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="equipTypePid != null" >
        #{equipTypePid,jdbcType=INTEGER},
      </if>
      <if test="capyIds != null" >
        #{capyIds,jdbcType=VARCHAR},
      </if>
      <if test="equipSort != null" >
        #{equipSort,jdbcType=INTEGER},
      </if>
      <if test="equipTypeCode !=null">
        #{equipTypeCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.equipment.EquipType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_types
    <set >
      <if test="label != null" >
        EQUIP_TYPE_NAME = #{label,jdbcType=VARCHAR},
      </if>
      <if test="equipTypePid != null" >
        EQUIP_TYPE_PID = #{equipTypePid,jdbcType=INTEGER},
      </if>
      <if test="capyIds != null" >
        CAPY_IDS = #{capyIds,jdbcType=VARCHAR},
      </if>
      <if test="equipSort != null" >
        EQUIP_SORT = #{equipSort,jdbcType=INTEGER},
      </if>
      <if test="equipTypeCode !=null">
        EQUIP_TYPE_CODE = #{equipTypeCode,jdbcType=VARCHAR},
      </if>
    </set>
    where EQUIP_TYPE_ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.equipment.EquipType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lims_equip_types
    set EQUIP_TYPE_NAME = #{label,jdbcType=VARCHAR},
      EQUIP_TYPE_PID = #{equipTypePid,jdbcType=INTEGER},
      CAPY_IDS = #{capyIds,jdbcType=VARCHAR},
    EQUIP_SORT = #{equipSort,jdbcType=INTEGER},
    EQUIP_TYPE_CODE = #{equipTypeCode,jdbcType=VARCHAR}
    where EQUIP_TYPE_ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectSortEquipType" parameterType="integer" resultMap="BaseResultMap">
    select
       <include refid="Base_Column_List"/>
    from lims_equip_types
    where EQUIP_TYPE_ID &gt;= #{start}
    and EQUIP_TYPE_ID &lt;= #{end}
  </select>

  <!--//根据ids得到记录集合
  List<EquipType> selectEquipTypeByIds(List<Integer> ids);-->
  <select id="selectEquipTypeByIds" parameterType="Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from lims_equip_types where EQUIP_TYPE_PID in
    <foreach collection="list" separator="," open="(" index="index" close=")" item="id">
      #{id}
    </foreach>
  </select>

    <!-- 查询所有传感器 -->
  <select id="selectAllSensor" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    EQUIP_TYPE_ID, EQUIP_TYPE_NAME, EQUIP_TYPE_PID, CAPY_IDS,EQUIP_SORT,EQUIP_TYPE_CODE
    from
    lims_equip_types
    where
    EQUIP_TYPE_PID =
    (select
    EQUIP_TYPE_ID
    from
    lims_equip_types
    where
    EQUIP_TYPE_NAME = #{label,jdbcType=VARCHAR})
  </select>

  <select id="selectTypename" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM lims_equip_types
    where
    EQUIP_TYPE_CODE = #{equipTypeCode}
  </select>

  <update id="updateCode" parameterType="map">
       update lims_equip_types
       set EQUIP_TYPE_CODE = #{equipTypeCode}
       where
        EQUIP_TYPE_ID = #{id}
  </update>

  <select id="findItemEquipType"  parameterType="map" resultMap="BaseResultMap">
       SELECT
          let.EQUIP_TYPE_NAME,
          let.EQUIP_TYPE_ID
      FROM
          lims_ite_equip_type liet
          LEFT JOIN lims_equip_types let ON liet.EQUIP_TYPE_ID = let.EQUIP_TYPE_ID
      WHERE
          liet.ITEM_ID =#{itemId}
         <if test="equipTypeId!=null ">
           and let.EQUIP_TYPE_PID=#{equipTypeId}
         </if>
    </select>

  <select id="selctByTypeCode" parameterType="map" resultMap="BaseResultMap">
    select EQUIP_TYPE_ID from lims_equip_types
    where EQUIP_TYPE_PID =(select EQUIP_TYPE_ID from lims_equip_types where EQUIP_TYPE_CODE="SENSOR")
    or EQUIP_TYPE_CODE=#{equipTypeCode}
  </select>

  <select id="selectByLable" parameterType="java.lang.String" resultMap="BaseResultMap">
  SELECT
  <include refid="Base_Column_List" />
  FROM lims_equip_types
  where
  EQUIP_TYPE_NAME = #{lable}
</select>

  <select id="selectByLablenew" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM lims_equip_types
    where
    EQUIP_TYPE_ID = #{id}
  </select>
  <select id="selectByPid" resultMap="BaseResultMap" parameterType="integer">
    SELECT
    <include refid="Base_Column_List" />
    FROM lims_equip_types
    where
    EQUIP_TYPE_ID = #{pid}
  </select>

  <select id="selectBychildrenPid" parameterType="integer" resultMap="BaseResultMap">
    select *  FROM lims_equip_types WHERE EQUIP_TYPE_ID =(select EQUIP_TYPE_PID  from lims_equip_types WHERE EQUIP_TYPE_ID=#{equipTypeId})
  </select>

  <select id="selectTypeNode" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT
        EQUIP_TYPE_ID
    FROM
        lims_equip_types
WHERE
        EQUIP_TYPE_ID IN (
        SELECT
                EQUIP_TYPE_ID AS did
        FROM
                (
                SELECT
                        t1.EQUIP_TYPE_ID,
                IF
                        (
                                find_in_set( EQUIP_TYPE_PID, @pids ) > 0
                                OR find_in_set( EQUIP_TYPE_ID, @pids ),
                                @pids := concat( @pids, ',', EQUIP_TYPE_ID ),
                                0
                        ) AS ischild
                FROM
                        ( SELECT EQUIP_TYPE_ID, EQUIP_TYPE_PID FROM lims_equip_types t ) t1,
                        ( SELECT @pids := #{typeId} ) t2
                ) t3
        WHERE
        ischild != 0
        )
  </select>
</mapper>