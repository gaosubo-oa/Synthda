<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.securityApproval.SecurityApprovalMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.securityApproval.SecurityApproval" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="SP_ID" property="spId" jdbcType="INTEGER" />
    <result column="MODULE_TABLE" property="moduleTable" jdbcType="VARCHAR" />
    <result column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
    <result column="OPERATION_USER_ID" property="operationUserId" jdbcType="VARCHAR" />
    <result column="OPERATION_TIME" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="OPERATION_TYPE" property="operationType" jdbcType="CHAR" />
    <result column="APPROVER_USER_ID" property="approverUserId" jdbcType="VARCHAR" />
    <result column="APPROVAL_TIME" property="approvalTime" jdbcType="TIMESTAMP" />
    <result column="APPROVAL_STATUS" property="approvalStatus" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.securityApproval.SecurityApprovalWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="OPERATION_CONTENT" property="operationContent" jdbcType="LONGVARCHAR" />
    <result column="OPERATION_REASON" property="operationReason" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
    <result column="APPROVAL_OPINION" property="approvalOpinion" jdbcType="LONGVARCHAR" />

    <association property="users" javaType="com.xoa.model.users.Users">
      <id column="UID" property="uid" javaType="int" />
      <result column="USER_ID" property="userId" javaType="String" />
      <result column="USER_NAME" property="userName" javaType="String" />
      <result column="BYNAME" property="byname" javaType="string"/>
      <result column="SEX" property="sex" javaType="string"/>
      <result column="AVATAR" property="avatar" javaType="string"/>
      <result column="USER_PRIV" property="userPriv" javaType="int"/>
      <result column="USER_PRIV_NO" property="userPrivNo" javaType="short"/>
      <result column="USER_PRIV_NAME" property="userPrivName" javaType="string"/>
      <result column="POST_PRIV" property="postPriv" javaType="string"/>
      <result column="POST_DEPT" property="postDept" javaType="string"/>
      <result column="DEPT_ID" property="deptId" javaType="int"/>
      <result column="DEPT_NAME" property="deptName" javaType="string"/>
      <result column="USER_SECRECY" property="userSecrecy" javaType="string"/>
    </association>

    <association property="department" javaType="com.xoa.model.department.Department">
        <id column="DEPT_ID" property="deptId" javaType="int"/>
        <result column="DEPT_NAME" property="deptName" javaType="string"/>
        <result column="DEPT_TYPE" property="deptType" javaType="string"/>
        <result column="DEPT_NO" property="deptNo" javaType="string"/>
        <result column="DEPT_CODE" property="deptCode" javaType="string"/>
        <result column="DEPT_PARENT" property="deptParent" javaType="int"/>
        <result column="MANAGER" property="manager" javaType="string"/>
        <result column="DEPT_APPROVER" property="deptApprover" javaType="string"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SP_ID, MODULE_TABLE, RECORD_ID, OPERATION_USER_ID, OPERATION_TIME, OPERATION_TYPE, 
    APPROVER_USER_ID, APPROVAL_TIME, APPROVAL_STATUS
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    OPERATION_CONTENT, OPERATION_REASON, ATTACHMENT_ID, ATTACHMENT_NAME, APPROVAL_OPINION
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.securityApproval.SecurityApprovalExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from security_approval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.securityApproval.SecurityApprovalExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security_approval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from security_approval
    where SP_ID = #{spId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from security_approval
    where SP_ID = #{spId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.securityApproval.SecurityApprovalExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from security_approval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.securityApproval.SecurityApprovalWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into security_approval (SP_ID, MODULE_TABLE, RECORD_ID, 
      OPERATION_USER_ID, OPERATION_TIME, OPERATION_TYPE, 
      APPROVER_USER_ID, APPROVAL_TIME, APPROVAL_STATUS, 
      OPERATION_CONTENT, OPERATION_REASON, 
      ATTACHMENT_ID, ATTACHMENT_NAME, APPROVAL_OPINION
      )
    values (#{spId,jdbcType=INTEGER}, #{moduleTable,jdbcType=VARCHAR}, #{recordId,jdbcType=INTEGER}, 
      #{operationUserId,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}, #{operationType,jdbcType=CHAR}, 
      #{approverUserId,jdbcType=VARCHAR}, #{approvalTime,jdbcType=TIMESTAMP}, #{approvalStatus,jdbcType=CHAR}, 
      #{operationContent,jdbcType=LONGVARCHAR}, #{operationReason,jdbcType=LONGVARCHAR}, 
      #{attachmentId,jdbcType=LONGVARCHAR}, #{attachmentName,jdbcType=LONGVARCHAR}, #{approvalOpinion,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.securityApproval.SecurityApprovalWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into security_approval
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spId != null" >
        SP_ID,
      </if>
      <if test="moduleTable != null" >
        MODULE_TABLE,
      </if>
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="operationUserId != null" >
        OPERATION_USER_ID,
      </if>
      <if test="operationTime != null" >
        OPERATION_TIME,
      </if>
      <if test="operationType != null" >
        OPERATION_TYPE,
      </if>
      <if test="approverUserId != null" >
        APPROVER_USER_ID,
      </if>
      <if test="approvalTime != null" >
        APPROVAL_TIME,
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS,
      </if>
      <if test="operationContent != null" >
        OPERATION_CONTENT,
      </if>
      <if test="operationReason != null" >
        OPERATION_REASON,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="approvalOpinion != null" >
        APPROVAL_OPINION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spId != null" >
        #{spId,jdbcType=INTEGER},
      </if>
      <if test="moduleTable != null" >
        #{moduleTable,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="operationUserId != null" >
        #{operationUserId,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null" >
        #{operationType,jdbcType=CHAR},
      </if>
      <if test="approverUserId != null" >
        #{approverUserId,jdbcType=VARCHAR},
      </if>
      <if test="approvalTime != null" >
        #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null" >
        #{approvalStatus,jdbcType=CHAR},
      </if>
      <if test="operationContent != null" >
        #{operationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationReason != null" >
        #{operationReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="approvalOpinion != null" >
        #{approvalOpinion,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.securityApproval.SecurityApprovalExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from security_approval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    <set >
      <if test="record.spId != null" >
        SP_ID = #{record.spId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleTable != null" >
        MODULE_TABLE = #{record.moduleTable,jdbcType=VARCHAR},
      </if>
      <if test="record.recordId != null" >
        RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.operationUserId != null" >
        OPERATION_USER_ID = #{record.operationUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null" >
        OPERATION_TIME = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operationType != null" >
        OPERATION_TYPE = #{record.operationType,jdbcType=CHAR},
      </if>
      <if test="record.approverUserId != null" >
        APPROVER_USER_ID = #{record.approverUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalTime != null" >
        APPROVAL_TIME = #{record.approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvalStatus != null" >
        APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR},
      </if>
      <if test="record.operationContent != null" >
        OPERATION_CONTENT = #{record.operationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.operationReason != null" >
        OPERATION_REASON = #{record.operationReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.approvalOpinion != null" >
        APPROVAL_OPINION = #{record.approvalOpinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    set SP_ID = #{record.spId,jdbcType=INTEGER},
      MODULE_TABLE = #{record.moduleTable,jdbcType=VARCHAR},
      RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      OPERATION_USER_ID = #{record.operationUserId,jdbcType=VARCHAR},
      OPERATION_TIME = #{record.operationTime,jdbcType=TIMESTAMP},
      OPERATION_TYPE = #{record.operationType,jdbcType=CHAR},
      APPROVER_USER_ID = #{record.approverUserId,jdbcType=VARCHAR},
      APPROVAL_TIME = #{record.approvalTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR},
      OPERATION_CONTENT = #{record.operationContent,jdbcType=LONGVARCHAR},
      OPERATION_REASON = #{record.operationReason,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      APPROVAL_OPINION = #{record.approvalOpinion,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    set SP_ID = #{record.spId,jdbcType=INTEGER},
      MODULE_TABLE = #{record.moduleTable,jdbcType=VARCHAR},
      RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      OPERATION_USER_ID = #{record.operationUserId,jdbcType=VARCHAR},
      OPERATION_TIME = #{record.operationTime,jdbcType=TIMESTAMP},
      OPERATION_TYPE = #{record.operationType,jdbcType=CHAR},
      APPROVER_USER_ID = #{record.approverUserId,jdbcType=VARCHAR},
      APPROVAL_TIME = #{record.approvalTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{record.approvalStatus,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.securityApproval.SecurityApprovalWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    <set >
      <if test="moduleTable != null" >
        MODULE_TABLE = #{moduleTable,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null" >
        RECORD_ID = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="operationUserId != null" >
        OPERATION_USER_ID = #{operationUserId,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        OPERATION_TIME = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null" >
        OPERATION_TYPE = #{operationType,jdbcType=CHAR},
      </if>
      <if test="approverUserId != null" >
        APPROVER_USER_ID = #{approverUserId,jdbcType=VARCHAR},
      </if>
      <if test="approvalTime != null" >
        APPROVAL_TIME = #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null" >
        APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR},
      </if>
      <if test="operationContent != null" >
        OPERATION_CONTENT = #{operationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationReason != null" >
        OPERATION_REASON = #{operationReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="approvalOpinion != null" >
        APPROVAL_OPINION = #{approvalOpinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SP_ID = #{spId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.securityApproval.SecurityApprovalWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    set MODULE_TABLE = #{moduleTable,jdbcType=VARCHAR},
      RECORD_ID = #{recordId,jdbcType=INTEGER},
      OPERATION_USER_ID = #{operationUserId,jdbcType=VARCHAR},
      OPERATION_TIME = #{operationTime,jdbcType=TIMESTAMP},
      OPERATION_TYPE = #{operationType,jdbcType=CHAR},
      APPROVER_USER_ID = #{approverUserId,jdbcType=VARCHAR},
      APPROVAL_TIME = #{approvalTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR},
      OPERATION_CONTENT = #{operationContent,jdbcType=LONGVARCHAR},
      OPERATION_REASON = #{operationReason,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      APPROVAL_OPINION = #{approvalOpinion,jdbcType=LONGVARCHAR}
    where SP_ID = #{spId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.securityApproval.SecurityApproval" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_approval
    set MODULE_TABLE = #{moduleTable,jdbcType=VARCHAR},
      RECORD_ID = #{recordId,jdbcType=INTEGER},
      OPERATION_USER_ID = #{operationUserId,jdbcType=VARCHAR},
      OPERATION_TIME = #{operationTime,jdbcType=TIMESTAMP},
      OPERATION_TYPE = #{operationType,jdbcType=CHAR},
      APPROVER_USER_ID = #{approverUserId,jdbcType=VARCHAR},
      APPROVAL_TIME = #{approvalTime,jdbcType=TIMESTAMP},
      APPROVAL_STATUS = #{approvalStatus,jdbcType=CHAR}
    where SP_ID = #{spId,jdbcType=INTEGER}
  </update>


  <select id="selectApproveUser" resultMap="ResultMapWithBLOBs" parameterType="map">
    select
    sa.SP_ID, sa.MODULE_TABLE, sa.RECORD_ID, sa.OPERATION_USER_ID, sa.OPERATION_TIME, sa.OPERATION_TYPE,
    sa.APPROVER_USER_ID, sa.APPROVAL_TIME, sa.APPROVAL_STATUS, sa.OPERATION_CONTENT, sa.OPERATION_REASON, sa.ATTACHMENT_ID, sa.ATTACHMENT_NAME, sa.APPROVAL_OPINION
    <if test="moduleTable != null and moduleTable == 'user'" >
        ,u.*,d.DEPT_NAME
    </if>
    <if test="moduleTable != null and moduleTable == 'department'" >
        ,d.*
    </if>
    from security_approval sa
    <if test="moduleTable != null and moduleTable == 'user'" >
        inner join user u on sa.RECORD_ID = u.uid
        inner join department d on u.DEPT_ID = d.DEPT_ID
    </if>
    <if test="moduleTable != null and moduleTable == 'department'" >
        inner join department d on sa.RECORD_ID = d.DEPT_ID
    </if>
    <where >
        <trim suffixOverrides="and">
            sa.MODULE_TABLE = #{moduleTable} and
            <if test="approvalStatus != null and approvalStatus != ''" >
                sa.APPROVAL_STATUS = #{approvalStatus} and
            </if>
            <if test="approvalStatus == null or approvalStatus == ''" >
                sa.APPROVAL_STATUS != '0' and
            </if>
            <if test="recordId != null and recordId != ''" >
                sa.RECORD_ID = #{recordId} and
            </if>
        </trim>
    </where>
    order by sa.OPERATION_TIME desc
  </select>

  <select id="selectApproveUser" resultMap="ResultMapWithBLOBs" parameterType="map" databaseId="kingbase">
    select
    sa.SP_ID, sa.MODULE_TABLE, sa.RECORD_ID, sa.OPERATION_USER_ID, sa.OPERATION_TIME, sa.OPERATION_TYPE,
    sa.APPROVER_USER_ID, sa.APPROVAL_TIME, sa.APPROVAL_STATUS, sa.OPERATION_CONTENT, sa.OPERATION_REASON, sa.ATTACHMENT_ID, sa.ATTACHMENT_NAME, sa.APPROVAL_OPINION
    <if test="moduleTable != null and moduleTable == 'user'" >
        ,u.*,d.DEPT_NAME
    </if>
    <if test="moduleTable != null and moduleTable == 'department'" >
        ,d.*
    </if>
    from security_approval sa
    <if test="moduleTable != null and moduleTable == 'user'" >
        inner join "user" u on sa.RECORD_ID = u.uid
        inner join department d on u.DEPT_ID = d.DEPT_ID
    </if>
    <if test="moduleTable != null and moduleTable == 'department'" >
        inner join department d on sa.RECORD_ID = d.DEPT_ID
    </if>
    <where >
        <trim suffixOverrides="and">
            sa.MODULE_TABLE = #{moduleTable} and
            <if test="approvalStatus != null and approvalStatus != ''" >
                sa.APPROVAL_STATUS = #{approvalStatus} and
            </if>
            <if test="approvalStatus == null or approvalStatus == ''" >
                sa.APPROVAL_STATUS != '0' and
            </if>
            <if test="recordId != null and recordId != ''" >
                sa.RECORD_ID = #{recordId} and
            </if>
        </trim>
    </where>
    order by sa.OPERATION_TIME desc
  </select>
</mapper>