<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.securityApproval.SecurityLogMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="SLOG_ID" property="slogId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_PRIV" property="userPriv" jdbcType="VARCHAR" />
    <result column="MODULE" property="module" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="ACCESS_ID" property="accessId" jdbcType="VARCHAR" />
    <result column="CLIENT_TYPE" property="clientType" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_PRIV_NAME" property="userPrivName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.securityApproval.SecurityLog" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="PARAMETERS" property="parameters" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SLOG_ID, USER_ID, USER_PRIV, MODULE, CONTENT, OPERATE_TIME, ACCESS_ID, CLIENT_TYPE, 
    REMARKS
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PARAMETERS
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.securityApproval.SecurityLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from security_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.securityApproval.SecurityLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from security_log
    where SLOG_ID = #{slogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from security_log
    where SLOG_ID = #{slogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.securityApproval.SecurityLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from security_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into security_log (SLOG_ID, USER_ID, USER_PRIV, 
      MODULE, CONTENT, OPERATE_TIME, 
      ACCESS_ID, CLIENT_TYPE, REMARKS, 
      PARAMETERS)
    values (#{slogId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{userPriv,jdbcType=VARCHAR}, 
      #{module,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{accessId,jdbcType=VARCHAR}, #{clientType,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{parameters,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into security_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="slogId != null" >
        SLOG_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userPriv != null" >
        USER_PRIV,
      </if>
      <if test="module != null" >
        MODULE,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME,
      </if>
      <if test="accessId != null" >
        ACCESS_ID,
      </if>
      <if test="clientType != null" >
        CLIENT_TYPE,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="parameters != null" >
        PARAMETERS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="slogId != null" >
        #{slogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userPriv != null" >
        #{userPriv,jdbcType=VARCHAR},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessId != null" >
        #{accessId,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="parameters != null" >
        #{parameters,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.securityApproval.SecurityLogExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from security_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    <set >
      <if test="record.slogId != null" >
        SLOG_ID = #{record.slogId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userPriv != null" >
        USER_PRIV = #{record.userPriv,jdbcType=VARCHAR},
      </if>
      <if test="record.module != null" >
        MODULE = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null" >
        OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accessId != null" >
        ACCESS_ID = #{record.accessId,jdbcType=VARCHAR},
      </if>
      <if test="record.clientType != null" >
        CLIENT_TYPE = #{record.clientType,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.parameters != null" >
        PARAMETERS = #{record.parameters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    set SLOG_ID = #{record.slogId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_PRIV = #{record.userPriv,jdbcType=VARCHAR},
      MODULE = #{record.module,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR},
      OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      ACCESS_ID = #{record.accessId,jdbcType=VARCHAR},
      CLIENT_TYPE = #{record.clientType,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      PARAMETERS = #{record.parameters,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    set SLOG_ID = #{record.slogId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_PRIV = #{record.userPriv,jdbcType=VARCHAR},
      MODULE = #{record.module,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR},
      OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      ACCESS_ID = #{record.accessId,jdbcType=VARCHAR},
      CLIENT_TYPE = #{record.clientType,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userPriv != null" >
        USER_PRIV = #{userPriv,jdbcType=VARCHAR},
      </if>
      <if test="module != null" >
        MODULE = #{module,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessId != null" >
        ACCESS_ID = #{accessId,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        CLIENT_TYPE = #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="parameters != null" >
        PARAMETERS = #{parameters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SLOG_ID = #{slogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    set USER_ID = #{userId,jdbcType=VARCHAR},
      USER_PRIV = #{userPriv,jdbcType=VARCHAR},
      MODULE = #{module,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      ACCESS_ID = #{accessId,jdbcType=VARCHAR},
      CLIENT_TYPE = #{clientType,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      PARAMETERS = #{parameters,jdbcType=LONGVARCHAR}
    where SLOG_ID = #{slogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.securityApproval.SecurityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update security_log
    set USER_ID = #{userId,jdbcType=VARCHAR},
      USER_PRIV = #{userPriv,jdbcType=VARCHAR},
      MODULE = #{module,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      ACCESS_ID = #{accessId,jdbcType=VARCHAR},
      CLIENT_TYPE = #{clientType,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where SLOG_ID = #{slogId,jdbcType=INTEGER}
  </update>

  <select id="selectSecurityLog" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    sl.SLOG_ID, sl.USER_ID, sl.USER_PRIV, sl.MODULE, sl.CONTENT, sl.OPERATE_TIME, sl.ACCESS_ID, sl.CLIENT_TYPE,
    sl.REMARKS,sl.PARAMETERS,u.USER_NAME,u.USER_PRIV_NAME
    from security_log sl
    left join user u on sl.USER_ID = u.USER_ID
    <where>
        <trim suffixOverrides="and">
            <if test="secrecy != null" >
                and sl.USER_ID != #{secrecy}
            </if>
            <if test="auditManage != null and auditSecrecy != null" >
                and sl.USER_ID = #{auditManage} or sl.USER_ID = #{auditSecrecy}
            </if>
            <if test="userPriv != null" >
                and sl.USER_PRIV != 1
            </if>
        </trim>
    </where>
    order by sl.OPERATE_TIME desc
  </select>

  <select id="selectSecurityLog" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="kingbase">
    select
    sl.SLOG_ID, sl.USER_ID, sl.USER_PRIV, sl.MODULE, sl.CONTENT, sl.OPERATE_TIME, sl.ACCESS_ID, sl.CLIENT_TYPE,
    sl.REMARKS,sl.PARAMETERS,u.USER_NAME,u.USER_PRIV_NAME
    from security_log sl
    left join "user" u on sl.USER_ID = u.USER_ID
    <where>
        <trim suffixOverrides="and">
            <if test="secrecy != null" >
                and sl.USER_ID != #{secrecy}
            </if>
            <if test="auditManage != null and auditSecrecy != null" >
                and sl.USER_ID = #{auditManage} or sl.USER_ID = #{auditSecrecy}
            </if>
            <if test="userPriv != null" >
                and sl.USER_PRIV != 1
            </if>
        </trim>
    </where>
    order by sl.OPERATE_TIME desc
  </select>
</mapper>