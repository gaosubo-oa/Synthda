package com.xoa.model.censor;

import java.util.ArrayList;
import java.util.List;

public class CensorWordsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public CensorWordsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWordIdIsNull() {
            addCriterion("WORD_ID is null");
            return (Criteria) this;
        }

        public Criteria andWordIdIsNotNull() {
            addCriterion("WORD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andWordIdEqualTo(Integer value) {
            addCriterion("WORD_ID =", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdNotEqualTo(Integer value) {
            addCriterion("WORD_ID <>", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdGreaterThan(Integer value) {
            addCriterion("WORD_ID >", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("WORD_ID >=", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdLessThan(Integer value) {
            addCriterion("WORD_ID <", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdLessThanOrEqualTo(Integer value) {
            addCriterion("WORD_ID <=", value, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdIn(List<Integer> values) {
            addCriterion("WORD_ID in", values, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdNotIn(List<Integer> values) {
            addCriterion("WORD_ID not in", values, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdBetween(Integer value1, Integer value2) {
            addCriterion("WORD_ID between", value1, value2, "wordId");
            return (Criteria) this;
        }

        public Criteria andWordIdNotBetween(Integer value1, Integer value2) {
            addCriterion("WORD_ID not between", value1, value2, "wordId");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("UID is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("UID is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("UID =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("UID <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("UID >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("UID >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("UID <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("UID <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("UID in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("UID not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("UID between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("UID not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andFindIsNull() {
            addCriterion("FIND is null");
            return (Criteria) this;
        }

        public Criteria andFindIsNotNull() {
            addCriterion("FIND is not null");
            return (Criteria) this;
        }

        public Criteria andFindEqualTo(String value) {
            addCriterion("FIND =", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindNotEqualTo(String value) {
            addCriterion("FIND <>", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindGreaterThan(String value) {
            addCriterion("FIND >", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindGreaterThanOrEqualTo(String value) {
            addCriterion("FIND >=", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindLessThan(String value) {
            addCriterion("FIND <", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindLessThanOrEqualTo(String value) {
            addCriterion("FIND <=", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindLike(String value) {
            addCriterion("FIND like", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindNotLike(String value) {
            addCriterion("FIND not like", value, "find");
            return (Criteria) this;
        }

        public Criteria andFindIn(List<String> values) {
            addCriterion("FIND in", values, "find");
            return (Criteria) this;
        }

        public Criteria andFindNotIn(List<String> values) {
            addCriterion("FIND not in", values, "find");
            return (Criteria) this;
        }

        public Criteria andFindBetween(String value1, String value2) {
            addCriterion("FIND between", value1, value2, "find");
            return (Criteria) this;
        }

        public Criteria andFindNotBetween(String value1, String value2) {
            addCriterion("FIND not between", value1, value2, "find");
            return (Criteria) this;
        }

        public Criteria andReplacementIsNull() {
            addCriterion("REPLACEMENT is null");
            return (Criteria) this;
        }

        public Criteria andReplacementIsNotNull() {
            addCriterion("REPLACEMENT is not null");
            return (Criteria) this;
        }

        public Criteria andReplacementEqualTo(String value) {
            addCriterion("REPLACEMENT =", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementNotEqualTo(String value) {
            addCriterion("REPLACEMENT <>", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementGreaterThan(String value) {
            addCriterion("REPLACEMENT >", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementGreaterThanOrEqualTo(String value) {
            addCriterion("REPLACEMENT >=", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementLessThan(String value) {
            addCriterion("REPLACEMENT <", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementLessThanOrEqualTo(String value) {
            addCriterion("REPLACEMENT <=", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementLike(String value) {
            addCriterion("REPLACEMENT like", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementNotLike(String value) {
            addCriterion("REPLACEMENT not like", value, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementIn(List<String> values) {
            addCriterion("REPLACEMENT in", values, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementNotIn(List<String> values) {
            addCriterion("REPLACEMENT not in", values, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementBetween(String value1, String value2) {
            addCriterion("REPLACEMENT between", value1, value2, "replacement");
            return (Criteria) this;
        }

        public Criteria andReplacementNotBetween(String value1, String value2) {
            addCriterion("REPLACEMENT not between", value1, value2, "replacement");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table censor_words
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table censor_words
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}