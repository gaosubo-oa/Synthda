package com.xoa.model.qrCodeLogin;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QrCodeLoginExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public QrCodeLoginExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQrCodeIdIsNull() {
            addCriterion("QR_CODE_ID is null");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdIsNotNull() {
            addCriterion("QR_CODE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdEqualTo(Integer value) {
            addCriterion("QR_CODE_ID =", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdNotEqualTo(Integer value) {
            addCriterion("QR_CODE_ID <>", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdGreaterThan(Integer value) {
            addCriterion("QR_CODE_ID >", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("QR_CODE_ID >=", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdLessThan(Integer value) {
            addCriterion("QR_CODE_ID <", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdLessThanOrEqualTo(Integer value) {
            addCriterion("QR_CODE_ID <=", value, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdIn(List<Integer> values) {
            addCriterion("QR_CODE_ID in", values, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdNotIn(List<Integer> values) {
            addCriterion("QR_CODE_ID not in", values, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdBetween(Integer value1, Integer value2) {
            addCriterion("QR_CODE_ID between", value1, value2, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andQrCodeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("QR_CODE_ID not between", value1, value2, "qrCodeId");
            return (Criteria) this;
        }

        public Criteria andSecretKeyIsNull() {
            addCriterion("SECRET_KEY is null");
            return (Criteria) this;
        }

        public Criteria andSecretKeyIsNotNull() {
            addCriterion("SECRET_KEY is not null");
            return (Criteria) this;
        }

        public Criteria andSecretKeyEqualTo(String value) {
            addCriterion("SECRET_KEY =", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyNotEqualTo(String value) {
            addCriterion("SECRET_KEY <>", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyGreaterThan(String value) {
            addCriterion("SECRET_KEY >", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyGreaterThanOrEqualTo(String value) {
            addCriterion("SECRET_KEY >=", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyLessThan(String value) {
            addCriterion("SECRET_KEY <", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyLessThanOrEqualTo(String value) {
            addCriterion("SECRET_KEY <=", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyLike(String value) {
            addCriterion("SECRET_KEY like", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyNotLike(String value) {
            addCriterion("SECRET_KEY not like", value, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyIn(List<String> values) {
            addCriterion("SECRET_KEY in", values, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyNotIn(List<String> values) {
            addCriterion("SECRET_KEY not in", values, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyBetween(String value1, String value2) {
            addCriterion("SECRET_KEY between", value1, value2, "secretKey");
            return (Criteria) this;
        }

        public Criteria andSecretKeyNotBetween(String value1, String value2) {
            addCriterion("SECRET_KEY not between", value1, value2, "secretKey");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeIsNull() {
            addCriterion("KEY_CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeIsNotNull() {
            addCriterion("KEY_CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeEqualTo(Date value) {
            addCriterion("KEY_CREATE_TIME =", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeNotEqualTo(Date value) {
            addCriterion("KEY_CREATE_TIME <>", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeGreaterThan(Date value) {
            addCriterion("KEY_CREATE_TIME >", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("KEY_CREATE_TIME >=", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeLessThan(Date value) {
            addCriterion("KEY_CREATE_TIME <", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("KEY_CREATE_TIME <=", value, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeIn(List<Date> values) {
            addCriterion("KEY_CREATE_TIME in", values, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeNotIn(List<Date> values) {
            addCriterion("KEY_CREATE_TIME not in", values, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeBetween(Date value1, Date value2) {
            addCriterion("KEY_CREATE_TIME between", value1, value2, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andKeyCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("KEY_CREATE_TIME not between", value1, value2, "keyCreateTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeIsNull() {
            addCriterion("LOGIN_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLoginTimeIsNotNull() {
            addCriterion("LOGIN_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLoginTimeEqualTo(Date value) {
            addCriterion("LOGIN_TIME =", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeNotEqualTo(Date value) {
            addCriterion("LOGIN_TIME <>", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeGreaterThan(Date value) {
            addCriterion("LOGIN_TIME >", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LOGIN_TIME >=", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeLessThan(Date value) {
            addCriterion("LOGIN_TIME <", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeLessThanOrEqualTo(Date value) {
            addCriterion("LOGIN_TIME <=", value, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeIn(List<Date> values) {
            addCriterion("LOGIN_TIME in", values, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeNotIn(List<Date> values) {
            addCriterion("LOGIN_TIME not in", values, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeBetween(Date value1, Date value2) {
            addCriterion("LOGIN_TIME between", value1, value2, "loginTime");
            return (Criteria) this;
        }

        public Criteria andLoginTimeNotBetween(Date value1, Date value2) {
            addCriterion("LOGIN_TIME not between", value1, value2, "loginTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qr_code_login
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qr_code_login
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}