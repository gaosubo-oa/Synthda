package com.xoa.model.rpmBudget;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class RpmBudgetExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public RpmBudgetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBudgetIdIsNull() {
            addCriterion("BUDGET_ID is null");
            return (Criteria) this;
        }

        public Criteria andBudgetIdIsNotNull() {
            addCriterion("BUDGET_ID is not null");
            return (Criteria) this;
        }

        public Criteria andBudgetIdEqualTo(Integer value) {
            addCriterion("BUDGET_ID =", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdNotEqualTo(Integer value) {
            addCriterion("BUDGET_ID <>", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdGreaterThan(Integer value) {
            addCriterion("BUDGET_ID >", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("BUDGET_ID >=", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdLessThan(Integer value) {
            addCriterion("BUDGET_ID <", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdLessThanOrEqualTo(Integer value) {
            addCriterion("BUDGET_ID <=", value, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdIn(List<Integer> values) {
            addCriterion("BUDGET_ID in", values, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdNotIn(List<Integer> values) {
            addCriterion("BUDGET_ID not in", values, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdBetween(Integer value1, Integer value2) {
            addCriterion("BUDGET_ID between", value1, value2, "budgetId");
            return (Criteria) this;
        }

        public Criteria andBudgetIdNotBetween(Integer value1, Integer value2) {
            addCriterion("BUDGET_ID not between", value1, value2, "budgetId");
            return (Criteria) this;
        }

        public Criteria andTopicIdIsNull() {
            addCriterion("TOPIC_ID is null");
            return (Criteria) this;
        }

        public Criteria andTopicIdIsNotNull() {
            addCriterion("TOPIC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTopicIdEqualTo(Integer value) {
            addCriterion("TOPIC_ID =", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotEqualTo(Integer value) {
            addCriterion("TOPIC_ID <>", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdGreaterThan(Integer value) {
            addCriterion("TOPIC_ID >", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TOPIC_ID >=", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdLessThan(Integer value) {
            addCriterion("TOPIC_ID <", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdLessThanOrEqualTo(Integer value) {
            addCriterion("TOPIC_ID <=", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdIn(List<Integer> values) {
            addCriterion("TOPIC_ID in", values, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotIn(List<Integer> values) {
            addCriterion("TOPIC_ID not in", values, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdBetween(Integer value1, Integer value2) {
            addCriterion("TOPIC_ID between", value1, value2, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TOPIC_ID not between", value1, value2, "topicId");
            return (Criteria) this;
        }

        public Criteria andResearchContentsIsNull() {
            addCriterion("RESEARCH_CONTENTS is null");
            return (Criteria) this;
        }

        public Criteria andResearchContentsIsNotNull() {
            addCriterion("RESEARCH_CONTENTS is not null");
            return (Criteria) this;
        }

        public Criteria andResearchContentsEqualTo(String value) {
            addCriterion("RESEARCH_CONTENTS =", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsNotEqualTo(String value) {
            addCriterion("RESEARCH_CONTENTS <>", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsGreaterThan(String value) {
            addCriterion("RESEARCH_CONTENTS >", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsGreaterThanOrEqualTo(String value) {
            addCriterion("RESEARCH_CONTENTS >=", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsLessThan(String value) {
            addCriterion("RESEARCH_CONTENTS <", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsLessThanOrEqualTo(String value) {
            addCriterion("RESEARCH_CONTENTS <=", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsLike(String value) {
            addCriterion("RESEARCH_CONTENTS like", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsNotLike(String value) {
            addCriterion("RESEARCH_CONTENTS not like", value, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsIn(List<String> values) {
            addCriterion("RESEARCH_CONTENTS in", values, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsNotIn(List<String> values) {
            addCriterion("RESEARCH_CONTENTS not in", values, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsBetween(String value1, String value2) {
            addCriterion("RESEARCH_CONTENTS between", value1, value2, "researchContents");
            return (Criteria) this;
        }

        public Criteria andResearchContentsNotBetween(String value1, String value2) {
            addCriterion("RESEARCH_CONTENTS not between", value1, value2, "researchContents");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryIsNull() {
            addCriterion("EXPENDITURE_CATEGORY is null");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryIsNotNull() {
            addCriterion("EXPENDITURE_CATEGORY is not null");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryEqualTo(String value) {
            addCriterion("EXPENDITURE_CATEGORY =", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryNotEqualTo(String value) {
            addCriterion("EXPENDITURE_CATEGORY <>", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryGreaterThan(String value) {
            addCriterion("EXPENDITURE_CATEGORY >", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("EXPENDITURE_CATEGORY >=", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryLessThan(String value) {
            addCriterion("EXPENDITURE_CATEGORY <", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryLessThanOrEqualTo(String value) {
            addCriterion("EXPENDITURE_CATEGORY <=", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryLike(String value) {
            addCriterion("EXPENDITURE_CATEGORY like", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryNotLike(String value) {
            addCriterion("EXPENDITURE_CATEGORY not like", value, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryIn(List<String> values) {
            addCriterion("EXPENDITURE_CATEGORY in", values, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryNotIn(List<String> values) {
            addCriterion("EXPENDITURE_CATEGORY not in", values, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryBetween(String value1, String value2) {
            addCriterion("EXPENDITURE_CATEGORY between", value1, value2, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andExpenditureCategoryNotBetween(String value1, String value2) {
            addCriterion("EXPENDITURE_CATEGORY not between", value1, value2, "expenditureCategory");
            return (Criteria) this;
        }

        public Criteria andMonovalentIsNull() {
            addCriterion("MONOVALENT is null");
            return (Criteria) this;
        }

        public Criteria andMonovalentIsNotNull() {
            addCriterion("MONOVALENT is not null");
            return (Criteria) this;
        }

        public Criteria andMonovalentEqualTo(BigDecimal value) {
            addCriterion("MONOVALENT =", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentNotEqualTo(BigDecimal value) {
            addCriterion("MONOVALENT <>", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentGreaterThan(BigDecimal value) {
            addCriterion("MONOVALENT >", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MONOVALENT >=", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentLessThan(BigDecimal value) {
            addCriterion("MONOVALENT <", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MONOVALENT <=", value, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentIn(List<BigDecimal> values) {
            addCriterion("MONOVALENT in", values, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentNotIn(List<BigDecimal> values) {
            addCriterion("MONOVALENT not in", values, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MONOVALENT between", value1, value2, "monovalent");
            return (Criteria) this;
        }

        public Criteria andMonovalentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MONOVALENT not between", value1, value2, "monovalent");
            return (Criteria) this;
        }

        public Criteria andNumberIsNull() {
            addCriterion("NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andNumberEqualTo(Integer value) {
            addCriterion("NUMBER =", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotEqualTo(Integer value) {
            addCriterion("NUMBER <>", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThan(Integer value) {
            addCriterion("NUMBER >", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("NUMBER >=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThan(Integer value) {
            addCriterion("NUMBER <", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThanOrEqualTo(Integer value) {
            addCriterion("NUMBER <=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberIn(List<Integer> values) {
            addCriterion("NUMBER in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotIn(List<Integer> values) {
            addCriterion("NUMBER not in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberBetween(Integer value1, Integer value2) {
            addCriterion("NUMBER between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("NUMBER not between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andTotalFundingIsNull() {
            addCriterion("TOTAL_FUNDING is null");
            return (Criteria) this;
        }

        public Criteria andTotalFundingIsNotNull() {
            addCriterion("TOTAL_FUNDING is not null");
            return (Criteria) this;
        }

        public Criteria andTotalFundingEqualTo(BigDecimal value) {
            addCriterion("TOTAL_FUNDING =", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingNotEqualTo(BigDecimal value) {
            addCriterion("TOTAL_FUNDING <>", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingGreaterThan(BigDecimal value) {
            addCriterion("TOTAL_FUNDING >", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_FUNDING >=", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingLessThan(BigDecimal value) {
            addCriterion("TOTAL_FUNDING <", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_FUNDING <=", value, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingIn(List<BigDecimal> values) {
            addCriterion("TOTAL_FUNDING in", values, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingNotIn(List<BigDecimal> values) {
            addCriterion("TOTAL_FUNDING not in", values, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_FUNDING between", value1, value2, "totalFunding");
            return (Criteria) this;
        }

        public Criteria andTotalFundingNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_FUNDING not between", value1, value2, "totalFunding");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rpm_budget
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rpm_budget
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}