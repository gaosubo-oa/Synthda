package com.xoa.model.oaSource;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OaCyclesourceUsedExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public OaCyclesourceUsedExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCycidIsNull() {
            addCriterion("CYCID is null");
            return (Criteria) this;
        }

        public Criteria andCycidIsNotNull() {
            addCriterion("CYCID is not null");
            return (Criteria) this;
        }

        public Criteria andCycidEqualTo(Integer value) {
            addCriterion("CYCID =", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidNotEqualTo(Integer value) {
            addCriterion("CYCID <>", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidGreaterThan(Integer value) {
            addCriterion("CYCID >", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CYCID >=", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidLessThan(Integer value) {
            addCriterion("CYCID <", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidLessThanOrEqualTo(Integer value) {
            addCriterion("CYCID <=", value, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidIn(List<Integer> values) {
            addCriterion("CYCID in", values, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidNotIn(List<Integer> values) {
            addCriterion("CYCID not in", values, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidBetween(Integer value1, Integer value2) {
            addCriterion("CYCID between", value1, value2, "cycid");
            return (Criteria) this;
        }

        public Criteria andCycidNotBetween(Integer value1, Integer value2) {
            addCriterion("CYCID not between", value1, value2, "cycid");
            return (Criteria) this;
        }

        public Criteria andSourceidIsNull() {
            addCriterion("SOURCEID is null");
            return (Criteria) this;
        }

        public Criteria andSourceidIsNotNull() {
            addCriterion("SOURCEID is not null");
            return (Criteria) this;
        }

        public Criteria andSourceidEqualTo(Integer value) {
            addCriterion("SOURCEID =", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidNotEqualTo(Integer value) {
            addCriterion("SOURCEID <>", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidGreaterThan(Integer value) {
            addCriterion("SOURCEID >", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("SOURCEID >=", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidLessThan(Integer value) {
            addCriterion("SOURCEID <", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidLessThanOrEqualTo(Integer value) {
            addCriterion("SOURCEID <=", value, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidIn(List<Integer> values) {
            addCriterion("SOURCEID in", values, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidNotIn(List<Integer> values) {
            addCriterion("SOURCEID not in", values, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidBetween(Integer value1, Integer value2) {
            addCriterion("SOURCEID between", value1, value2, "sourceid");
            return (Criteria) this;
        }

        public Criteria andSourceidNotBetween(Integer value1, Integer value2) {
            addCriterion("SOURCEID not between", value1, value2, "sourceid");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeIsNull() {
            addCriterion("B_APPLY_TIME is null");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeIsNotNull() {
            addCriterion("B_APPLY_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeEqualTo(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME =", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME <>", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME >", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME >=", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeLessThan(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME <", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("B_APPLY_TIME <=", value, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeIn(List<Date> values) {
            addCriterionForJDBCDate("B_APPLY_TIME in", values, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("B_APPLY_TIME not in", values, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("B_APPLY_TIME between", value1, value2, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andBApplyTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("B_APPLY_TIME not between", value1, value2, "bApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeIsNull() {
            addCriterion("E_APPLY_TIME is null");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeIsNotNull() {
            addCriterion("E_APPLY_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeEqualTo(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME =", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME <>", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME >", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME >=", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeLessThan(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME <", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("E_APPLY_TIME <=", value, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeIn(List<Date> values) {
            addCriterionForJDBCDate("E_APPLY_TIME in", values, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("E_APPLY_TIME not in", values, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("E_APPLY_TIME between", value1, value2, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andEApplyTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("E_APPLY_TIME not between", value1, value2, "eApplyTime");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetIsNull() {
            addCriterion("WEEKDAY_SET is null");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetIsNotNull() {
            addCriterion("WEEKDAY_SET is not null");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetEqualTo(String value) {
            addCriterion("WEEKDAY_SET =", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetNotEqualTo(String value) {
            addCriterion("WEEKDAY_SET <>", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetGreaterThan(String value) {
            addCriterion("WEEKDAY_SET >", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetGreaterThanOrEqualTo(String value) {
            addCriterion("WEEKDAY_SET >=", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetLessThan(String value) {
            addCriterion("WEEKDAY_SET <", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetLessThanOrEqualTo(String value) {
            addCriterion("WEEKDAY_SET <=", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetLike(String value) {
            addCriterion("WEEKDAY_SET like", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetNotLike(String value) {
            addCriterion("WEEKDAY_SET not like", value, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetIn(List<String> values) {
            addCriterion("WEEKDAY_SET in", values, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetNotIn(List<String> values) {
            addCriterion("WEEKDAY_SET not in", values, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetBetween(String value1, String value2) {
            addCriterion("WEEKDAY_SET between", value1, value2, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andWeekdaySetNotBetween(String value1, String value2) {
            addCriterion("WEEKDAY_SET not between", value1, value2, "weekdaySet");
            return (Criteria) this;
        }

        public Criteria andTimeTitleIsNull() {
            addCriterion("TIME_TITLE is null");
            return (Criteria) this;
        }

        public Criteria andTimeTitleIsNotNull() {
            addCriterion("TIME_TITLE is not null");
            return (Criteria) this;
        }

        public Criteria andTimeTitleEqualTo(String value) {
            addCriterion("TIME_TITLE =", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleNotEqualTo(String value) {
            addCriterion("TIME_TITLE <>", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleGreaterThan(String value) {
            addCriterion("TIME_TITLE >", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleGreaterThanOrEqualTo(String value) {
            addCriterion("TIME_TITLE >=", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleLessThan(String value) {
            addCriterion("TIME_TITLE <", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleLessThanOrEqualTo(String value) {
            addCriterion("TIME_TITLE <=", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleLike(String value) {
            addCriterion("TIME_TITLE like", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleNotLike(String value) {
            addCriterion("TIME_TITLE not like", value, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleIn(List<String> values) {
            addCriterion("TIME_TITLE in", values, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleNotIn(List<String> values) {
            addCriterion("TIME_TITLE not in", values, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleBetween(String value1, String value2) {
            addCriterion("TIME_TITLE between", value1, value2, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andTimeTitleNotBetween(String value1, String value2) {
            addCriterion("TIME_TITLE not between", value1, value2, "timeTitle");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andApplyTimeIsNull() {
            addCriterion("APPLY_TIME is null");
            return (Criteria) this;
        }

        public Criteria andApplyTimeIsNotNull() {
            addCriterion("APPLY_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andApplyTimeEqualTo(Date value) {
            addCriterion("APPLY_TIME =", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotEqualTo(Date value) {
            addCriterion("APPLY_TIME <>", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeGreaterThan(Date value) {
            addCriterion("APPLY_TIME >", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("APPLY_TIME >=", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeLessThan(Date value) {
            addCriterion("APPLY_TIME <", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeLessThanOrEqualTo(Date value) {
            addCriterion("APPLY_TIME <=", value, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeIn(List<Date> values) {
            addCriterion("APPLY_TIME in", values, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotIn(List<Date> values) {
            addCriterion("APPLY_TIME not in", values, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeBetween(Date value1, Date value2) {
            addCriterion("APPLY_TIME between", value1, value2, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotBetween(Date value1, Date value2) {
            addCriterion("APPLY_TIME not between", value1, value2, "applyTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oa_cyclesource_used
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}