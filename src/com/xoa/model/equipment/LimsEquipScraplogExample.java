package com.xoa.model.equipment;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LimsEquipScraplogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public LimsEquipScraplogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScraplogIdIsNull() {
            addCriterion("SCRAPLOG_ID is null");
            return (Criteria) this;
        }

        public Criteria andScraplogIdIsNotNull() {
            addCriterion("SCRAPLOG_ID is not null");
            return (Criteria) this;
        }

        public Criteria andScraplogIdEqualTo(Integer value) {
            addCriterion("SCRAPLOG_ID =", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdNotEqualTo(Integer value) {
            addCriterion("SCRAPLOG_ID <>", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdGreaterThan(Integer value) {
            addCriterion("SCRAPLOG_ID >", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SCRAPLOG_ID >=", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdLessThan(Integer value) {
            addCriterion("SCRAPLOG_ID <", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdLessThanOrEqualTo(Integer value) {
            addCriterion("SCRAPLOG_ID <=", value, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdIn(List<Integer> values) {
            addCriterion("SCRAPLOG_ID in", values, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdNotIn(List<Integer> values) {
            addCriterion("SCRAPLOG_ID not in", values, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdBetween(Integer value1, Integer value2) {
            addCriterion("SCRAPLOG_ID between", value1, value2, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andScraplogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SCRAPLOG_ID not between", value1, value2, "scraplogId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("DEPT_ID is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("DEPT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Integer value) {
            addCriterion("DEPT_ID =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Integer value) {
            addCriterion("DEPT_ID <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Integer value) {
            addCriterion("DEPT_ID >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("DEPT_ID >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Integer value) {
            addCriterion("DEPT_ID <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Integer value) {
            addCriterion("DEPT_ID <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Integer> values) {
            addCriterion("DEPT_ID in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Integer> values) {
            addCriterion("DEPT_ID not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Integer value1, Integer value2) {
            addCriterion("DEPT_ID between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Integer value1, Integer value2) {
            addCriterion("DEPT_ID not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andApplicantIsNull() {
            addCriterion("APPLICANT is null");
            return (Criteria) this;
        }

        public Criteria andApplicantIsNotNull() {
            addCriterion("APPLICANT is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantEqualTo(String value) {
            addCriterion("APPLICANT =", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantNotEqualTo(String value) {
            addCriterion("APPLICANT <>", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantGreaterThan(String value) {
            addCriterion("APPLICANT >", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantGreaterThanOrEqualTo(String value) {
            addCriterion("APPLICANT >=", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantLessThan(String value) {
            addCriterion("APPLICANT <", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantLessThanOrEqualTo(String value) {
            addCriterion("APPLICANT <=", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantLike(String value) {
            addCriterion("APPLICANT like", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantNotLike(String value) {
            addCriterion("APPLICANT not like", value, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantIn(List<String> values) {
            addCriterion("APPLICANT in", values, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantNotIn(List<String> values) {
            addCriterion("APPLICANT not in", values, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantBetween(String value1, String value2) {
            addCriterion("APPLICANT between", value1, value2, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantNotBetween(String value1, String value2) {
            addCriterion("APPLICANT not between", value1, value2, "applicant");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeIsNull() {
            addCriterion("APPLICANT_TIME is null");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeIsNotNull() {
            addCriterion("APPLICANT_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeEqualTo(Date value) {
            addCriterion("APPLICANT_TIME =", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeNotEqualTo(Date value) {
            addCriterion("APPLICANT_TIME <>", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeGreaterThan(Date value) {
            addCriterion("APPLICANT_TIME >", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("APPLICANT_TIME >=", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeLessThan(Date value) {
            addCriterion("APPLICANT_TIME <", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeLessThanOrEqualTo(Date value) {
            addCriterion("APPLICANT_TIME <=", value, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeIn(List<Date> values) {
            addCriterion("APPLICANT_TIME in", values, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeNotIn(List<Date> values) {
            addCriterion("APPLICANT_TIME not in", values, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeBetween(Date value1, Date value2) {
            addCriterion("APPLICANT_TIME between", value1, value2, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApplicantTimeNotBetween(Date value1, Date value2) {
            addCriterion("APPLICANT_TIME not between", value1, value2, "applicantTime");
            return (Criteria) this;
        }

        public Criteria andApproverIsNull() {
            addCriterion("APPROVER is null");
            return (Criteria) this;
        }

        public Criteria andApproverIsNotNull() {
            addCriterion("APPROVER is not null");
            return (Criteria) this;
        }

        public Criteria andApproverEqualTo(String value) {
            addCriterion("APPROVER =", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverNotEqualTo(String value) {
            addCriterion("APPROVER <>", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverGreaterThan(String value) {
            addCriterion("APPROVER >", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverGreaterThanOrEqualTo(String value) {
            addCriterion("APPROVER >=", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverLessThan(String value) {
            addCriterion("APPROVER <", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverLessThanOrEqualTo(String value) {
            addCriterion("APPROVER <=", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverLike(String value) {
            addCriterion("APPROVER like", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverNotLike(String value) {
            addCriterion("APPROVER not like", value, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverIn(List<String> values) {
            addCriterion("APPROVER in", values, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverNotIn(List<String> values) {
            addCriterion("APPROVER not in", values, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverBetween(String value1, String value2) {
            addCriterion("APPROVER between", value1, value2, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverNotBetween(String value1, String value2) {
            addCriterion("APPROVER not between", value1, value2, "approver");
            return (Criteria) this;
        }

        public Criteria andApproverTimeIsNull() {
            addCriterion("APPROVER_TIME is null");
            return (Criteria) this;
        }

        public Criteria andApproverTimeIsNotNull() {
            addCriterion("APPROVER_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andApproverTimeEqualTo(String value) {
            addCriterion("APPROVER_TIME =", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeNotEqualTo(String value) {
            addCriterion("APPROVER_TIME <>", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeGreaterThan(String value) {
            addCriterion("APPROVER_TIME >", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeGreaterThanOrEqualTo(String value) {
            addCriterion("APPROVER_TIME >=", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeLessThan(String value) {
            addCriterion("APPROVER_TIME <", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeLessThanOrEqualTo(String value) {
            addCriterion("APPROVER_TIME <=", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeLike(String value) {
            addCriterion("APPROVER_TIME like", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeNotLike(String value) {
            addCriterion("APPROVER_TIME not like", value, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeIn(List<String> values) {
            addCriterion("APPROVER_TIME in", values, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeNotIn(List<String> values) {
            addCriterion("APPROVER_TIME not in", values, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeBetween(String value1, String value2) {
            addCriterion("APPROVER_TIME between", value1, value2, "approverTime");
            return (Criteria) this;
        }

        public Criteria andApproverTimeNotBetween(String value1, String value2) {
            addCriterion("APPROVER_TIME not between", value1, value2, "approverTime");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("MEMO in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("MEMO not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoIsNull() {
            addCriterion("WORKFLOW_NO is null");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoIsNotNull() {
            addCriterion("WORKFLOW_NO is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoEqualTo(String value) {
            addCriterion("WORKFLOW_NO =", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoNotEqualTo(String value) {
            addCriterion("WORKFLOW_NO <>", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoGreaterThan(String value) {
            addCriterion("WORKFLOW_NO >", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoGreaterThanOrEqualTo(String value) {
            addCriterion("WORKFLOW_NO >=", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoLessThan(String value) {
            addCriterion("WORKFLOW_NO <", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoLessThanOrEqualTo(String value) {
            addCriterion("WORKFLOW_NO <=", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoLike(String value) {
            addCriterion("WORKFLOW_NO like", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoNotLike(String value) {
            addCriterion("WORKFLOW_NO not like", value, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoIn(List<String> values) {
            addCriterion("WORKFLOW_NO in", values, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoNotIn(List<String> values) {
            addCriterion("WORKFLOW_NO not in", values, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoBetween(String value1, String value2) {
            addCriterion("WORKFLOW_NO between", value1, value2, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andWorkflowNoNotBetween(String value1, String value2) {
            addCriterion("WORKFLOW_NO not between", value1, value2, "workflowNo");
            return (Criteria) this;
        }

        public Criteria andScrapReasonIsNull() {
            addCriterion("SCRAP_REASON is null");
            return (Criteria) this;
        }

        public Criteria andScrapReasonIsNotNull() {
            addCriterion("SCRAP_REASON is not null");
            return (Criteria) this;
        }

        public Criteria andScrapReasonEqualTo(String value) {
            addCriterion("SCRAP_REASON =", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonNotEqualTo(String value) {
            addCriterion("SCRAP_REASON <>", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonGreaterThan(String value) {
            addCriterion("SCRAP_REASON >", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonGreaterThanOrEqualTo(String value) {
            addCriterion("SCRAP_REASON >=", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonLessThan(String value) {
            addCriterion("SCRAP_REASON <", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonLessThanOrEqualTo(String value) {
            addCriterion("SCRAP_REASON <=", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonLike(String value) {
            addCriterion("SCRAP_REASON like", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonNotLike(String value) {
            addCriterion("SCRAP_REASON not like", value, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonIn(List<String> values) {
            addCriterion("SCRAP_REASON in", values, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonNotIn(List<String> values) {
            addCriterion("SCRAP_REASON not in", values, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonBetween(String value1, String value2) {
            addCriterion("SCRAP_REASON between", value1, value2, "scrapReason");
            return (Criteria) this;
        }

        public Criteria andScrapReasonNotBetween(String value1, String value2) {
            addCriterion("SCRAP_REASON not between", value1, value2, "scrapReason");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_scraplog
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}