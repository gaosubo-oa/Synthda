package com.xoa.model.equipment;

import java.util.ArrayList;
import java.util.List;

public class LimsEquipEventPlanParaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public LimsEquipEventPlanParaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPlanParaIdIsNull() {
            addCriterion("PLAN_PARA_ID is null");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdIsNotNull() {
            addCriterion("PLAN_PARA_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdEqualTo(Integer value) {
            addCriterion("PLAN_PARA_ID =", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdNotEqualTo(Integer value) {
            addCriterion("PLAN_PARA_ID <>", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdGreaterThan(Integer value) {
            addCriterion("PLAN_PARA_ID >", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PLAN_PARA_ID >=", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdLessThan(Integer value) {
            addCriterion("PLAN_PARA_ID <", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdLessThanOrEqualTo(Integer value) {
            addCriterion("PLAN_PARA_ID <=", value, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdIn(List<Integer> values) {
            addCriterion("PLAN_PARA_ID in", values, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdNotIn(List<Integer> values) {
            addCriterion("PLAN_PARA_ID not in", values, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdBetween(Integer value1, Integer value2) {
            addCriterion("PLAN_PARA_ID between", value1, value2, "planParaId");
            return (Criteria) this;
        }

        public Criteria andPlanParaIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PLAN_PARA_ID not between", value1, value2, "planParaId");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNull() {
            addCriterion("EVENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("EVENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(Integer value) {
            addCriterion("EVENT_ID =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(Integer value) {
            addCriterion("EVENT_ID <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(Integer value) {
            addCriterion("EVENT_ID >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EVENT_ID >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(Integer value) {
            addCriterion("EVENT_ID <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(Integer value) {
            addCriterion("EVENT_ID <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<Integer> values) {
            addCriterion("EVENT_ID in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<Integer> values) {
            addCriterion("EVENT_ID not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(Integer value1, Integer value2) {
            addCriterion("EVENT_ID between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EVENT_ID not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andParaNameIsNull() {
            addCriterion("PARA_NAME is null");
            return (Criteria) this;
        }

        public Criteria andParaNameIsNotNull() {
            addCriterion("PARA_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andParaNameEqualTo(String value) {
            addCriterion("PARA_NAME =", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameNotEqualTo(String value) {
            addCriterion("PARA_NAME <>", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameGreaterThan(String value) {
            addCriterion("PARA_NAME >", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameGreaterThanOrEqualTo(String value) {
            addCriterion("PARA_NAME >=", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameLessThan(String value) {
            addCriterion("PARA_NAME <", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameLessThanOrEqualTo(String value) {
            addCriterion("PARA_NAME <=", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameLike(String value) {
            addCriterion("PARA_NAME like", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameNotLike(String value) {
            addCriterion("PARA_NAME not like", value, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameIn(List<String> values) {
            addCriterion("PARA_NAME in", values, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameNotIn(List<String> values) {
            addCriterion("PARA_NAME not in", values, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameBetween(String value1, String value2) {
            addCriterion("PARA_NAME between", value1, value2, "paraName");
            return (Criteria) this;
        }

        public Criteria andParaNameNotBetween(String value1, String value2) {
            addCriterion("PARA_NAME not between", value1, value2, "paraName");
            return (Criteria) this;
        }

        public Criteria andInitialValueIsNull() {
            addCriterion("INITIAL_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andInitialValueIsNotNull() {
            addCriterion("INITIAL_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andInitialValueEqualTo(String value) {
            addCriterion("INITIAL_VALUE =", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueNotEqualTo(String value) {
            addCriterion("INITIAL_VALUE <>", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueGreaterThan(String value) {
            addCriterion("INITIAL_VALUE >", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueGreaterThanOrEqualTo(String value) {
            addCriterion("INITIAL_VALUE >=", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueLessThan(String value) {
            addCriterion("INITIAL_VALUE <", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueLessThanOrEqualTo(String value) {
            addCriterion("INITIAL_VALUE <=", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueLike(String value) {
            addCriterion("INITIAL_VALUE like", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueNotLike(String value) {
            addCriterion("INITIAL_VALUE not like", value, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueIn(List<String> values) {
            addCriterion("INITIAL_VALUE in", values, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueNotIn(List<String> values) {
            addCriterion("INITIAL_VALUE not in", values, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueBetween(String value1, String value2) {
            addCriterion("INITIAL_VALUE between", value1, value2, "initialValue");
            return (Criteria) this;
        }

        public Criteria andInitialValueNotBetween(String value1, String value2) {
            addCriterion("INITIAL_VALUE not between", value1, value2, "initialValue");
            return (Criteria) this;
        }

        public Criteria andErrorIsNull() {
            addCriterion("ERROR is null");
            return (Criteria) this;
        }

        public Criteria andErrorIsNotNull() {
            addCriterion("ERROR is not null");
            return (Criteria) this;
        }

        public Criteria andErrorEqualTo(String value) {
            addCriterion("ERROR =", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotEqualTo(String value) {
            addCriterion("ERROR <>", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThan(String value) {
            addCriterion("ERROR >", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThanOrEqualTo(String value) {
            addCriterion("ERROR >=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThan(String value) {
            addCriterion("ERROR <", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThanOrEqualTo(String value) {
            addCriterion("ERROR <=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLike(String value) {
            addCriterion("ERROR like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotLike(String value) {
            addCriterion("ERROR not like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorIn(List<String> values) {
            addCriterion("ERROR in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotIn(List<String> values) {
            addCriterion("ERROR not in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorBetween(String value1, String value2) {
            addCriterion("ERROR between", value1, value2, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotBetween(String value1, String value2) {
            addCriterion("ERROR not between", value1, value2, "error");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lims_equip_event_plan_para
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}