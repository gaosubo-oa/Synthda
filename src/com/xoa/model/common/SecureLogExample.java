package com.xoa.model.common;

import java.util.ArrayList;
import java.util.List;

public class SecureLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public SecureLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogIdIsNull() {
            addCriterion("LOG_ID is null");
            return (Criteria) this;
        }

        public Criteria andLogIdIsNotNull() {
            addCriterion("LOG_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLogIdEqualTo(Integer value) {
            addCriterion("LOG_ID =", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotEqualTo(Integer value) {
            addCriterion("LOG_ID <>", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThan(Integer value) {
            addCriterion("LOG_ID >", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("LOG_ID >=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThan(Integer value) {
            addCriterion("LOG_ID <", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThanOrEqualTo(Integer value) {
            addCriterion("LOG_ID <=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdIn(List<Integer> values) {
            addCriterion("LOG_ID in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotIn(List<Integer> values) {
            addCriterion("LOG_ID not in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdBetween(Integer value1, Integer value2) {
            addCriterion("LOG_ID between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("LOG_ID not between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andRuleIdIsNull() {
            addCriterion("RULE_ID is null");
            return (Criteria) this;
        }

        public Criteria andRuleIdIsNotNull() {
            addCriterion("RULE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRuleIdEqualTo(Short value) {
            addCriterion("RULE_ID =", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotEqualTo(Short value) {
            addCriterion("RULE_ID <>", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdGreaterThan(Short value) {
            addCriterion("RULE_ID >", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdGreaterThanOrEqualTo(Short value) {
            addCriterion("RULE_ID >=", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdLessThan(Short value) {
            addCriterion("RULE_ID <", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdLessThanOrEqualTo(Short value) {
            addCriterion("RULE_ID <=", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdIn(List<Short> values) {
            addCriterion("RULE_ID in", values, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotIn(List<Short> values) {
            addCriterion("RULE_ID not in", values, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdBetween(Short value1, Short value2) {
            addCriterion("RULE_ID between", value1, value2, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotBetween(Short value1, Short value2) {
            addCriterion("RULE_ID not between", value1, value2, "ruleId");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("UID is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("UID is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("UID =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("UID <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("UID >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("UID >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("UID <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("UID <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("UID in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("UID not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("UID between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("UID not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNull() {
            addCriterion("LOG_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNotNull() {
            addCriterion("LOG_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLogTimeEqualTo(Integer value) {
            addCriterion("LOG_TIME =", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotEqualTo(Integer value) {
            addCriterion("LOG_TIME <>", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThan(Integer value) {
            addCriterion("LOG_TIME >", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("LOG_TIME >=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThan(Integer value) {
            addCriterion("LOG_TIME <", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThanOrEqualTo(Integer value) {
            addCriterion("LOG_TIME <=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeIn(List<Integer> values) {
            addCriterion("LOG_TIME in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotIn(List<Integer> values) {
            addCriterion("LOG_TIME not in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeBetween(Integer value1, Integer value2) {
            addCriterion("LOG_TIME between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("LOG_TIME not between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andIpIsNull() {
            addCriterion("IP is null");
            return (Criteria) this;
        }

        public Criteria andIpIsNotNull() {
            addCriterion("IP is not null");
            return (Criteria) this;
        }

        public Criteria andIpEqualTo(String value) {
            addCriterion("IP =", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotEqualTo(String value) {
            addCriterion("IP <>", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThan(String value) {
            addCriterion("IP >", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThanOrEqualTo(String value) {
            addCriterion("IP >=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThan(String value) {
            addCriterion("IP <", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThanOrEqualTo(String value) {
            addCriterion("IP <=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLike(String value) {
            addCriterion("IP like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotLike(String value) {
            addCriterion("IP not like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpIn(List<String> values) {
            addCriterion("IP in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotIn(List<String> values) {
            addCriterion("IP not in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpBetween(String value1, String value2) {
            addCriterion("IP between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotBetween(String value1, String value2) {
            addCriterion("IP not between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdIsNull() {
            addCriterion("FROM_BODY_ID is null");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdIsNotNull() {
            addCriterion("FROM_BODY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdEqualTo(Integer value) {
            addCriterion("FROM_BODY_ID =", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdNotEqualTo(Integer value) {
            addCriterion("FROM_BODY_ID <>", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdGreaterThan(Integer value) {
            addCriterion("FROM_BODY_ID >", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("FROM_BODY_ID >=", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdLessThan(Integer value) {
            addCriterion("FROM_BODY_ID <", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdLessThanOrEqualTo(Integer value) {
            addCriterion("FROM_BODY_ID <=", value, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdIn(List<Integer> values) {
            addCriterion("FROM_BODY_ID in", values, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdNotIn(List<Integer> values) {
            addCriterion("FROM_BODY_ID not in", values, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdBetween(Integer value1, Integer value2) {
            addCriterion("FROM_BODY_ID between", value1, value2, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andFromBodyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("FROM_BODY_ID not between", value1, value2, "fromBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdIsNull() {
            addCriterion("TO_BODY_ID is null");
            return (Criteria) this;
        }

        public Criteria andToBodyIdIsNotNull() {
            addCriterion("TO_BODY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andToBodyIdEqualTo(Integer value) {
            addCriterion("TO_BODY_ID =", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdNotEqualTo(Integer value) {
            addCriterion("TO_BODY_ID <>", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdGreaterThan(Integer value) {
            addCriterion("TO_BODY_ID >", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TO_BODY_ID >=", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdLessThan(Integer value) {
            addCriterion("TO_BODY_ID <", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdLessThanOrEqualTo(Integer value) {
            addCriterion("TO_BODY_ID <=", value, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdIn(List<Integer> values) {
            addCriterion("TO_BODY_ID in", values, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdNotIn(List<Integer> values) {
            addCriterion("TO_BODY_ID not in", values, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdBetween(Integer value1, Integer value2) {
            addCriterion("TO_BODY_ID between", value1, value2, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andToBodyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TO_BODY_ID not between", value1, value2, "toBodyId");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsIsNull() {
            addCriterion("FROM_TABLE_EXTENDS is null");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsIsNotNull() {
            addCriterion("FROM_TABLE_EXTENDS is not null");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsEqualTo(String value) {
            addCriterion("FROM_TABLE_EXTENDS =", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsNotEqualTo(String value) {
            addCriterion("FROM_TABLE_EXTENDS <>", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsGreaterThan(String value) {
            addCriterion("FROM_TABLE_EXTENDS >", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_TABLE_EXTENDS >=", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsLessThan(String value) {
            addCriterion("FROM_TABLE_EXTENDS <", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsLessThanOrEqualTo(String value) {
            addCriterion("FROM_TABLE_EXTENDS <=", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsLike(String value) {
            addCriterion("FROM_TABLE_EXTENDS like", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsNotLike(String value) {
            addCriterion("FROM_TABLE_EXTENDS not like", value, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsIn(List<String> values) {
            addCriterion("FROM_TABLE_EXTENDS in", values, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsNotIn(List<String> values) {
            addCriterion("FROM_TABLE_EXTENDS not in", values, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsBetween(String value1, String value2) {
            addCriterion("FROM_TABLE_EXTENDS between", value1, value2, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andFromTableExtendsNotBetween(String value1, String value2) {
            addCriterion("FROM_TABLE_EXTENDS not between", value1, value2, "fromTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsIsNull() {
            addCriterion("TO_TABLE_EXTENDS is null");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsIsNotNull() {
            addCriterion("TO_TABLE_EXTENDS is not null");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsEqualTo(String value) {
            addCriterion("TO_TABLE_EXTENDS =", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsNotEqualTo(String value) {
            addCriterion("TO_TABLE_EXTENDS <>", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsGreaterThan(String value) {
            addCriterion("TO_TABLE_EXTENDS >", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsGreaterThanOrEqualTo(String value) {
            addCriterion("TO_TABLE_EXTENDS >=", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsLessThan(String value) {
            addCriterion("TO_TABLE_EXTENDS <", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsLessThanOrEqualTo(String value) {
            addCriterion("TO_TABLE_EXTENDS <=", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsLike(String value) {
            addCriterion("TO_TABLE_EXTENDS like", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsNotLike(String value) {
            addCriterion("TO_TABLE_EXTENDS not like", value, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsIn(List<String> values) {
            addCriterion("TO_TABLE_EXTENDS in", values, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsNotIn(List<String> values) {
            addCriterion("TO_TABLE_EXTENDS not in", values, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsBetween(String value1, String value2) {
            addCriterion("TO_TABLE_EXTENDS between", value1, value2, "toTableExtends");
            return (Criteria) this;
        }

        public Criteria andToTableExtendsNotBetween(String value1, String value2) {
            addCriterion("TO_TABLE_EXTENDS not between", value1, value2, "toTableExtends");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table secure_log
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table secure_log
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}