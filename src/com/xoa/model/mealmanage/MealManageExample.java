package com.xoa.model.mealmanage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MealManageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public MealManageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMealIdIsNull() {
            addCriterion("MEAL_ID is null");
            return (Criteria) this;
        }

        public Criteria andMealIdIsNotNull() {
            addCriterion("MEAL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMealIdEqualTo(Integer value) {
            addCriterion("MEAL_ID =", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdNotEqualTo(Integer value) {
            addCriterion("MEAL_ID <>", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdGreaterThan(Integer value) {
            addCriterion("MEAL_ID >", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("MEAL_ID >=", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdLessThan(Integer value) {
            addCriterion("MEAL_ID <", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdLessThanOrEqualTo(Integer value) {
            addCriterion("MEAL_ID <=", value, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdIn(List<Integer> values) {
            addCriterion("MEAL_ID in", values, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdNotIn(List<Integer> values) {
            addCriterion("MEAL_ID not in", values, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdBetween(Integer value1, Integer value2) {
            addCriterion("MEAL_ID between", value1, value2, "mealId");
            return (Criteria) this;
        }

        public Criteria andMealIdNotBetween(Integer value1, Integer value2) {
            addCriterion("MEAL_ID not between", value1, value2, "mealId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("DEPT_ID is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("DEPT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Integer value) {
            addCriterion("DEPT_ID =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Integer value) {
            addCriterion("DEPT_ID <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Integer value) {
            addCriterion("DEPT_ID >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("DEPT_ID >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Integer value) {
            addCriterion("DEPT_ID <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Integer value) {
            addCriterion("DEPT_ID <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Integer> values) {
            addCriterion("DEPT_ID in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Integer> values) {
            addCriterion("DEPT_ID not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Integer value1, Integer value2) {
            addCriterion("DEPT_ID between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Integer value1, Integer value2) {
            addCriterion("DEPT_ID not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumIsNull() {
            addCriterion("BREAKFAST_NUM is null");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumIsNotNull() {
            addCriterion("BREAKFAST_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumEqualTo(Integer value) {
            addCriterion("BREAKFAST_NUM =", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumNotEqualTo(Integer value) {
            addCriterion("BREAKFAST_NUM <>", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumGreaterThan(Integer value) {
            addCriterion("BREAKFAST_NUM >", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("BREAKFAST_NUM >=", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumLessThan(Integer value) {
            addCriterion("BREAKFAST_NUM <", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumLessThanOrEqualTo(Integer value) {
            addCriterion("BREAKFAST_NUM <=", value, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumIn(List<Integer> values) {
            addCriterion("BREAKFAST_NUM in", values, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumNotIn(List<Integer> values) {
            addCriterion("BREAKFAST_NUM not in", values, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumBetween(Integer value1, Integer value2) {
            addCriterion("BREAKFAST_NUM between", value1, value2, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andBreakfastNumNotBetween(Integer value1, Integer value2) {
            addCriterion("BREAKFAST_NUM not between", value1, value2, "breakfastNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumIsNull() {
            addCriterion("LUNCH_NUM is null");
            return (Criteria) this;
        }

        public Criteria andLunchNumIsNotNull() {
            addCriterion("LUNCH_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andLunchNumEqualTo(Integer value) {
            addCriterion("LUNCH_NUM =", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumNotEqualTo(Integer value) {
            addCriterion("LUNCH_NUM <>", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumGreaterThan(Integer value) {
            addCriterion("LUNCH_NUM >", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("LUNCH_NUM >=", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumLessThan(Integer value) {
            addCriterion("LUNCH_NUM <", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumLessThanOrEqualTo(Integer value) {
            addCriterion("LUNCH_NUM <=", value, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumIn(List<Integer> values) {
            addCriterion("LUNCH_NUM in", values, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumNotIn(List<Integer> values) {
            addCriterion("LUNCH_NUM not in", values, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumBetween(Integer value1, Integer value2) {
            addCriterion("LUNCH_NUM between", value1, value2, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andLunchNumNotBetween(Integer value1, Integer value2) {
            addCriterion("LUNCH_NUM not between", value1, value2, "lunchNum");
            return (Criteria) this;
        }

        public Criteria andCollegeIsNull() {
            addCriterion("COLLEGE is null");
            return (Criteria) this;
        }

        public Criteria andCollegeIsNotNull() {
            addCriterion("COLLEGE is not null");
            return (Criteria) this;
        }

        public Criteria andCollegeEqualTo(String value) {
            addCriterion("COLLEGE =", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeNotEqualTo(String value) {
            addCriterion("COLLEGE <>", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeGreaterThan(String value) {
            addCriterion("COLLEGE >", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeGreaterThanOrEqualTo(String value) {
            addCriterion("COLLEGE >=", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeLessThan(String value) {
            addCriterion("COLLEGE <", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeLessThanOrEqualTo(String value) {
            addCriterion("COLLEGE <=", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeLike(String value) {
            addCriterion("COLLEGE like", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeNotLike(String value) {
            addCriterion("COLLEGE not like", value, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeIn(List<String> values) {
            addCriterion("COLLEGE in", values, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeNotIn(List<String> values) {
            addCriterion("COLLEGE not in", values, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeBetween(String value1, String value2) {
            addCriterion("COLLEGE between", value1, value2, "college");
            return (Criteria) this;
        }

        public Criteria andCollegeNotBetween(String value1, String value2) {
            addCriterion("COLLEGE not between", value1, value2, "college");
            return (Criteria) this;
        }

        public Criteria andMealTypeIsNull() {
            addCriterion("MEAL_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andMealTypeIsNotNull() {
            addCriterion("MEAL_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andMealTypeEqualTo(String value) {
            addCriterion("MEAL_TYPE =", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotEqualTo(String value) {
            addCriterion("MEAL_TYPE <>", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeGreaterThan(String value) {
            addCriterion("MEAL_TYPE >", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeGreaterThanOrEqualTo(String value) {
            addCriterion("MEAL_TYPE >=", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeLessThan(String value) {
            addCriterion("MEAL_TYPE <", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeLessThanOrEqualTo(String value) {
            addCriterion("MEAL_TYPE <=", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeLike(String value) {
            addCriterion("MEAL_TYPE like", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotLike(String value) {
            addCriterion("MEAL_TYPE not like", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeIn(List<String> values) {
            addCriterion("MEAL_TYPE in", values, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotIn(List<String> values) {
            addCriterion("MEAL_TYPE not in", values, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeBetween(String value1, String value2) {
            addCriterion("MEAL_TYPE between", value1, value2, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotBetween(String value1, String value2) {
            addCriterion("MEAL_TYPE not between", value1, value2, "mealType");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeIsNull() {
            addCriterion("PREDESTINE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeIsNotNull() {
            addCriterion("PREDESTINE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeEqualTo(Date value) {
            addCriterion("PREDESTINE_TIME =", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeNotEqualTo(Date value) {
            addCriterion("PREDESTINE_TIME <>", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeGreaterThan(Date value) {
            addCriterion("PREDESTINE_TIME >", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PREDESTINE_TIME >=", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeLessThan(Date value) {
            addCriterion("PREDESTINE_TIME <", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeLessThanOrEqualTo(Date value) {
            addCriterion("PREDESTINE_TIME <=", value, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeIn(List<Date> values) {
            addCriterion("PREDESTINE_TIME in", values, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeNotIn(List<Date> values) {
            addCriterion("PREDESTINE_TIME not in", values, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeBetween(Date value1, Date value2) {
            addCriterion("PREDESTINE_TIME between", value1, value2, "predestineTime");
            return (Criteria) this;
        }

        public Criteria andPredestineTimeNotBetween(Date value1, Date value2) {
            addCriterion("PREDESTINE_TIME not between", value1, value2, "predestineTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_manage
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meal_manage
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}