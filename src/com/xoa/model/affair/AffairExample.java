package com.xoa.model.affair;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AffairExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table affair
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table affair
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table affair
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public AffairExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table affair
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andAffIdIsNull() {
            addCriterion("AFF_ID is null");
            return (Criteria) this;
        }

        public Criteria andAffIdIsNotNull() {
            addCriterion("AFF_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAffIdEqualTo(Integer value) {
            addCriterion("AFF_ID =", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdNotEqualTo(Integer value) {
            addCriterion("AFF_ID <>", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdGreaterThan(Integer value) {
            addCriterion("AFF_ID >", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("AFF_ID >=", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdLessThan(Integer value) {
            addCriterion("AFF_ID <", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdLessThanOrEqualTo(Integer value) {
            addCriterion("AFF_ID <=", value, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdIn(List<Integer> values) {
            addCriterion("AFF_ID in", values, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdNotIn(List<Integer> values) {
            addCriterion("AFF_ID not in", values, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdBetween(Integer value1, Integer value2) {
            addCriterion("AFF_ID between", value1, value2, "affId");
            return (Criteria) this;
        }

        public Criteria andAffIdNotBetween(Integer value1, Integer value2) {
            addCriterion("AFF_ID not between", value1, value2, "affId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIsNull() {
            addCriterion("BEGIN_TIME is null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIsNotNull() {
            addCriterion("BEGIN_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeEqualTo(Integer value) {
            addCriterion("BEGIN_TIME =", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotEqualTo(Integer value) {
            addCriterion("BEGIN_TIME <>", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeGreaterThan(Integer value) {
            addCriterion("BEGIN_TIME >", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("BEGIN_TIME >=", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeLessThan(Integer value) {
            addCriterion("BEGIN_TIME <", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeLessThanOrEqualTo(Integer value) {
            addCriterion("BEGIN_TIME <=", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIn(List<Integer> values) {
            addCriterion("BEGIN_TIME in", values, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotIn(List<Integer> values) {
            addCriterion("BEGIN_TIME not in", values, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeBetween(Integer value1, Integer value2) {
            addCriterion("BEGIN_TIME between", value1, value2, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("BEGIN_TIME not between", value1, value2, "beginTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("END_TIME is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("END_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Integer value) {
            addCriterion("END_TIME =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Integer value) {
            addCriterion("END_TIME <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Integer value) {
            addCriterion("END_TIME >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("END_TIME >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Integer value) {
            addCriterion("END_TIME <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Integer value) {
            addCriterion("END_TIME <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Integer> values) {
            addCriterion("END_TIME in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Integer> values) {
            addCriterion("END_TIME not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Integer value1, Integer value2) {
            addCriterion("END_TIME between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("END_TIME not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("TYPE like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("TYPE not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andRemindDateIsNull() {
            addCriterion("REMIND_DATE is null");
            return (Criteria) this;
        }

        public Criteria andRemindDateIsNotNull() {
            addCriterion("REMIND_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andRemindDateEqualTo(String value) {
            addCriterion("REMIND_DATE =", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateNotEqualTo(String value) {
            addCriterion("REMIND_DATE <>", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateGreaterThan(String value) {
            addCriterion("REMIND_DATE >", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateGreaterThanOrEqualTo(String value) {
            addCriterion("REMIND_DATE >=", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateLessThan(String value) {
            addCriterion("REMIND_DATE <", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateLessThanOrEqualTo(String value) {
            addCriterion("REMIND_DATE <=", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateLike(String value) {
            addCriterion("REMIND_DATE like", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateNotLike(String value) {
            addCriterion("REMIND_DATE not like", value, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateIn(List<String> values) {
            addCriterion("REMIND_DATE in", values, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateNotIn(List<String> values) {
            addCriterion("REMIND_DATE not in", values, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateBetween(String value1, String value2) {
            addCriterion("REMIND_DATE between", value1, value2, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindDateNotBetween(String value1, String value2) {
            addCriterion("REMIND_DATE not between", value1, value2, "remindDate");
            return (Criteria) this;
        }

        public Criteria andRemindTimeIsNull() {
            addCriterion("REMIND_TIME is null");
            return (Criteria) this;
        }

        public Criteria andRemindTimeIsNotNull() {
            addCriterion("REMIND_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andRemindTimeEqualTo(Date value) {
            addCriterionForJDBCTime("REMIND_TIME =", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("REMIND_TIME <>", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("REMIND_TIME >", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("REMIND_TIME >=", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeLessThan(Date value) {
            addCriterionForJDBCTime("REMIND_TIME <", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("REMIND_TIME <=", value, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeIn(List<Date> values) {
            addCriterionForJDBCTime("REMIND_TIME in", values, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("REMIND_TIME not in", values, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("REMIND_TIME between", value1, value2, "remindTime");
            return (Criteria) this;
        }

        public Criteria andRemindTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("REMIND_TIME not between", value1, value2, "remindTime");
            return (Criteria) this;
        }

        public Criteria andLastRemindIsNull() {
            addCriterion("LAST_REMIND is null");
            return (Criteria) this;
        }

        public Criteria andLastRemindIsNotNull() {
            addCriterion("LAST_REMIND is not null");
            return (Criteria) this;
        }

        public Criteria andLastRemindEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_REMIND =", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindNotEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_REMIND <>", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindGreaterThan(Date value) {
            addCriterionForJDBCDate("LAST_REMIND >", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_REMIND >=", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindLessThan(Date value) {
            addCriterionForJDBCDate("LAST_REMIND <", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_REMIND <=", value, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_REMIND in", values, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindNotIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_REMIND not in", values, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_REMIND between", value1, value2, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andLastRemindNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_REMIND not between", value1, value2, "lastRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindIsNull() {
            addCriterion("SMS_REMIND is null");
            return (Criteria) this;
        }

        public Criteria andSmsRemindIsNotNull() {
            addCriterion("SMS_REMIND is not null");
            return (Criteria) this;
        }

        public Criteria andSmsRemindEqualTo(String value) {
            addCriterion("SMS_REMIND =", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindNotEqualTo(String value) {
            addCriterion("SMS_REMIND <>", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindGreaterThan(String value) {
            addCriterion("SMS_REMIND >", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindGreaterThanOrEqualTo(String value) {
            addCriterion("SMS_REMIND >=", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindLessThan(String value) {
            addCriterion("SMS_REMIND <", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindLessThanOrEqualTo(String value) {
            addCriterion("SMS_REMIND <=", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindLike(String value) {
            addCriterion("SMS_REMIND like", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindNotLike(String value) {
            addCriterion("SMS_REMIND not like", value, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindIn(List<String> values) {
            addCriterion("SMS_REMIND in", values, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindNotIn(List<String> values) {
            addCriterion("SMS_REMIND not in", values, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindBetween(String value1, String value2) {
            addCriterion("SMS_REMIND between", value1, value2, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSmsRemindNotBetween(String value1, String value2) {
            addCriterion("SMS_REMIND not between", value1, value2, "smsRemind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindIsNull() {
            addCriterion("SMS2_REMIND is null");
            return (Criteria) this;
        }

        public Criteria andSms2RemindIsNotNull() {
            addCriterion("SMS2_REMIND is not null");
            return (Criteria) this;
        }

        public Criteria andSms2RemindEqualTo(String value) {
            addCriterion("SMS2_REMIND =", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindNotEqualTo(String value) {
            addCriterion("SMS2_REMIND <>", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindGreaterThan(String value) {
            addCriterion("SMS2_REMIND >", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindGreaterThanOrEqualTo(String value) {
            addCriterion("SMS2_REMIND >=", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindLessThan(String value) {
            addCriterion("SMS2_REMIND <", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindLessThanOrEqualTo(String value) {
            addCriterion("SMS2_REMIND <=", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindLike(String value) {
            addCriterion("SMS2_REMIND like", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindNotLike(String value) {
            addCriterion("SMS2_REMIND not like", value, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindIn(List<String> values) {
            addCriterion("SMS2_REMIND in", values, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindNotIn(List<String> values) {
            addCriterion("SMS2_REMIND not in", values, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindBetween(String value1, String value2) {
            addCriterion("SMS2_REMIND between", value1, value2, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andSms2RemindNotBetween(String value1, String value2) {
            addCriterion("SMS2_REMIND not between", value1, value2, "sms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindIsNull() {
            addCriterion("LAST_SMS2_REMIND is null");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindIsNotNull() {
            addCriterion("LAST_SMS2_REMIND is not null");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND =", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindNotEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND <>", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindGreaterThan(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND >", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND >=", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindLessThan(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND <", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND <=", value, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND in", values, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindNotIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND not in", values, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND between", value1, value2, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andLastSms2RemindNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_SMS2_REMIND not between", value1, value2, "lastSms2Remind");
            return (Criteria) this;
        }

        public Criteria andManagerIdIsNull() {
            addCriterion("MANAGER_ID is null");
            return (Criteria) this;
        }

        public Criteria andManagerIdIsNotNull() {
            addCriterion("MANAGER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andManagerIdEqualTo(String value) {
            addCriterion("MANAGER_ID =", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdNotEqualTo(String value) {
            addCriterion("MANAGER_ID <>", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdGreaterThan(String value) {
            addCriterion("MANAGER_ID >", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdGreaterThanOrEqualTo(String value) {
            addCriterion("MANAGER_ID >=", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdLessThan(String value) {
            addCriterion("MANAGER_ID <", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdLessThanOrEqualTo(String value) {
            addCriterion("MANAGER_ID <=", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdLike(String value) {
            addCriterion("MANAGER_ID like", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdNotLike(String value) {
            addCriterion("MANAGER_ID not like", value, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdIn(List<String> values) {
            addCriterion("MANAGER_ID in", values, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdNotIn(List<String> values) {
            addCriterion("MANAGER_ID not in", values, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdBetween(String value1, String value2) {
            addCriterion("MANAGER_ID between", value1, value2, "managerId");
            return (Criteria) this;
        }

        public Criteria andManagerIdNotBetween(String value1, String value2) {
            addCriterion("MANAGER_ID not between", value1, value2, "managerId");
            return (Criteria) this;
        }

        public Criteria andCalTypeIsNull() {
            addCriterion("CAL_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andCalTypeIsNotNull() {
            addCriterion("CAL_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andCalTypeEqualTo(String value) {
            addCriterion("CAL_TYPE =", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeNotEqualTo(String value) {
            addCriterion("CAL_TYPE <>", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeGreaterThan(String value) {
            addCriterion("CAL_TYPE >", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CAL_TYPE >=", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeLessThan(String value) {
            addCriterion("CAL_TYPE <", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeLessThanOrEqualTo(String value) {
            addCriterion("CAL_TYPE <=", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeLike(String value) {
            addCriterion("CAL_TYPE like", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeNotLike(String value) {
            addCriterion("CAL_TYPE not like", value, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeIn(List<String> values) {
            addCriterion("CAL_TYPE in", values, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeNotIn(List<String> values) {
            addCriterion("CAL_TYPE not in", values, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeBetween(String value1, String value2) {
            addCriterion("CAL_TYPE between", value1, value2, "calType");
            return (Criteria) this;
        }

        public Criteria andCalTypeNotBetween(String value1, String value2) {
            addCriterion("CAL_TYPE not between", value1, value2, "calType");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("ADD_TIME is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("ADD_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(Date value) {
            addCriterion("ADD_TIME =", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(Date value) {
            addCriterion("ADD_TIME <>", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(Date value) {
            addCriterion("ADD_TIME >", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ADD_TIME >=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(Date value) {
            addCriterion("ADD_TIME <", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(Date value) {
            addCriterion("ADD_TIME <=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<Date> values) {
            addCriterion("ADD_TIME in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<Date> values) {
            addCriterion("ADD_TIME not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(Date value1, Date value2) {
            addCriterion("ADD_TIME between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(Date value1, Date value2) {
            addCriterion("ADD_TIME not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeIsNull() {
            addCriterion("BEGIN_TIME_TIME is null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeIsNotNull() {
            addCriterion("BEGIN_TIME_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeEqualTo(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME =", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME <>", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME >", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME >=", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeLessThan(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME <", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME <=", value, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeIn(List<Date> values) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME in", values, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME not in", values, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME between", value1, value2, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("BEGIN_TIME_TIME not between", value1, value2, "beginTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeIsNull() {
            addCriterion("END_TIME_TIME is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeIsNotNull() {
            addCriterion("END_TIME_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeEqualTo(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME =", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME <>", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME >", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME >=", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeLessThan(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME <", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("END_TIME_TIME <=", value, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeIn(List<Date> values) {
            addCriterionForJDBCTime("END_TIME_TIME in", values, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("END_TIME_TIME not in", values, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("END_TIME_TIME between", value1, value2, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("END_TIME_TIME not between", value1, value2, "endTimeTime");
            return (Criteria) this;
        }

        public Criteria andAlldayIsNull() {
            addCriterion("ALLDAY is null");
            return (Criteria) this;
        }

        public Criteria andAlldayIsNotNull() {
            addCriterion("ALLDAY is not null");
            return (Criteria) this;
        }

        public Criteria andAlldayEqualTo(Byte value) {
            addCriterion("ALLDAY =", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayNotEqualTo(Byte value) {
            addCriterion("ALLDAY <>", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayGreaterThan(Byte value) {
            addCriterion("ALLDAY >", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayGreaterThanOrEqualTo(Byte value) {
            addCriterion("ALLDAY >=", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayLessThan(Byte value) {
            addCriterion("ALLDAY <", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayLessThanOrEqualTo(Byte value) {
            addCriterion("ALLDAY <=", value, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayIn(List<Byte> values) {
            addCriterion("ALLDAY in", values, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayNotIn(List<Byte> values) {
            addCriterion("ALLDAY not in", values, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayBetween(Byte value1, Byte value2) {
            addCriterion("ALLDAY between", value1, value2, "allday");
            return (Criteria) this;
        }

        public Criteria andAlldayNotBetween(Byte value1, Byte value2) {
            addCriterion("ALLDAY not between", value1, value2, "allday");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table affair
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table affair
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}