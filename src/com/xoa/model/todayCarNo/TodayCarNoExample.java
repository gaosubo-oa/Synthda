package com.xoa.model.todayCarNo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TodayCarNoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public TodayCarNoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("DATE is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("DATE is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("DATE =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATE <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("DATE >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("DATE <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("DATE in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATE not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("CITY is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("CITY is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(String value) {
            addCriterion("CITY =", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(String value) {
            addCriterion("CITY <>", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(String value) {
            addCriterion("CITY >", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(String value) {
            addCriterion("CITY >=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThan(String value) {
            addCriterion("CITY <", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(String value) {
            addCriterion("CITY <=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLike(String value) {
            addCriterion("CITY like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotLike(String value) {
            addCriterion("CITY not like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityIn(List<String> values) {
            addCriterion("CITY in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<String> values) {
            addCriterion("CITY not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(String value1, String value2) {
            addCriterion("CITY between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(String value1, String value2) {
            addCriterion("CITY not between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagIsNull() {
            addCriterion("RESTRICTION_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagIsNotNull() {
            addCriterion("RESTRICTION_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagEqualTo(String value) {
            addCriterion("RESTRICTION_FLAG =", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagNotEqualTo(String value) {
            addCriterion("RESTRICTION_FLAG <>", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagGreaterThan(String value) {
            addCriterion("RESTRICTION_FLAG >", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagGreaterThanOrEqualTo(String value) {
            addCriterion("RESTRICTION_FLAG >=", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagLessThan(String value) {
            addCriterion("RESTRICTION_FLAG <", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagLessThanOrEqualTo(String value) {
            addCriterion("RESTRICTION_FLAG <=", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagLike(String value) {
            addCriterion("RESTRICTION_FLAG like", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagNotLike(String value) {
            addCriterion("RESTRICTION_FLAG not like", value, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagIn(List<String> values) {
            addCriterion("RESTRICTION_FLAG in", values, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagNotIn(List<String> values) {
            addCriterion("RESTRICTION_FLAG not in", values, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagBetween(String value1, String value2) {
            addCriterion("RESTRICTION_FLAG between", value1, value2, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionFlagNotBetween(String value1, String value2) {
            addCriterion("RESTRICTION_FLAG not between", value1, value2, "restrictionFlag");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumIsNull() {
            addCriterion("RESTRICTION_NUM is null");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumIsNotNull() {
            addCriterion("RESTRICTION_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumEqualTo(String value) {
            addCriterion("RESTRICTION_NUM =", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumNotEqualTo(String value) {
            addCriterion("RESTRICTION_NUM <>", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumGreaterThan(String value) {
            addCriterion("RESTRICTION_NUM >", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumGreaterThanOrEqualTo(String value) {
            addCriterion("RESTRICTION_NUM >=", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumLessThan(String value) {
            addCriterion("RESTRICTION_NUM <", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumLessThanOrEqualTo(String value) {
            addCriterion("RESTRICTION_NUM <=", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumLike(String value) {
            addCriterion("RESTRICTION_NUM like", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumNotLike(String value) {
            addCriterion("RESTRICTION_NUM not like", value, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumIn(List<String> values) {
            addCriterion("RESTRICTION_NUM in", values, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumNotIn(List<String> values) {
            addCriterion("RESTRICTION_NUM not in", values, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumBetween(String value1, String value2) {
            addCriterion("RESTRICTION_NUM between", value1, value2, "restrictionNum");
            return (Criteria) this;
        }

        public Criteria andRestrictionNumNotBetween(String value1, String value2) {
            addCriterion("RESTRICTION_NUM not between", value1, value2, "restrictionNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table today_car_no
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table today_car_no
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}