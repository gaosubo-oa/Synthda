<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">

    <description>缓存配置</description>

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:redis.properties" />

    <!-- Redis缓存配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 控制一个pool可分配多少个jedis实例 -->
        <property name="maxTotal" value="${redis.pool.maxActive}" />
        <!-- 连接池中最多可空闲maxIdle个连接 ，这里取值为20，表示即使没有数据库连接时依然可以保持20空闲的连接，而不被清除，随时处于待命状态。 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <!-- 最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 在获取连接的时候检查有效性 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <!-- 创建Redis连接池，并做相关配置 -->
    <bean id="jedisWritePool" class="com.xoa.util.redis.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.pool.host}" />
        <constructor-arg index="2" value="${redis.pool.port}" type="int" />
        <constructor-arg index="3" value="${redis.pool.password}" />
    </bean>

    <!-- 创建Redis工具类，封装好Redis的连接以进行相关的操作 -->
    <bean id="jedisUtil" class="com.xoa.util.redis.JedisUtil" >
        <property name="jedisPool">
            <ref bean="jedisWritePool" />
        </property>
    </bean>

    <!-- Redis的key操作 -->
    <bean id="jedisKeys" class="com.xoa.util.redis.JedisUtil$Keys"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
    <!-- Redis的Strings操作 -->
    <bean id="jedisStrings" class="com.xoa.util.redis.JedisUtil$Strings"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
    <!-- Redis的Lists操作 -->
    <bean id="jedisLists" class="com.xoa.util.redis.JedisUtil$Lists"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
    <!-- Redis的Sets操作 -->
    <bean id="jedisSets" class="com.xoa.util.redis.JedisUtil$Sets"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
    <!-- Redis的HashMap操作 -->
    <bean id="jedisHash" class="com.xoa.util.redis.JedisUtil$Hash"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>


    <!--集群配置 开始-->
    <!--<bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig" >
        <property name="maxWaitMillis" value="-1" />
        <property name="maxTotal" value="9000" />
        <property name="minIdle" value="8" />
        <property name="maxIdle" value="100" />
    </bean>
    <bean id="jedisCluster" class="com.xoa.util.redis.JedisClusterFactory">
        <property name="addressConfig">
            <value>classpath:config/redis/redis.properties</value>
        </property>
        <property name="addressKeyPrefix" value="server" />   &lt;!&ndash;  属性文件里  key的前缀 &ndash;&gt;
        <property name="timeout" value="60000" />
        <property name="maxRedirections" value="6" />
        <property name="genericObjectPoolConfig" ref="genericObjectPoolConfig" />
    </bean>-->
    <!--集群配置 结束-->
</beans>
